// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.1
// source: btlrpc/btl.proto

package btlrpc

import (
	assetwalletrpc "github.com/lightninglabs/taproot-assets/taprpc/assetwalletrpc"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FundVirtualPsbtRequest2 struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Template:
	//
	//	*FundVirtualPsbtRequest2_Psbt
	//	*FundVirtualPsbtRequest2_Raw
	Template       isFundVirtualPsbtRequest2_Template `protobuf_oneof:"template"`
	CoinSelectType assetwalletrpc.CoinSelectType      `protobuf:"varint,3,opt,name=coin_select_type,json=coinSelectType,proto3,enum=assetwalletrpc.CoinSelectType" json:"coin_select_type,omitempty"`
	// 硬币过滤器
	CoinsFilter   *CoinsFilter `protobuf:"bytes,4,opt,name=coins_filter,json=coinsFilter,proto3" json:"coins_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundVirtualPsbtRequest2) Reset() {
	*x = FundVirtualPsbtRequest2{}
	mi := &file_btlrpc_btl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundVirtualPsbtRequest2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundVirtualPsbtRequest2) ProtoMessage() {}

func (x *FundVirtualPsbtRequest2) ProtoReflect() protoreflect.Message {
	mi := &file_btlrpc_btl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundVirtualPsbtRequest2.ProtoReflect.Descriptor instead.
func (*FundVirtualPsbtRequest2) Descriptor() ([]byte, []int) {
	return file_btlrpc_btl_proto_rawDescGZIP(), []int{0}
}

func (x *FundVirtualPsbtRequest2) GetTemplate() isFundVirtualPsbtRequest2_Template {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *FundVirtualPsbtRequest2) GetPsbt() []byte {
	if x != nil {
		if x, ok := x.Template.(*FundVirtualPsbtRequest2_Psbt); ok {
			return x.Psbt
		}
	}
	return nil
}

func (x *FundVirtualPsbtRequest2) GetRaw() *assetwalletrpc.TxTemplate {
	if x != nil {
		if x, ok := x.Template.(*FundVirtualPsbtRequest2_Raw); ok {
			return x.Raw
		}
	}
	return nil
}

func (x *FundVirtualPsbtRequest2) GetCoinSelectType() assetwalletrpc.CoinSelectType {
	if x != nil {
		return x.CoinSelectType
	}
	return assetwalletrpc.CoinSelectType(0)
}

func (x *FundVirtualPsbtRequest2) GetCoinsFilter() *CoinsFilter {
	if x != nil {
		return x.CoinsFilter
	}
	return nil
}

type isFundVirtualPsbtRequest2_Template interface {
	isFundVirtualPsbtRequest2_Template()
}

type FundVirtualPsbtRequest2_Psbt struct {
	// 使用现有 PSBT 数据包作为资助的 PSBT 的模板
	Psbt []byte `protobuf:"bytes,1,opt,name=psbt,proto3,oneof"`
}

type FundVirtualPsbtRequest2_Raw struct {
	// 使用此原始模板中的资产输出和可选资产输入
	Raw *assetwalletrpc.TxTemplate `protobuf:"bytes,2,opt,name=raw,proto3,oneof"`
}

func (*FundVirtualPsbtRequest2_Psbt) isFundVirtualPsbtRequest2_Template() {}

func (*FundVirtualPsbtRequest2_Raw) isFundVirtualPsbtRequest2_Template() {}

type CoinsFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用于指定使用的硬币
	Coins         []*Coin `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CoinsFilter) Reset() {
	*x = CoinsFilter{}
	mi := &file_btlrpc_btl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoinsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinsFilter) ProtoMessage() {}

func (x *CoinsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_btlrpc_btl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinsFilter.ProtoReflect.Descriptor instead.
func (*CoinsFilter) Descriptor() ([]byte, []int) {
	return file_btlrpc_btl_proto_rawDescGZIP(), []int{1}
}

func (x *CoinsFilter) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type GetListEligibleCoinsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListEligibleCoinsRequest) Reset() {
	*x = GetListEligibleCoinsRequest{}
	mi := &file_btlrpc_btl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListEligibleCoinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListEligibleCoinsRequest) ProtoMessage() {}

func (x *GetListEligibleCoinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_btlrpc_btl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListEligibleCoinsRequest.ProtoReflect.Descriptor instead.
func (*GetListEligibleCoinsRequest) Descriptor() ([]byte, []int) {
	return file_btlrpc_btl_proto_rawDescGZIP(), []int{2}
}

func (x *GetListEligibleCoinsRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

type GetListEligibleCoinsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coins         []*Coin                `protobuf:"bytes,1,rep,name=coins,proto3" json:"coins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListEligibleCoinsResponse) Reset() {
	*x = GetListEligibleCoinsResponse{}
	mi := &file_btlrpc_btl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListEligibleCoinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListEligibleCoinsResponse) ProtoMessage() {}

func (x *GetListEligibleCoinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_btlrpc_btl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListEligibleCoinsResponse.ProtoReflect.Descriptor instead.
func (*GetListEligibleCoinsResponse) Descriptor() ([]byte, []int) {
	return file_btlrpc_btl_proto_rawDescGZIP(), []int{3}
}

func (x *GetListEligibleCoinsResponse) GetCoins() []*Coin {
	if x != nil {
		return x.Coins
	}
	return nil
}

type Coin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Commitment 在主链中锚定的 outpoint
	AnchorPoint string `protobuf:"bytes,1,opt,name=anchor_point,json=anchorPoint,proto3" json:"anchor_point,omitempty"`
	// 用于将 commit 锚定在上述 out point 的内部 key
	InternalKey []byte `protobuf:"bytes,2,opt,name=internal_key,json=internalKey,proto3" json:"internal_key,omitempty"`
	// 资产数量
	AssetAmount   uint64 `protobuf:"varint,3,opt,name=AssetAmount,proto3" json:"AssetAmount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Coin) Reset() {
	*x = Coin{}
	mi := &file_btlrpc_btl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Coin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coin) ProtoMessage() {}

func (x *Coin) ProtoReflect() protoreflect.Message {
	mi := &file_btlrpc_btl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coin.ProtoReflect.Descriptor instead.
func (*Coin) Descriptor() ([]byte, []int) {
	return file_btlrpc_btl_proto_rawDescGZIP(), []int{4}
}

func (x *Coin) GetAnchorPoint() string {
	if x != nil {
		return x.AnchorPoint
	}
	return ""
}

func (x *Coin) GetInternalKey() []byte {
	if x != nil {
		return x.InternalKey
	}
	return nil
}

func (x *Coin) GetAssetAmount() uint64 {
	if x != nil {
		return x.AssetAmount
	}
	return 0
}

var File_btlrpc_btl_proto protoreflect.FileDescriptor

var file_btlrpc_btl_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x62, 0x74, 0x6c, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x74, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x62, 0x74, 0x6c, 0x72, 0x70, 0x63, 0x1a, 0x20, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x01, 0x0a,
	0x17, 0x46, 0x75, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x73, 0x62, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x12, 0x14, 0x0a, 0x04, 0x70, 0x73, 0x62, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x70, 0x73, 0x62, 0x74, 0x12, 0x2e,
	0x0a, 0x03, 0x72, 0x61, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x54, 0x78, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x61, 0x77, 0x12, 0x48,
	0x0a, 0x10, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x63, 0x6f, 0x69, 0x6e,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x62, 0x74, 0x6c, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x42, 0x0a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x31, 0x0a, 0x0b,
	0x43, 0x6f, 0x69, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x74, 0x6c,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22,
	0x38, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x63, 0x6f, 0x69,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x74, 0x6c, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x22, 0x6e, 0x0a,
	0x04, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x63, 0x68, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6e, 0x63,
	0x68, 0x6f, 0x72, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xc6, 0x01,
	0x0a, 0x03, 0x42, 0x74, 0x6c, 0x12, 0x5c, 0x0a, 0x10, 0x46, 0x75, 0x6e, 0x64, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x50, 0x73, 0x62, 0x74, 0x32, 0x12, 0x1f, 0x2e, 0x62, 0x74, 0x6c, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x64, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x73,
	0x62, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0x1a, 0x27, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x75, 0x6e, 0x64,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x73, 0x62, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x12, 0x23, 0x2e, 0x62, 0x74,
	0x6c, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6c, 0x69, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x62, 0x74, 0x6c, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x69, 0x6e, 0x67, 0x6c, 0x61,
	0x62, 0x73, 0x2f, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x2d, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2f, 0x74, 0x61, 0x70, 0x72, 0x70, 0x63, 0x2f, 0x62, 0x74, 0x6c, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_btlrpc_btl_proto_rawDescOnce sync.Once
	file_btlrpc_btl_proto_rawDescData []byte
)

func file_btlrpc_btl_proto_rawDescGZIP() []byte {
	file_btlrpc_btl_proto_rawDescOnce.Do(func() {
		file_btlrpc_btl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_btlrpc_btl_proto_rawDesc), len(file_btlrpc_btl_proto_rawDesc)))
	})
	return file_btlrpc_btl_proto_rawDescData
}

var file_btlrpc_btl_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_btlrpc_btl_proto_goTypes = []any{
	(*FundVirtualPsbtRequest2)(nil),                // 0: btlrpc.FundVirtualPsbtRequest2
	(*CoinsFilter)(nil),                            // 1: btlrpc.CoinsFilter
	(*GetListEligibleCoinsRequest)(nil),            // 2: btlrpc.GetListEligibleCoinsRequest
	(*GetListEligibleCoinsResponse)(nil),           // 3: btlrpc.GetListEligibleCoinsResponse
	(*Coin)(nil),                                   // 4: btlrpc.Coin
	(*assetwalletrpc.TxTemplate)(nil),              // 5: assetwalletrpc.TxTemplate
	(assetwalletrpc.CoinSelectType)(0),             // 6: assetwalletrpc.CoinSelectType
	(*assetwalletrpc.FundVirtualPsbtResponse)(nil), // 7: assetwalletrpc.FundVirtualPsbtResponse
}
var file_btlrpc_btl_proto_depIdxs = []int32{
	5, // 0: btlrpc.FundVirtualPsbtRequest2.raw:type_name -> assetwalletrpc.TxTemplate
	6, // 1: btlrpc.FundVirtualPsbtRequest2.coin_select_type:type_name -> assetwalletrpc.CoinSelectType
	1, // 2: btlrpc.FundVirtualPsbtRequest2.coins_filter:type_name -> btlrpc.CoinsFilter
	4, // 3: btlrpc.CoinsFilter.coins:type_name -> btlrpc.Coin
	4, // 4: btlrpc.GetListEligibleCoinsResponse.coins:type_name -> btlrpc.Coin
	0, // 5: btlrpc.Btl.FundVirtualPsbt2:input_type -> btlrpc.FundVirtualPsbtRequest2
	2, // 6: btlrpc.Btl.GetListEligibleCoins:input_type -> btlrpc.GetListEligibleCoinsRequest
	7, // 7: btlrpc.Btl.FundVirtualPsbt2:output_type -> assetwalletrpc.FundVirtualPsbtResponse
	3, // 8: btlrpc.Btl.GetListEligibleCoins:output_type -> btlrpc.GetListEligibleCoinsResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_btlrpc_btl_proto_init() }
func file_btlrpc_btl_proto_init() {
	if File_btlrpc_btl_proto != nil {
		return
	}
	file_btlrpc_btl_proto_msgTypes[0].OneofWrappers = []any{
		(*FundVirtualPsbtRequest2_Psbt)(nil),
		(*FundVirtualPsbtRequest2_Raw)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_btlrpc_btl_proto_rawDesc), len(file_btlrpc_btl_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_btlrpc_btl_proto_goTypes,
		DependencyIndexes: file_btlrpc_btl_proto_depIdxs,
		MessageInfos:      file_btlrpc_btl_proto_msgTypes,
	}.Build()
	File_btlrpc_btl_proto = out.File
	file_btlrpc_btl_proto_goTypes = nil
	file_btlrpc_btl_proto_depIdxs = nil
}
