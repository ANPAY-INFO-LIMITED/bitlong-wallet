{"version":3,"file":"static/js/328.20de56b2.chunk.js","mappings":"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","sources":["components/common/FormField.tsx","components/common/FormInput.tsx","components/common/PageHeader.tsx","components/settings/SettingItem.tsx","components/settings/BalanceSettings.tsx","components/settings/ExplorerSettings.tsx","components/settings/GeneralSettings.tsx","components/settings/UnitSettings.tsx","components/settings/SettingsPage.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { HeaderFour, HelpCircle } from 'components/base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div``,\r\n  Info: styled.div<{ error?: boolean }>`\r\n    width: 100%;\r\n    margin: 0 0 15px;\r\n    padding: 5px 0;\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    background-color: ${props => (props.error ? props.theme.colors.pink : 'transparent')};\r\n    color: ${props =>\r\n      props.error ? props.theme.colors.offWhite : props.theme.colors.gray};\r\n    text-align: ${props => (props.error ? 'center' : 'right')};\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  label?: string;\r\n  info?: ReactNode;\r\n  error?: ReactNode;\r\n  tip?: string;\r\n  className?: string;\r\n}\r\n\r\nconst FormField: React.FC<Props> = ({ label, info, error, tip, children, className }) => {\r\n  const { Wrapper, Info } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      {label && (\r\n        <HeaderFour>\r\n          {label}\r\n          {tip && (\r\n            <Tip overlay={tip} placement=\"right\" capitalize={false}>\r\n              <HelpCircle size=\"medium\" />\r\n            </Tip>\r\n          )}\r\n        </HeaderFour>\r\n      )}\r\n      {children}\r\n      <Info error={!!error}>{error || info}</Info>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    position: relative;\r\n    font-family: ${props => props.theme.fonts.work.light};\r\n    font-weight: 300;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.offWhite};\r\n  `,\r\n  Input: styled.input`\r\n    color: ${props => props.theme.colors.offWhite};\r\n    background-color: ${props => props.theme.colors.overlay};\r\n    border-width: 0;\r\n    border-bottom: 1px solid ${props => props.theme.colors.gray};\r\n    padding: 5px 40px 5px 5px;\r\n    width: 100%;\r\n\r\n    &:active,\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom-color: ${props => props.theme.colors.white};\r\n    }\r\n\r\n    &::placeholder {\r\n      color: ${props => props.theme.colors.gray};\r\n    }\r\n  `,\r\n  Extra: styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: transparent;\r\n    padding: 5px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  label?: string;\r\n  value?: string;\r\n  extra?: ReactNode;\r\n  placeholder?: string;\r\n  className?: string;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nconst FormInput: React.FC<Props> = ({\r\n  label,\r\n  value,\r\n  placeholder,\r\n  extra,\r\n  className,\r\n  onChange,\r\n}) => {\r\n  const { Wrapper, Input, Extra } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Input\r\n        value={value}\r\n        onChange={e => onChange && onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        aria-label={label}\r\n      />\r\n      {extra && <Extra>{extra}</Extra>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { ArrowLeft, Download, HeaderThree, HelpCircle } from '../base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n  Left: styled.span`\r\n    flex: 1;\r\n    padding-left: 16px;\r\n    text-align: left;\r\n  `,\r\n  Center: styled.span`\r\n    flex: 1;\r\n    text-align: center;\r\n  `,\r\n  Right: styled.span`\r\n    flex: 1;\r\n    text-align: right;\r\n\r\n    svg {\r\n      margin-left: 20px;\r\n    }\r\n  `,\r\n  BackLink: styled.a`\r\n    text-transform: uppercase;\r\n    color: ${props => props.theme.colors.offWhite};\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    cursor: pointer;\r\n    line-height: 36px;\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.colors.offWhite};\r\n      opacity: 80%;\r\n      text-decoration: none;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  onBackClick?: () => void;\r\n  backText?: string;\r\n  onHelpClick?: () => void;\r\n  exportTip?: string;\r\n  onExportClick?: () => void;\r\n}\r\n\r\nconst PageHeader: React.FC<Props> = ({\r\n  title,\r\n  onBackClick,\r\n  backText,\r\n  onHelpClick,\r\n  exportTip,\r\n  onExportClick,\r\n}) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.PageHeader');\r\n\r\n  const { Wrapper, Left, Center, Right, BackLink } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Left>\r\n        {onBackClick && (\r\n          <BackLink onClick={onBackClick}>\r\n            <ArrowLeft />\r\n            {backText}\r\n          </BackLink>\r\n        )}\r\n      </Left>\r\n      <Center>\r\n        <HeaderThree data-tour=\"welcome\">{title}</HeaderThree>\r\n      </Center>\r\n      <Right>\r\n        {onHelpClick && (\r\n          <Tip placement=\"bottomRight\" overlay={l('helpTip')}>\r\n            <HelpCircle size=\"large\" onClick={onHelpClick} />\r\n          </Tip>\r\n        )}\r\n        {onExportClick && (\r\n          <Tip placement=\"bottomRight\" overlay={exportTip || l('exportTip')}>\r\n            <Download data-tour=\"export\" size=\"large\" onClick={onExportClick} />\r\n          </Tip>\r\n        )}\r\n      </Right>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(PageHeader);\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { ArrowRight, Copy, RadioButton } from 'components/base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 80px;\r\n    cursor: pointer;\r\n    border-bottom: 0.5px solid ${props => props.theme.colors.lightBlue};\r\n\r\n    &:last-child {\r\n      border-bottom-width: 0;\r\n    }\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  `,\r\n  Name: styled.span`\r\n    flex: 1;\r\n    font-size: ${props => props.theme.sizes.l};\r\n  `,\r\n  Value: styled.span`\r\n    color: ${props => props.theme.colors.gray};\r\n    margin-right: 20px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  name: string;\r\n  value?: string;\r\n  icon: 'arrow' | 'radio' | 'copy';\r\n  checked?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nconst SettingItem: React.FC<Props> = ({ name, value, icon, checked, onClick }) => {\r\n  const { Wrapper, Name, Value } = Styled;\r\n  return (\r\n    <Wrapper onClick={onClick}>\r\n      <Name>{name}</Name>\r\n      {value && <Value>{value}</Value>}\r\n      {icon === 'radio' && (\r\n        <RadioButton role=\"switch\" checked={checked} aria-checked={checked} />\r\n      )}\r\n      {icon === 'arrow' && <ArrowRight size=\"large\" />}\r\n      {icon === 'copy' && <Copy size=\"large\" />}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SettingItem;\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { BalanceMode } from 'util/constants';\r\nimport { useStore } from 'store';\r\nimport { HeaderFour } from 'components/base';\r\nimport PageHeader from 'components/common/PageHeader';\r\nimport SettingItem from './SettingItem';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section``,\r\n  Content: styled.div`\r\n    margin: 100px auto;\r\n    max-width: 500px;\r\n  `,\r\n};\r\n\r\nconst BalanceModeItem: React.FC<{ mode: BalanceMode }> = observer(({ mode }) => {\r\n  const { l } = usePrefixedTranslation('enums.BalanceMode');\r\n  const { settingsStore } = useStore();\r\n\r\n  const handleClick = useCallback(() => {\r\n    settingsStore.setBalanceMode(mode);\r\n  }, [mode, settingsStore]);\r\n\r\n  return (\r\n    <SettingItem\r\n      name={l(mode)}\r\n      icon=\"radio\"\r\n      checked={settingsStore.balanceMode === mode}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n});\r\n\r\nconst BalanceSettings: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.settings.BalanceSettings');\r\n  const { appView } = useStore();\r\n\r\n  const handleBack = useCallback(() => appView.showSettings(''), [appView]);\r\n\r\n  const { Wrapper, Content } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <PageHeader\r\n        title={l('pageTitle')}\r\n        backText={l('backText')}\r\n        onBackClick={handleBack}\r\n      />\r\n      <Content>\r\n        <HeaderFour>{l('title')}</HeaderFour>\r\n        <BalanceModeItem mode={BalanceMode.receive} />\r\n        <BalanceModeItem mode={BalanceMode.send} />\r\n        <BalanceModeItem mode={BalanceMode.routing} />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(BalanceSettings);\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { BitcoinExplorerPresets, LightningExplorerPresets } from 'util/constants';\r\nimport { useStore } from 'store';\r\nimport { Button } from 'components/base';\r\nimport FormField from 'components/common/FormField';\r\nimport FormInput from 'components/common/FormInput';\r\nimport PageHeader from 'components/common/PageHeader';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section``,\r\n  Content: styled.div`\r\n    margin: 100px auto;\r\n    max-width: 800px;\r\n  `,\r\n  Actions: styled.div`\r\n    text-align: center;\r\n  `,\r\n  Field: styled.div`\r\n    margin-bottom: 60px;\r\n  `,\r\n  FormInput: styled(FormInput)`\r\n    font-family: ${props => props.theme.fonts.open.regular};\r\n    font-size: ${props => props.theme.sizes.m};\r\n\r\n    input {\r\n      padding: 10px 40px 10px 10px;\r\n    }\r\n  `,\r\n  Info: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n};\r\n\r\nconst ExplorerField: React.FC<{\r\n  label: string;\r\n  value: string;\r\n  info: string;\r\n  error?: string;\r\n  presets: Record<string, string>;\r\n  onChange: (value: string) => void;\r\n}> = observer(({ label, value, info, error, presets, onChange }) => {\r\n  const handleClick = useCallback((url: string) => onChange(url), [onChange]);\r\n\r\n  const { Field, FormInput, Info } = Styled;\r\n  const infoCmp = (\r\n    <Info>\r\n      <span>{info}</span>\r\n      <span>\r\n        {Object.entries(presets).map(([text, url]) => (\r\n          <Button key={text} ghost borderless compact onClick={() => handleClick(url)}>\r\n            {text}\r\n          </Button>\r\n        ))}\r\n      </span>\r\n    </Info>\r\n  );\r\n\r\n  return (\r\n    <Field>\r\n      <FormField label={label} error={error} info={infoCmp}>\r\n        <FormInput label={label} value={value} onChange={onChange} />\r\n      </FormField>\r\n    </Field>\r\n  );\r\n});\r\n\r\nconst ExplorerSettings: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.settings.ExplorerSettings');\r\n  const { appView, settingsStore } = useStore();\r\n\r\n  const [bitcoinTx, setBitcoinTx] = useState(settingsStore.bitcoinTxUrl);\r\n  const [lnNode, setLnNode] = useState(settingsStore.lnNodeUrl);\r\n\r\n  const bitcoinTxError = useMemo(\r\n    () => settingsStore.validateExplorerUrl(bitcoinTx, '{txid}'),\r\n    [bitcoinTx],\r\n  );\r\n  const lnNodeError = useMemo(\r\n    () => settingsStore.validateExplorerUrl(lnNode, '{pubkey}'),\r\n    [lnNode],\r\n  );\r\n\r\n  const canSave =\r\n    bitcoinTxError === '' &&\r\n    lnNodeError === '' &&\r\n    (bitcoinTx !== settingsStore.bitcoinTxUrl || lnNode !== settingsStore.lnNodeUrl);\r\n\r\n  const handleBack = useCallback(() => appView.showSettings(''), [appView]);\r\n  const handleSave = useCallback(() => settingsStore.setExplorerUrls(bitcoinTx, lnNode), [\r\n    bitcoinTx,\r\n    lnNode,\r\n  ]);\r\n\r\n  const { Wrapper, Content, Actions } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <PageHeader\r\n        title={l('pageTitle')}\r\n        backText={l('backText')}\r\n        onBackClick={handleBack}\r\n      />\r\n      <Content>\r\n        <ExplorerField\r\n          label={l('bitcoinTxUrl')}\r\n          value={bitcoinTx}\r\n          info={l('bitcoinTxInfo')}\r\n          error={bitcoinTxError}\r\n          presets={BitcoinExplorerPresets}\r\n          onChange={setBitcoinTx}\r\n        />\r\n        <ExplorerField\r\n          label={l('lnNodeUrl')}\r\n          value={lnNode}\r\n          info={l('lnNodeInfo')}\r\n          error={lnNodeError}\r\n          presets={LightningExplorerPresets}\r\n          onChange={setLnNode}\r\n        />\r\n        <Actions>\r\n          <Button primary disabled={!canSave} onClick={handleSave}>\r\n            {l('save')}\r\n          </Button>\r\n        </Actions>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ExplorerSettings);\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { formatUnit } from 'util/formatters';\r\nimport { extractDomain } from 'util/strings';\r\nimport { useStore } from 'store';\r\nimport { HeaderFour } from 'components/base';\r\nimport PageHeader from 'components/common/PageHeader';\r\nimport SettingItem from './SettingItem';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section``,\r\n  Content: styled.div`\r\n    margin: 100px 50px;\r\n  `,\r\n};\r\n\r\nconst GeneralSettings: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.settings.GeneralSettings');\r\n  const { appView, settingsStore, nodeStore } = useStore();\r\n\r\n  const handleUnit = useCallback(() => appView.showSettings('unit'), [appView]);\r\n  const handleBalance = useCallback(() => appView.showSettings('balance'), [appView]);\r\n  const handleExplorers = useCallback(() => appView.showSettings('explorers'), [appView]);\r\n  const handleCopyPubkey = useCallback(() => nodeStore.copy('pubkey'), [nodeStore]);\r\n  const handleCopyAlias = useCallback(() => nodeStore.copy('alias'), [nodeStore]);\r\n  const handleCopyUrl = useCallback(() => nodeStore.copy('url'), [nodeStore]);\r\n\r\n  const { Wrapper, Content } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <PageHeader title={l('pageTitle')} />\r\n      <Content>\r\n        <HeaderFour>{l('general')}</HeaderFour>\r\n        <SettingItem\r\n          name={l('bitcoinUnit')}\r\n          value={formatUnit(settingsStore.unit)}\r\n          onClick={handleUnit}\r\n          icon=\"arrow\"\r\n        />\r\n        <SettingItem\r\n          name={l('balances')}\r\n          value={l('balancesValue', {\r\n            mode: l(`enums.BalanceMode.${settingsStore.balanceMode}`),\r\n          })}\r\n          onClick={handleBalance}\r\n          icon=\"arrow\"\r\n        />\r\n      </Content>\r\n      <Content>\r\n        <HeaderFour>{l('explorers')}</HeaderFour>\r\n        <SettingItem\r\n          name={l('bitcoinTx')}\r\n          value={extractDomain(settingsStore.bitcoinTxUrl)}\r\n          onClick={handleExplorers}\r\n          icon=\"arrow\"\r\n        />\r\n        <SettingItem\r\n          name={l('lightningNode')}\r\n          value={extractDomain(settingsStore.lnNodeUrl)}\r\n          onClick={handleExplorers}\r\n          icon=\"arrow\"\r\n        />\r\n      </Content>\r\n      <Content>\r\n        <HeaderFour>{l('myNode')}</HeaderFour>\r\n        <SettingItem\r\n          name={l('pubkey')}\r\n          value={nodeStore.pubkeyLabel}\r\n          onClick={handleCopyPubkey}\r\n          icon=\"copy\"\r\n        />\r\n        <SettingItem\r\n          name={l('alias')}\r\n          value={nodeStore.alias}\r\n          onClick={handleCopyAlias}\r\n          icon=\"copy\"\r\n        />\r\n        {nodeStore.urlLabel && (\r\n          <SettingItem\r\n            name={l('url')}\r\n            value={nodeStore.urlLabel}\r\n            onClick={handleCopyUrl}\r\n            icon=\"copy\"\r\n          />\r\n        )}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(GeneralSettings);\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Unit } from 'util/constants';\r\nimport { formatUnit } from 'util/formatters';\r\nimport { useStore } from 'store';\r\nimport PageHeader from 'components/common/PageHeader';\r\nimport SettingItem from './SettingItem';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section``,\r\n  Content: styled.div`\r\n    margin: 100px auto;\r\n    max-width: 500px;\r\n  `,\r\n};\r\n\r\nconst UnitItem: React.FC<{ unit: Unit }> = observer(({ unit }) => {\r\n  const { settingsStore } = useStore();\r\n\r\n  const handleClick = useCallback(() => {\r\n    settingsStore.setUnit(unit);\r\n  }, [unit, settingsStore]);\r\n\r\n  return (\r\n    <SettingItem\r\n      name={formatUnit(unit)}\r\n      icon=\"radio\"\r\n      checked={settingsStore.unit === unit}\r\n      onClick={handleClick}\r\n    />\r\n  );\r\n});\r\n\r\nconst UnitSettings: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.settings.UnitSettings');\r\n  const { appView } = useStore();\r\n\r\n  const handleBack = useCallback(() => appView.showSettings(''), [appView]);\r\n\r\n  const { Wrapper, Content } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <PageHeader\r\n        title={l('pageTitle')}\r\n        backText={l('backText')}\r\n        onBackClick={handleBack}\r\n      />\r\n      <Content>\r\n        <UnitItem unit={Unit.sats} />\r\n        <UnitItem unit={Unit.bits} />\r\n        <UnitItem unit={Unit.btc} />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(UnitSettings);\r\n","import React from 'react';\r\nimport { Route, Routes } from 'react-router';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport BalanceSettings from './BalanceSettings';\r\nimport ExplorerSettings from './ExplorerSettings';\r\nimport GeneralSettings from './GeneralSettings';\r\nimport UnitSettings from './UnitSettings';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    padding: 40px 0;\r\n  `,\r\n};\r\n\r\nconst SettingsPage: React.FC = () => {\r\n  const { Wrapper } = Styled;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Routes>\r\n        <Route path=\"/\" element={<GeneralSettings />} />\r\n        <Route path=\"unit\" element={<UnitSettings />} />\r\n        <Route path=\"balance\" element={<BalanceSettings />} />\r\n        <Route path=\"explorers\" element={<ExplorerSettings />} />\r\n      </Routes>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SettingsPage);\r\n"],"names":["Styled","Wrapper","styled","div","Info","props","theme","sizes","xs","error","colors","pink","offWhite","gray","label","info","tip","children","className","overlay","placement","capitalize","size","fonts","work","light","s","Input","input","white","Extra","value","placeholder","extra","onChange","e","target","Left","span","Center","Right","BackLink","a","observer","title","onBackClick","backText","onHelpClick","exportTip","onExportClick","l","usePrefixedTranslation","onClick","lightBlue","Name","Value","name","icon","checked","role","section","Content","BalanceModeItem","mode","settingsStore","useStore","handleClick","useCallback","setBalanceMode","balanceMode","appView","handleBack","showSettings","PageHeader","BalanceMode","receive","send","routing","Actions","Field","FormInput","open","regular","m","ExplorerField","presets","url","infoCmp","Object","entries","map","text","ghost","borderless","compact","FormField","useState","bitcoinTxUrl","bitcoinTx","setBitcoinTx","lnNodeUrl","lnNode","setLnNode","bitcoinTxError","useMemo","validateExplorerUrl","lnNodeError","canSave","handleSave","setExplorerUrls","BitcoinExplorerPresets","LightningExplorerPresets","primary","disabled","nodeStore","handleUnit","handleBalance","handleExplorers","handleCopyPubkey","copy","handleCopyAlias","handleCopyUrl","formatUnit","unit","extractDomain","pubkeyLabel","alias","urlLabel","UnitItem","setUnit","Unit","sats","bits","btc","path","element"],"sourceRoot":""}