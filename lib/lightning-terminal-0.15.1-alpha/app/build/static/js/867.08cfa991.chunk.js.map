{"version":3,"file":"static/js/867.08cfa991.chunk.js","mappings":"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","sources":["components/common/FormField.tsx","components/common/FormInput.tsx","components/common/FormSelect.tsx","components/common/Modal.tsx","components/common/SortableHeader.tsx","components/connect/AddSession.tsx","components/connect/SessionRow.tsx","components/connect/SessionList.tsx","components/connect/ConnectPage.tsx","components/connect/PurpleButton.tsx","components/connect/QRCodeModal.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { HeaderFour, HelpCircle } from 'components/base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div``,\r\n  Info: styled.div<{ error?: boolean }>`\r\n    width: 100%;\r\n    margin: 0 0 15px;\r\n    padding: 5px 0;\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    background-color: ${props => (props.error ? props.theme.colors.pink : 'transparent')};\r\n    color: ${props =>\r\n      props.error ? props.theme.colors.offWhite : props.theme.colors.gray};\r\n    text-align: ${props => (props.error ? 'center' : 'right')};\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  label?: string;\r\n  info?: ReactNode;\r\n  error?: ReactNode;\r\n  tip?: string;\r\n  className?: string;\r\n}\r\n\r\nconst FormField: React.FC<Props> = ({ label, info, error, tip, children, className }) => {\r\n  const { Wrapper, Info } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      {label && (\r\n        <HeaderFour>\r\n          {label}\r\n          {tip && (\r\n            <Tip overlay={tip} placement=\"right\" capitalize={false}>\r\n              <HelpCircle size=\"medium\" />\r\n            </Tip>\r\n          )}\r\n        </HeaderFour>\r\n      )}\r\n      {children}\r\n      <Info error={!!error}>{error || info}</Info>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    position: relative;\r\n    font-family: ${props => props.theme.fonts.work.light};\r\n    font-weight: 300;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.offWhite};\r\n  `,\r\n  Input: styled.input`\r\n    color: ${props => props.theme.colors.offWhite};\r\n    background-color: ${props => props.theme.colors.overlay};\r\n    border-width: 0;\r\n    border-bottom: 1px solid ${props => props.theme.colors.gray};\r\n    padding: 5px 40px 5px 5px;\r\n    width: 100%;\r\n\r\n    &:active,\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom-color: ${props => props.theme.colors.white};\r\n    }\r\n\r\n    &::placeholder {\r\n      color: ${props => props.theme.colors.gray};\r\n    }\r\n  `,\r\n  Extra: styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    background-color: transparent;\r\n    padding: 5px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  label?: string;\r\n  value?: string;\r\n  extra?: ReactNode;\r\n  placeholder?: string;\r\n  className?: string;\r\n  onChange?: (value: string) => void;\r\n}\r\n\r\nconst FormInput: React.FC<Props> = ({\r\n  label,\r\n  value,\r\n  placeholder,\r\n  extra,\r\n  className,\r\n  onChange,\r\n}) => {\r\n  const { Wrapper, Input, Extra } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Input\r\n        value={value}\r\n        onChange={e => onChange && onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        aria-label={label}\r\n      />\r\n      {extra && <Extra>{extra}</Extra>}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'rc-select';\r\n\r\nexport interface SelectOption {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    font-family: ${props => props.theme.fonts.work.light};\r\n    font-weight: 300;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.offWhite};\r\n    position: relative;\r\n  `,\r\n  Select: styled(Select)`\r\n    color: ${props => props.theme.colors.offWhite};\r\n    background-color: ${props => props.theme.colors.overlay};\r\n    border-width: 0;\r\n    border-bottom: 1px solid ${props => props.theme.colors.gray};\r\n    padding: 5px 40px 8px 0;\r\n    width: 100%;\r\n    cursor: pointer;\r\n\r\n    &:active,\r\n    &:focus {\r\n      outline: none;\r\n      border-bottom-color: ${props => props.theme.colors.white};\r\n    }\r\n\r\n    .rc-select-arrow {\r\n      top: 6px;\r\n      right: 10px;\r\n    }\r\n\r\n    .rc-select-selection-item {\r\n      padding-left: 5px;\r\n      font-size: ${props => props.theme.sizes.s};\r\n    }\r\n\r\n    input {\r\n      cursor: pointer;\r\n    }\r\n\r\n    input::placeholder {\r\n      color: ${props => props.theme.colors.gray};\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  options: SelectOption[];\r\n  label?: string;\r\n  value?: string;\r\n  extra?: ReactNode;\r\n  placeholder?: string;\r\n  onChange?: (value: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst FormSelect: React.FC<Props> = ({\r\n  options,\r\n  label,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  className,\r\n}) => {\r\n  const { Wrapper, Select } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Select\r\n        value={value}\r\n        onChange={v => onChange && onChange(v as string)}\r\n        placeholder={placeholder}\r\n        aria-label={label}\r\n        options={options}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(FormSelect);\r\n","import React from 'react';\r\nimport { Global, Theme } from '@emotion/react';\r\nimport CloseIcon from 'assets/icons/close.svg';\r\nimport Dialog from 'rc-dialog';\r\n\r\nconst GlobalStyles = (theme: Theme) => `\r\n  div.rc-dialog {\r\n    font-family: ${theme.fonts.open.regular};\r\n    font-size: ${theme.sizes.m};\r\n  }\r\n  div.rc-dialog-content {\r\n    color: ${theme.colors.offWhite};\r\n    background-color: ${theme.colors.blue};\r\n  }\r\n  div.rc-dialog-header {\r\n    color: ${theme.colors.offWhite};\r\n    background-color: ${theme.colors.blue};\r\n    border-width: 0px;\r\n    padding: 32px 40px;\r\n  }\r\n  div.rc-dialog-title {\r\n    font-size: 32px;\r\n    line-height: 40px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  button.rc-dialog-close {\r\n    color: ${theme.colors.offWhite};\r\n    font-size: ${theme.sizes.xxl};\r\n    opacity: 1;\r\n    top: 34px;\r\n    right: 34px;\r\n    width: 24px;\r\n    height: 24px;\r\n    padding: 0;\r\n    background-color: ${theme.colors.offWhite};\r\n    mask-image: url(${CloseIcon});\r\n    padding: 0;\r\n\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n  span.rc-dialog-close-x:after {\r\n    content: \"\";\r\n  }\r\n  div.rc-dialog-body {\r\n    padding: 0 40px 40px;\r\n  }\r\n  div.rc-dialog-mask {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n  div.rc-dialog-footer {\r\n    border-width: 0px;\r\n    padding: 0 40px 40px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  title: string;\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  className?: string;\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ title, visible, onClose, className, children }) => {\r\n  return (\r\n    <Dialog\r\n      title={title}\r\n      animation=\"zoom\"\r\n      maskAnimation=\"fade\"\r\n      visible={visible}\r\n      onClose={onClose}\r\n      maskClosable\r\n      className={className}\r\n    >\r\n      {children}\r\n      <Global styles={GlobalStyles} />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useCallback } from 'react';\r\nimport { SortParams } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { ArrowDown, ArrowUp, HeaderFour } from 'components/base';\r\n\r\nconst Styled = {\r\n  HeaderFour: styled(HeaderFour)<{ selected: boolean }>`\r\n    ${props =>\r\n      props.selected &&\r\n      `\r\n      color: ${props.theme.colors.white};\r\n    `}\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: ${props => props.theme.colors.white};\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n    display: inline-block;\r\n    margin-left: 6px;\r\n\r\n    svg {\r\n      padding: 0;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props<T> {\r\n  field: keyof T;\r\n  sort: SortParams<T>;\r\n  onSort: (field: SortParams<T>['field'], descending: boolean) => void;\r\n}\r\n\r\nconst SortableHeader = <T,>({\r\n  field,\r\n  sort,\r\n  onSort,\r\n  children,\r\n}: React.PropsWithChildren<Props<T>>) => {\r\n  const selected = field === sort.field;\r\n  const SortIcon = sort.descending ? ArrowDown : ArrowUp;\r\n\r\n  const handleSortClick = useCallback(() => {\r\n    const descending = selected ? !sort.descending : false;\r\n    onSort(field, descending);\r\n  }, [selected, sort.descending, field, onSort]);\r\n\r\n  const { HeaderFour, Icon } = Styled;\r\n  return (\r\n    <HeaderFour selected={selected} onClick={handleSortClick}>\r\n      {children}\r\n      {selected && (\r\n        <Icon>\r\n          <SortIcon size=\"x-small\" />\r\n        </Icon>\r\n      )}\r\n    </HeaderFour>\r\n  );\r\n};\r\n\r\nexport default SortableHeader;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Button, Column, HeaderFour, Row } from 'components/base';\r\nimport FormField from 'components/common/FormField';\r\nimport FormInput from 'components/common/FormInput';\r\nimport FormSelect from 'components/common/FormSelect';\r\nimport PurpleButton from './PurpleButton';\r\nimport { PermissionTypeValues } from 'store/views/addSessionView';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div``,\r\n  FormHeader: styled(HeaderFour)`\r\n    color: ${props => props.theme.colors.white};\r\n  `,\r\n  FormInput: styled(FormInput)`\r\n    > input {\r\n      font-family: ${props => props.theme.fonts.open.regular};\r\n      font-size: ${props => props.theme.sizes.m};\r\n      padding: 12px 16px;\r\n    }\r\n  `,\r\n  FormSelect: styled(FormSelect)`\r\n    .rc-select {\r\n      font-family: ${props => props.theme.fonts.open.regular};\r\n      font-size: ${props => props.theme.sizes.m};\r\n      padding: 12px 40px 8px 0px;\r\n    }\r\n\r\n    .rc-select-selection-item {\r\n      padding-left: 14px;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  primary?: boolean;\r\n}\r\n\r\nconst AddSession: React.FC<Props> = ({ primary }) => {\r\n  const { l } = usePrefixedTranslation('cmps.connect.AddSession');\r\n  const { addSessionView } = useStore();\r\n  const { Wrapper, FormHeader, FormInput, FormSelect } = Styled;\r\n  if (!addSessionView.editing) {\r\n    return (\r\n      <PurpleButton tertiary={!primary} onClick={addSessionView.toggleEditing}>\r\n        {l('create')}\r\n      </PurpleButton>\r\n    );\r\n  }\r\n\r\n  const validatePermissionType = (v: string) => {\r\n    const permissionType = Object.values(PermissionTypeValues).find(value => value === v);\r\n\r\n    if (!permissionType) return;\r\n\r\n    addSessionView.setPermissionType(permissionType);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Row>\r\n        <Column>\r\n          <FormHeader>{l('label')}</FormHeader>\r\n        </Column>\r\n        <Column>\r\n          <FormHeader>{l('permissions')}</FormHeader>\r\n        </Column>\r\n      </Row>\r\n      <Row>\r\n        <Column cols={6}>\r\n          <FormField>\r\n            <FormInput\r\n              value={addSessionView.label}\r\n              onChange={addSessionView.setLabel}\r\n              placeholder={l('labelHint')}\r\n            />\r\n          </FormField>\r\n        </Column>\r\n        <Column>\r\n          <FormField>\r\n            <FormSelect\r\n              value={addSessionView.permissionType}\r\n              onChange={validatePermissionType}\r\n              options={[\r\n                { label: l('admin'), value: PermissionTypeValues.Admin },\r\n                { label: l('readonly'), value: PermissionTypeValues.ReadOnly },\r\n                { label: l('custom'), value: PermissionTypeValues.Custom },\r\n              ]}\r\n            />\r\n          </FormField>\r\n        </Column>\r\n        <Column>\r\n          <PurpleButton onClick={addSessionView.handleSubmit}>\r\n            {addSessionView.permissionType === PermissionTypeValues.Custom\r\n              ? l('common.next')\r\n              : l('common.submit')}\r\n          </PurpleButton>\r\n          <Button ghost borderless onClick={addSessionView.toggleEditing}>\r\n            {l('common.cancel')}\r\n          </Button>\r\n        </Column>\r\n      </Row>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(AddSession);\r\n","import React, { CSSProperties, useCallback, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Session } from 'store/models';\r\nimport { BoltOutlined, Close, Column, Copy, QRCode, Row } from 'components/base';\r\nimport SortableHeader from 'components/common/SortableHeader';\r\nimport Tip from 'components/common/Tip';\r\nimport * as LIT from 'types/generated/lit-sessions_pb';\r\nimport QRCodeModal from './QRCodeModal';\r\n\r\n/**\r\n * the virtualized list requires each row to have a specified\r\n * height. Defining a const here because it is used in multiple places\r\n */\r\nexport const ROW_HEIGHT = 60;\r\n\r\nconst Styled = {\r\n  Row: styled(Row)`\r\n    border-bottom: 0.5px solid ${props => props.theme.colors.lightBlue};\r\n\r\n    &:last-child {\r\n      border-bottom-width: 0;\r\n    }\r\n  `,\r\n  HeaderRow: styled(Row)`\r\n    margin-right: 0;\r\n  `,\r\n  HeaderColumn: styled(Column)`\r\n    white-space: nowrap;\r\n    padding: 0 5px;\r\n\r\n    &:last-child {\r\n      padding-right: 0;\r\n    }\r\n  `,\r\n  Column: styled(Column)`\r\n    line-height: ${ROW_HEIGHT}px;\r\n    padding: 0 5px;\r\n  `,\r\n  ActionColumn: styled(Column)`\r\n    line-height: ${ROW_HEIGHT}px;\r\n\r\n    svg {\r\n      border-radius: 0;\r\n      margin-left: 10%;\r\n\r\n      &:hover {\r\n        border-radius: 10px;\r\n      }\r\n    }\r\n\r\n    > a {\r\n      color: ${props => props.theme.colors.offWhite};\r\n\r\n      &:hover svg {\r\n        color: ${props => props.theme.colors.blue};\r\n        background-color: ${props => props.theme.colors.offWhite};\r\n      }\r\n    }\r\n  `,\r\n  CloseIcon: styled(Close)`\r\n    color: ${props => props.theme.colors.lightningRed};\r\n  `,\r\n};\r\n\r\nconst RowHeader: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.connect.SessionRowHeader');\r\n  const { settingsStore } = useStore();\r\n\r\n  const { HeaderRow, ActionColumn, HeaderColumn } = Styled;\r\n  return (\r\n    <HeaderRow>\r\n      <ActionColumn />\r\n      <HeaderColumn cols={3}>\r\n        <SortableHeader<Session>\r\n          field=\"label\"\r\n          sort={settingsStore.sessionSort}\r\n          onSort={settingsStore.setSessionSort}\r\n        >\r\n          {l('label')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn>\r\n        <SortableHeader<Session>\r\n          field=\"type\"\r\n          sort={settingsStore.sessionSort}\r\n          onSort={settingsStore.setSessionSort}\r\n        >\r\n          {l('type')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn>\r\n        <SortableHeader<Session>\r\n          field=\"state\"\r\n          sort={settingsStore.sessionSort}\r\n          onSort={settingsStore.setSessionSort}\r\n        >\r\n          {l('state')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn>\r\n        <SortableHeader<Session>\r\n          field=\"expiry\"\r\n          sort={settingsStore.sessionSort}\r\n          onSort={settingsStore.setSessionSort}\r\n        >\r\n          {l('expiry')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <Column className=\"col-1\" />\r\n    </HeaderRow>\r\n  );\r\n};\r\n\r\nexport const SessionRowHeader = observer(RowHeader);\r\n\r\ninterface Props {\r\n  session: Session;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst SessionRow: React.FC<Props> = ({ session, style }) => {\r\n  const { l } = usePrefixedTranslation('cmps.connect.SessionRow');\r\n  const [showQR, setShowQR] = useState(false);\r\n  const { sessionStore } = useStore();\r\n\r\n  const handleCopy = useCallback(() => {\r\n    sessionStore.copyPhrase(session.label, session.pairingSecretMnemonic);\r\n  }, [session.pairingSecretMnemonic]);\r\n\r\n  const handleRevoke = useCallback(() => {\r\n    sessionStore.revokeSession(session);\r\n  }, [session]);\r\n\r\n  const toggleQRModal = useCallback(() => setShowQR(v => !v), []);\r\n\r\n  const { Row, Column, ActionColumn, CloseIcon } = Styled;\r\n  return (\r\n    <Row style={style}>\r\n      <ActionColumn>\r\n        {session.isPaired ? (\r\n          <>\r\n            <Tip overlay={l('paired')}>\r\n              <BoltOutlined disabled />\r\n            </Tip>\r\n            <Tip overlay={l('paired')}>\r\n              <Copy disabled />\r\n            </Tip>\r\n            <Tip overlay={l('paired')}>\r\n              <QRCode disabled />\r\n            </Tip>\r\n          </>\r\n        ) : session.type === LIT.SessionType.TYPE_MACAROON_ACCOUNT ? (\r\n          <>\r\n            <Tip overlay={l('pairCustodial')}>\r\n              <BoltOutlined disabled />\r\n            </Tip>\r\n            <Tip overlay={l('copy')}>\r\n              <Copy onClick={handleCopy} />\r\n            </Tip>\r\n            <Tip overlay={l('generateQR')}>\r\n              <QRCode onClick={toggleQRModal} />\r\n            </Tip>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Tip overlay={l('pairTerminal')}>\r\n              <a href={session.terminalConnectUrl} target=\"_blank\" rel=\"noreferrer\">\r\n                <BoltOutlined />\r\n              </a>\r\n            </Tip>\r\n            <Tip overlay={l('copy')}>\r\n              <Copy onClick={handleCopy} />\r\n            </Tip>\r\n            <Tip overlay={l('generateQR')}>\r\n              <QRCode onClick={toggleQRModal} />\r\n            </Tip>\r\n          </>\r\n        )}\r\n        <QRCodeModal\r\n          url={session.terminalConnectUrl}\r\n          visible={showQR}\r\n          onClose={toggleQRModal}\r\n        />\r\n      </ActionColumn>\r\n      <Column cols={3}>{session.label}</Column>\r\n      <Column>{session.typeLabel}</Column>\r\n      <Column>{session.pairedLabel}</Column>\r\n      <Column>{session.expiryLabel}</Column>\r\n      <Column className=\"col-1\" right>\r\n        <Tip overlay={l('revoke')}>\r\n          <CloseIcon size=\"large\" onClick={handleRevoke} />\r\n        </Tip>\r\n      </Column>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default observer(SessionRow);\r\n","import React from 'react';\r\nimport { AutoSizer, List, WindowScroller } from 'react-virtualized';\r\nimport { observer, Observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { useStore } from 'store';\r\nimport { ListContainer } from 'components/base';\r\nimport SessionRow, { ROW_HEIGHT, SessionRowHeader } from './SessionRow';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    margin: 40px 0;\r\n  `,\r\n};\r\n\r\nconst SessionList: React.FC = () => {\r\n  const { sessionStore } = useStore();\r\n\r\n  if (sessionStore.sortedSessions.length === 0) return null;\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <SessionRowHeader />\r\n      <ListContainer>\r\n        <AutoSizer disableHeight>\r\n          {({ width }) => (\r\n            <WindowScroller>\r\n              {({ height, isScrolling, onChildScroll, scrollTop, registerChild }) => (\r\n                <Observer>\r\n                  {() => (\r\n                    <div ref={ref => ref && registerChild(ref)}>\r\n                      <List\r\n                        autoHeight\r\n                        height={height}\r\n                        isScrolling={isScrolling}\r\n                        onScroll={onChildScroll}\r\n                        rowCount={sessionStore.sortedSessions.length}\r\n                        rowHeight={ROW_HEIGHT}\r\n                        rowRenderer={({ index, key, style }) => (\r\n                          <SessionRow\r\n                            key={key}\r\n                            style={style}\r\n                            session={sessionStore.sortedSessions[index]}\r\n                          />\r\n                        )}\r\n                        scrollTop={scrollTop}\r\n                        width={width}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Observer>\r\n              )}\r\n            </WindowScroller>\r\n          )}\r\n        </AutoSizer>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SessionList);\r\n","import React, { useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { DisplayLarge } from 'components/base';\r\nimport AddSession from './AddSession';\r\nimport SessionList from './SessionList';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section`\r\n    padding-top: 80px;\r\n  `,\r\n  Description: styled.div`\r\n    margin-bottom: 32px;\r\n  `,\r\n};\r\n\r\nconst ConnectPage: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.connect.ConnectPage');\r\n  const { sessionStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    sessionStore.fetchSessions();\r\n  }, []);\r\n\r\n  const { Wrapper, Description } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <DisplayLarge space={16}>{l('pageTitle')}</DisplayLarge>\r\n      <Description>{l('description')}</Description>\r\n      <AddSession primary />\r\n      <SessionList />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ConnectPage);\r\n","import styled from '@emotion/styled';\r\n\r\ninterface Props {\r\n  secondary?: boolean;\r\n  tertiary?: boolean;\r\n}\r\n\r\nconst PurpleButton = styled.button<Props>`\r\n  font-family: ${props => props.theme.fonts.open.regular};\r\n  font-size: ${props => props.theme.sizes.m};\r\n  font-weight: 600;\r\n  height: auto;\r\n  color: white;\r\n  background-color: #5d5fef;\r\n  border-width: 0;\r\n  border-radius: 4px;\r\n  padding: 14px 24px;\r\n\r\n  &:hover {\r\n    background-color: #3d40e7;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${props =>\r\n    props.secondary &&\r\n    `\r\n    color: #252F4A;\r\n    background-color: ${props.theme.colors.white};\r\n\r\n    &:hover {\r\n      opacity: 0.8;\r\n      background-color: ${props.theme.colors.white};\r\n    }\r\n  `}\r\n\r\n  ${props =>\r\n    props.tertiary &&\r\n    `\r\n    background-color: #384770;\r\n\r\n    &:hover {\r\n      background-color: #2E3A5C;\r\n    }\r\n  `}\r\n\r\n  > svg {\r\n    margin-right: 6px;\r\n  }\r\n`;\r\n\r\nexport default PurpleButton;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport QRCodeImg from 'qrcode.react';\r\nimport { Paragraph } from 'components/base';\r\nimport Modal from 'components/common/Modal';\r\n\r\nconst Styled = {\r\n  QRWrap: styled.div`\r\n    display: inline-block;\r\n    padding: 8px 8px 0;\r\n    background-color: ${props => props.theme.colors.white};\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  url: string;\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst QRCodeModal: React.FC<Props> = ({ url, visible, onClose }) => {\r\n  const { l } = usePrefixedTranslation('cmps.connect.QRCodeModal');\r\n  const { QRWrap } = Styled;\r\n  return (\r\n    <Modal title={l('title')} visible={visible} onClose={onClose}>\r\n      <Paragraph space={32}>{l('desc')}</Paragraph>\r\n      <QRWrap>\r\n        <QRCodeImg value={url} size={500} />\r\n      </QRWrap>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QRCodeModal;\r\n"],"names":["Styled","Wrapper","styled","div","Info","props","theme","sizes","xs","error","colors","pink","offWhite","gray","label","info","tip","children","className","overlay","placement","capitalize","size","fonts","work","light","s","Input","input","white","Extra","value","placeholder","extra","onChange","e","target","Select","observer","options","v","GlobalStyles","open","regular","m","blue","xxl","CloseIcon","title","visible","onClose","animation","maskAnimation","maskClosable","styles","HeaderFour","selected","Icon","span","field","sort","onSort","SortIcon","descending","ArrowDown","ArrowUp","handleSortClick","useCallback","onClick","FormHeader","FormInput","FormSelect","primary","l","usePrefixedTranslation","addSessionView","useStore","editing","PurpleButton","tertiary","toggleEditing","cols","FormField","setLabel","permissionType","Object","values","PermissionTypeValues","find","setPermissionType","Admin","ReadOnly","Custom","handleSubmit","ghost","borderless","Row","lightBlue","HeaderRow","HeaderColumn","Column","ActionColumn","Close","lightningRed","SessionRowHeader","settingsStore","SortableHeader","sessionSort","setSessionSort","session","style","useState","showQR","setShowQR","sessionStore","handleCopy","copyPhrase","pairingSecretMnemonic","handleRevoke","revokeSession","toggleQRModal","isPaired","Tip","disabled","type","LIT","TYPE_MACAROON_ACCOUNT","href","terminalConnectUrl","rel","QRCodeModal","url","typeLabel","pairedLabel","expiryLabel","right","sortedSessions","length","disableHeight","width","height","isScrolling","onChildScroll","scrollTop","registerChild","ref","autoHeight","onScroll","rowCount","rowHeight","rowRenderer","index","key","section","Description","useEffect","fetchSessions","space","button","secondary","QRWrap"],"sourceRoot":""}