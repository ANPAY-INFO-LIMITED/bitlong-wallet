{"version":3,"file":"static/js/652.116469f5.chunk.js","mappings":"qOAOMA,EAAS,CACbC,QAASC,EAAAA,EAAOC,IAAT,mFAIPC,KAAMF,EAAAA,EAAOG,KAAT,wFAKJC,OAAQJ,EAAAA,EAAOG,KAAT,iEAINE,MAAOL,EAAAA,EAAOG,KAAT,8GAQLG,SAAUN,EAAAA,EAAOO,EAAT,4OAEG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YACxB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,MAAMC,MAK7B,SAAAL,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAwD3C,SAAeG,EAAAA,EAAAA,KAxCqB,SAAC,GAO9B,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEQC,GAAMC,EAAAA,EAAAA,GAAuB,0BAA7BD,EAEAtB,EAA2CD,EAA3CC,QAASG,EAAkCJ,EAAlCI,KAAME,EAA4BN,EAA5BM,OAAQC,EAAoBP,EAApBO,MAAOC,EAAaR,EAAbQ,SACtC,OACE,UAACP,EAAD,YACE,SAACG,EAAD,UACGc,IACC,UAACV,EAAD,CAAUiB,QAASP,EAAnB,WACE,SAAC,KAAD,IACCC,QAIP,SAACb,EAAD,WACE,SAAC,KAAD,CAAa,YAAU,UAAvB,SAAkCW,OAEpC,UAACV,EAAD,WACGa,IACC,SAAC,IAAD,CAAKM,UAAU,cAAcC,QAASJ,EAAE,WAAxC,UACE,SAAC,KAAD,CAAYK,KAAK,QAAQH,QAASL,MAGrCE,IACC,SAAC,IAAD,CAAKI,UAAU,cAAcC,QAASN,GAAaE,EAAE,aAArD,UACE,SAAC,KAAD,CAAU,YAAU,SAASK,KAAK,QAAQH,QAASH,gB,wFChFzDtB,EAAS,CACb6B,YAAY3B,EAAAA,EAAAA,GAAO2B,EAAAA,GAAP3B,CAAF,sGACN,SAAAQ,GAAK,OACLA,EAAMoB,UAAN,yBAESpB,EAAMC,MAAMC,OAAOmB,MAF5B,cAOS,SAAArB,GAAK,OAAIA,EAAMC,MAAMC,OAAOmB,SAGzCC,KAAM9B,EAAAA,EAAOG,KAAT,qHA2CN,QA3BuB,YAKmB,IAJxC4B,EAIuC,EAJvCA,MACAC,EAGuC,EAHvCA,KACAC,EAEuC,EAFvCA,OACAC,EACuC,EADvCA,SAEMN,EAAWG,IAAUC,EAAKD,MAC1BI,EAAWH,EAAKI,WAAaC,EAAAA,GAAYC,EAAAA,GAEzCC,GAAkBC,EAAAA,EAAAA,cAAY,WAClC,IAAMJ,IAAaR,IAAYI,EAAKI,WACpCH,EAAOF,EAAOK,KACb,CAACR,EAAUI,EAAKI,WAAYL,EAAOE,IAE9BN,EAAqB7B,EAArB6B,WAAYG,EAAShC,EAATgC,KACpB,OACE,UAACH,EAAD,CAAYC,SAAUA,EAAUL,QAASgB,EAAzC,UACGL,EACAN,IACC,SAACE,EAAD,WACE,SAACK,EAAD,CAAUT,KAAK,mB,qGChDnB5B,EAAS,CACbC,QAASC,EAAAA,EAAOC,IAAT,8HAMPwC,cAAezC,EAAAA,EAAOC,IAAT,mSAIE,SAAAO,GAAK,OAAIA,EAAMC,MAAMG,MAAM8B,KAC/B,SAAAlC,GAAK,OAAIA,EAAMC,MAAMC,OAAOiC,iBAO1B,SAAAnC,GAAK,OAAIA,EAAMC,MAAMC,OAAOkC,QAGzCC,MAAO7C,EAAAA,EAAOC,IAAT,mDAUM6C,EAAgD,SAAC,GAGvD,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEQ3B,GAAMC,EAAAA,EAAAA,GAAuB,+BAA7BD,EACAtB,EAAkCD,EAAlCC,QAAS0C,EAAyB3C,EAAzB2C,cAAeI,EAAU/C,EAAV+C,MAChC,OACE,SAAC9C,EAAD,WACE,UAAC0C,EAAD,YACE,SAAC,KAAD,CAAMf,KAAK,YAEVqB,GACC,uBAAI1B,EAAE,iBAEN,iCACE,uBAAIA,EAAE,cACN,SAACwB,EAAD,UAAQG,aAsBpB,QAV2C,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQf,EAAe,EAAfA,SACpD,OAAIe,EAAOC,UACF,SAACJ,EAAD,CAAwBC,YAAU,IAChCE,EAAOE,OACT,SAACL,EAAD,CAAwBC,YAAY,EAAOC,aAAcC,EAAOE,SAGlE,8BAAGjB,M,6MCvDNpC,EAAS,CACbsD,KAAKpD,EAAAA,EAAAA,GAAOoD,EAAAA,GAAPpD,CAAF,2HAC4B,SAAAQ,GAAK,OAAIA,EAAMC,MAAMC,OAAO2C,aAM3DC,WAAWtD,EAAAA,EAAAA,GAAOoD,EAAAA,GAAPpD,CAAF,gDAGTuD,cAAcvD,EAAAA,EAAAA,GAAOwD,EAAAA,GAAPxD,CAAF,+HAQZwD,QAAQxD,EAAAA,EAAAA,GAAOwD,EAAAA,GAAPxD,CAAF,uEArBkB,IAyBxByD,cAAczD,EAAAA,EAAAA,GAAOwD,EAAAA,GAAPxD,CAAF,8FAzBY,KAyFb0D,GAAmB5C,EAAAA,EAAAA,KAzDJ,WAC1B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,iCAA7BD,EACAsC,GAAkBC,EAAAA,EAAAA,MAAlBD,cAEAL,EAA0CxD,EAA1CwD,UAAWG,EAA+B3D,EAA/B2D,aAAcF,EAAiBzD,EAAjByD,aACjC,OACE,UAACD,EAAD,YACE,SAACG,EAAD,KACA,SAACF,EAAD,CAAcM,KAAM,EAApB,UACE,SAACC,EAAA,EAAD,CACE/B,MAAM,aACNC,KAAM2B,EAAcI,YACpB9B,OAAQ0B,EAAcK,eAHxB,SAKG3C,EAAE,eAGP,SAACkC,EAAD,WACE,SAACO,EAAA,EAAD,CACE/B,MAAM,WACNC,KAAM2B,EAAcI,YACpB9B,OAAQ0B,EAAcK,eAHxB,SAKG3C,EAAE,aAGP,SAACkC,EAAD,CAAcU,OAAK,EAAnB,UACE,SAACH,EAAA,EAAD,CACE/B,MAAM,SACNC,KAAM2B,EAAcI,YACpB9B,OAAQ0B,EAAcK,eAHxB,SAKG3C,EAAE,eAGP,SAACkC,EAAD,CAAcU,OAAK,EAAnB,UACE,SAACH,EAAA,EAAD,CACE/B,MAAM,iBACNC,KAAM2B,EAAcI,YACpB9B,OAAQ0B,EAAcK,eAHxB,SAKG3C,EAAE,gBAGP,SAACkC,EAAD,CAAcU,OAAK,EAAnB,UACE,SAACH,EAAA,EAAD,CACE/B,MAAM,iBACNC,KAAM2B,EAAcI,YACpB9B,OAAQ0B,EAAcK,eAHxB,SAKG3C,EAAE,qBAkDb,SAAeP,EAAAA,EAAAA,KApCqB,SAAC,GAAqB,IAAnBoD,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACnC9C,GAAMC,EAAAA,EAAAA,GAAuB,2BAA7BD,EACA+B,EAA8BtD,EAA9BsD,IAAKI,EAAyB1D,EAAzB0D,OAAQC,EAAiB3D,EAAjB2D,aACrB,OACE,UAACL,EAAD,CAAKe,MAAOA,EAAZ,WACE,SAACV,EAAD,WACE,SAACW,EAAA,EAAD,CAASF,KAAMA,OAEjB,SAACV,EAAD,CAAQK,KAAM,EAAd,SACuB,WAApBK,EAAKG,WACJH,EAAKG,YAEL,gCACGH,EAAKI,cACN,SAACC,EAAA,EAAD,CACE9C,QAASJ,EAAE,WAAD,OAAY6C,EAAKM,gBAC3BC,YAAY,EACZC,SAAU,IAHZ,UAKE,2BACE,SAAC,KAAD,cAMV,SAAClB,EAAD,UAASU,EAAKS,YACd,SAACnB,EAAD,CAAQS,OAAK,EAAb,UACE,SAACW,EAAA,EAAD,CAAMC,KAAMX,EAAKY,OAAQC,QAAQ,OAEnC,SAACvB,EAAD,CAAQS,OAAK,EAAb,SAAeC,EAAKc,kBACpB,SAACxB,EAAD,CAAQS,OAAK,EAAb,SAAeC,EAAKe,uB,MCvIpBnF,EAAS,CACbC,QAASC,EAAAA,EAAOC,IAAT,iDAiDT,SAAea,EAAAA,EAAAA,KA5Ce,WAC5B,IAAQoE,GAActB,EAAAA,EAAAA,MAAdsB,UAEAnF,EAAYD,EAAZC,QACR,OACE,UAACA,EAAD,YACE,SAAC2D,EAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,CAAWyB,eAAa,EAAxB,SACG,gBAAGC,EAAH,EAAGA,MAAH,OACC,SAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,YAAaC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,UAAWC,EAAlD,EAAkDA,cAAlD,OACC,SAAC,KAAD,UACG,kBACC,gBAAKC,IAAK,SAAAA,GAAG,OAAIA,GAAOD,EAAcC,IAAtC,UACE,SAAC,KAAD,CACEC,YAAU,EACVN,OAAQA,EACRC,YAAaA,EACbM,SAAUL,EACVM,SAAUX,EAAUY,YAAYC,OAChCC,UDnBE,GCoBFC,YAAa,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAKhC,EAAf,EAAeA,MAAf,OACX,SAAC,EAAD,CAEEA,MAAOA,EACPD,KAAMgB,EAAUY,YAAYI,IAFvBC,IAKTX,UAAWA,EACXJ,MAAOA,uB,MCnCzBtF,EAAS,CACbC,QAASC,EAAAA,EAAOC,IAAT,iDAoBT,SAAea,EAAAA,EAAAA,KAfe,WAC5B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,4BAA7BD,EACR,GAAsCuC,EAAAA,EAAAA,MAA9BsB,EAAR,EAAQA,UAAWkB,EAAnB,EAAmBA,eAEXrG,EAAYD,EAAZC,QACR,OACE,SAACsG,EAAA,EAAD,CAAmBpD,OAAQmD,EAAeE,WAAWC,KAArD,UACE,UAACxG,EAAD,YACE,SAACyG,EAAA,EAAD,CAAYzF,MAAOM,EAAE,aAAcD,cAAe8D,EAAUuB,eAC5D,SAAC,EAAD,a,yECJR,SAAe3F,EAAAA,EAAAA,KAXkB,SAAC,GAChC,OAD6C,EAAXoD,KACrBG,YACX,IAAK,UACH,OAAO,SAAC,IAAD,CAAWpB,OAAO,YAC3B,IAAK,SACH,OAAO,SAAC,IAAD,CAAWA,OAAO,UAC3B,QACE,OAAO,SAAC,IAAD,CAAWA,OAAO","sources":["components/common/PageHeader.tsx","components/common/SortableHeader.tsx","components/common/SubServerRequired.tsx","components/history/HistoryRow.tsx","components/history/HistoryList.tsx","components/history/HistoryPage.tsx","components/loop/SwapDot.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { ArrowLeft, Download, HeaderThree, HelpCircle } from '../base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n  Left: styled.span`\r\n    flex: 1;\r\n    padding-left: 16px;\r\n    text-align: left;\r\n  `,\r\n  Center: styled.span`\r\n    flex: 1;\r\n    text-align: center;\r\n  `,\r\n  Right: styled.span`\r\n    flex: 1;\r\n    text-align: right;\r\n\r\n    svg {\r\n      margin-left: 20px;\r\n    }\r\n  `,\r\n  BackLink: styled.a`\r\n    text-transform: uppercase;\r\n    color: ${props => props.theme.colors.offWhite};\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    cursor: pointer;\r\n    line-height: 36px;\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.colors.offWhite};\r\n      opacity: 80%;\r\n      text-decoration: none;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  onBackClick?: () => void;\r\n  backText?: string;\r\n  onHelpClick?: () => void;\r\n  exportTip?: string;\r\n  onExportClick?: () => void;\r\n}\r\n\r\nconst PageHeader: React.FC<Props> = ({\r\n  title,\r\n  onBackClick,\r\n  backText,\r\n  onHelpClick,\r\n  exportTip,\r\n  onExportClick,\r\n}) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.PageHeader');\r\n\r\n  const { Wrapper, Left, Center, Right, BackLink } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Left>\r\n        {onBackClick && (\r\n          <BackLink onClick={onBackClick}>\r\n            <ArrowLeft />\r\n            {backText}\r\n          </BackLink>\r\n        )}\r\n      </Left>\r\n      <Center>\r\n        <HeaderThree data-tour=\"welcome\">{title}</HeaderThree>\r\n      </Center>\r\n      <Right>\r\n        {onHelpClick && (\r\n          <Tip placement=\"bottomRight\" overlay={l('helpTip')}>\r\n            <HelpCircle size=\"large\" onClick={onHelpClick} />\r\n          </Tip>\r\n        )}\r\n        {onExportClick && (\r\n          <Tip placement=\"bottomRight\" overlay={exportTip || l('exportTip')}>\r\n            <Download data-tour=\"export\" size=\"large\" onClick={onExportClick} />\r\n          </Tip>\r\n        )}\r\n      </Right>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(PageHeader);\r\n","import React, { useCallback } from 'react';\r\nimport { SortParams } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { ArrowDown, ArrowUp, HeaderFour } from 'components/base';\r\n\r\nconst Styled = {\r\n  HeaderFour: styled(HeaderFour)<{ selected: boolean }>`\r\n    ${props =>\r\n      props.selected &&\r\n      `\r\n      color: ${props.theme.colors.white};\r\n    `}\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: ${props => props.theme.colors.white};\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n    display: inline-block;\r\n    margin-left: 6px;\r\n\r\n    svg {\r\n      padding: 0;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props<T> {\r\n  field: keyof T;\r\n  sort: SortParams<T>;\r\n  onSort: (field: SortParams<T>['field'], descending: boolean) => void;\r\n}\r\n\r\nconst SortableHeader = <T,>({\r\n  field,\r\n  sort,\r\n  onSort,\r\n  children,\r\n}: React.PropsWithChildren<Props<T>>) => {\r\n  const selected = field === sort.field;\r\n  const SortIcon = sort.descending ? ArrowDown : ArrowUp;\r\n\r\n  const handleSortClick = useCallback(() => {\r\n    const descending = selected ? !sort.descending : false;\r\n    onSort(field, descending);\r\n  }, [selected, sort.descending, field, onSort]);\r\n\r\n  const { HeaderFour, Icon } = Styled;\r\n  return (\r\n    <HeaderFour selected={selected} onClick={handleSortClick}>\r\n      {children}\r\n      {selected && (\r\n        <Icon>\r\n          <SortIcon size=\"x-small\" />\r\n        </Icon>\r\n      )}\r\n    </HeaderFour>\r\n  );\r\n};\r\n\r\nexport default SortableHeader;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Plug } from '../base';\r\nimport { SubServerStatus } from 'types/state';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `,\r\n  StatusMessage: styled.div`\r\n    display: inline-block;\r\n    border-radius: 24px;\r\n    padding: 3px 16px 3px 6px;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.lightningGray};\r\n    font-weight: 600;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n\r\n    svg {\r\n      margin-bottom: 16px;\r\n      color: ${props => props.theme.colors.gold};\r\n    }\r\n  `,\r\n  Error: styled.div`\r\n    font-weight: bold;\r\n  `,\r\n};\r\n\r\ninterface StatusProps {\r\n  isDisabled: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport const SubServerStatusMessage: React.FC<StatusProps> = ({\r\n  isDisabled,\r\n  errorMessage,\r\n}) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.SubServerStatus');\r\n  const { Wrapper, StatusMessage, Error } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <StatusMessage>\r\n        <Plug size=\"x-large\" />\r\n\r\n        {isDisabled ? (\r\n          <p>{l('isDisabled')}</p>\r\n        ) : (\r\n          <>\r\n            <p>{l('isError')}</p>\r\n            <Error>{errorMessage}</Error>\r\n          </>\r\n        )}\r\n      </StatusMessage>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  status: SubServerStatus;\r\n}\r\n\r\nconst SubServerRequired: React.FC<Props> = ({ status, children }) => {\r\n  if (status.disabled) {\r\n    return <SubServerStatusMessage isDisabled />;\r\n  } else if (status.error) {\r\n    return <SubServerStatusMessage isDisabled={false} errorMessage={status.error} />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default SubServerRequired;\r\n","import React, { CSSProperties } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Swap } from 'store/models';\r\nimport { Column, HelpCircle, Row } from 'components/base';\r\nimport SortableHeader from 'components/common/SortableHeader';\r\nimport Tip from 'components/common/Tip';\r\nimport Unit from 'components/common/Unit';\r\nimport SwapDot from 'components/loop/SwapDot';\r\n\r\n/**\r\n * the virtualized list requires each row to have a specified\r\n * height. Defining a const here because it is used in multiple places\r\n */\r\nexport const ROW_HEIGHT = 60;\r\n\r\nconst Styled = {\r\n  Row: styled(Row)`\r\n    border-bottom: 0.5px solid ${props => props.theme.colors.lightBlue};\r\n\r\n    &:last-child {\r\n      border-bottom-width: 0;\r\n    }\r\n  `,\r\n  HeaderRow: styled(Row)`\r\n    margin-right: 0;\r\n  `,\r\n  HeaderColumn: styled(Column)`\r\n    white-space: nowrap;\r\n    padding: 0 5px;\r\n\r\n    &:last-child {\r\n      padding-right: 0;\r\n    }\r\n  `,\r\n  Column: styled(Column)`\r\n    line-height: ${ROW_HEIGHT}px;\r\n    padding: 0 5px;\r\n  `,\r\n  ActionColumn: styled(Column)`\r\n    max-width: 50px;\r\n    padding: 0 20px;\r\n    line-height: ${ROW_HEIGHT}px;\r\n  `,\r\n};\r\n\r\nconst RowHeader: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.history.HistoryRowHeader');\r\n  const { settingsStore } = useStore();\r\n\r\n  const { HeaderRow, ActionColumn, HeaderColumn } = Styled;\r\n  return (\r\n    <HeaderRow>\r\n      <ActionColumn />\r\n      <HeaderColumn cols={3}>\r\n        <SortableHeader<Swap>\r\n          field=\"stateLabel\"\r\n          sort={settingsStore.historySort}\r\n          onSort={settingsStore.setHistorySort}\r\n        >\r\n          {l('status')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn>\r\n        <SortableHeader<Swap>\r\n          field=\"typeName\"\r\n          sort={settingsStore.historySort}\r\n          onSort={settingsStore.setHistorySort}\r\n        >\r\n          {l('type')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn right>\r\n        <SortableHeader<Swap>\r\n          field=\"amount\"\r\n          sort={settingsStore.historySort}\r\n          onSort={settingsStore.setHistorySort}\r\n        >\r\n          {l('amount')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn right>\r\n        <SortableHeader<Swap>\r\n          field=\"initiationTime\"\r\n          sort={settingsStore.historySort}\r\n          onSort={settingsStore.setHistorySort}\r\n        >\r\n          {l('created')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n      <HeaderColumn right>\r\n        <SortableHeader<Swap>\r\n          field=\"lastUpdateTime\"\r\n          sort={settingsStore.historySort}\r\n          onSort={settingsStore.setHistorySort}\r\n        >\r\n          {l('updated')}\r\n        </SortableHeader>\r\n      </HeaderColumn>\r\n    </HeaderRow>\r\n  );\r\n};\r\n\r\nexport const HistoryRowHeader = observer(RowHeader);\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst HistoryRow: React.FC<Props> = ({ swap, style }) => {\r\n  const { l } = usePrefixedTranslation('cmps.history.HistoryRow');\r\n  const { Row, Column, ActionColumn } = Styled;\r\n  return (\r\n    <Row style={style}>\r\n      <ActionColumn>\r\n        <SwapDot swap={swap} />\r\n      </ActionColumn>\r\n      <Column cols={3}>\r\n        {swap.stateLabel !== 'Failed' ? (\r\n          swap.stateLabel\r\n        ) : (\r\n          <>\r\n            {swap.failureLabel}\r\n            <Tip\r\n              overlay={l(`failure-${swap.failureReason}`)}\r\n              capitalize={false}\r\n              maxWidth={300}\r\n            >\r\n              <span>\r\n                <HelpCircle />\r\n              </span>\r\n            </Tip>\r\n          </>\r\n        )}\r\n      </Column>\r\n      <Column>{swap.typeName}</Column>\r\n      <Column right>\r\n        <Unit sats={swap.amount} suffix={false} />\r\n      </Column>\r\n      <Column right>{swap.createdOnLabel}</Column>\r\n      <Column right>{swap.updatedOnLabel}</Column>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default observer(HistoryRow);\r\n","import React from 'react';\r\nimport { AutoSizer, List, WindowScroller } from 'react-virtualized';\r\nimport { observer, Observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { useStore } from 'store';\r\nimport { ListContainer } from 'components/base';\r\nimport HistoryRow, { HistoryRowHeader, ROW_HEIGHT } from './HistoryRow';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    margin: 100px 0;\r\n  `,\r\n};\r\n\r\nconst HistoryList: React.FC = () => {\r\n  const { swapStore } = useStore();\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <HistoryRowHeader />\r\n      <ListContainer>\r\n        <AutoSizer disableHeight>\r\n          {({ width }) => (\r\n            <WindowScroller>\r\n              {({ height, isScrolling, onChildScroll, scrollTop, registerChild }) => (\r\n                <Observer>\r\n                  {() => (\r\n                    <div ref={ref => ref && registerChild(ref)}>\r\n                      <List\r\n                        autoHeight\r\n                        height={height}\r\n                        isScrolling={isScrolling}\r\n                        onScroll={onChildScroll}\r\n                        rowCount={swapStore.sortedSwaps.length}\r\n                        rowHeight={ROW_HEIGHT}\r\n                        rowRenderer={({ index, key, style }) => (\r\n                          <HistoryRow\r\n                            key={key}\r\n                            style={style}\r\n                            swap={swapStore.sortedSwaps[index]}\r\n                          />\r\n                        )}\r\n                        scrollTop={scrollTop}\r\n                        width={width}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Observer>\r\n              )}\r\n            </WindowScroller>\r\n          )}\r\n        </AutoSizer>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(HistoryList);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport PageHeader from 'components/common/PageHeader';\r\nimport SubServerRequired from 'components/common/SubServerRequired';\r\nimport HistoryList from './HistoryList';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    padding: 40px 0;\r\n  `,\r\n};\r\n\r\nconst HistoryPage: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.history.HistoryPage');\r\n  const { swapStore, subServerStore } = useStore();\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <SubServerRequired status={subServerStore.subServers.loop}>\r\n      <Wrapper>\r\n        <PageHeader title={l('pageTitle')} onExportClick={swapStore.exportSwaps} />\r\n        <HistoryList />\r\n      </Wrapper>\r\n    </SubServerRequired>\r\n  );\r\n};\r\n\r\nexport default observer(HistoryPage);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Swap } from 'store/models';\r\nimport StatusDot from 'components/common/StatusDot';\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst SwapDot: React.FC<Props> = ({ swap }) => {\r\n  switch (swap.stateLabel) {\r\n    case 'Success':\r\n      return <StatusDot status=\"success\" />;\r\n    case 'Failed':\r\n      return <StatusDot status=\"error\" />;\r\n    default:\r\n      return <StatusDot status=\"warn\" />;\r\n  }\r\n};\r\n\r\nexport default observer(SwapDot);\r\n"],"names":["Styled","Wrapper","styled","div","Left","span","Center","Right","BackLink","a","props","theme","colors","offWhite","sizes","xs","observer","title","onBackClick","backText","onHelpClick","exportTip","onExportClick","l","usePrefixedTranslation","onClick","placement","overlay","size","HeaderFour","selected","white","Icon","field","sort","onSort","children","SortIcon","descending","ArrowDown","ArrowUp","handleSortClick","useCallback","StatusMessage","s","lightningGray","gold","Error","SubServerStatusMessage","isDisabled","errorMessage","status","disabled","error","Row","lightBlue","HeaderRow","HeaderColumn","Column","ActionColumn","HistoryRowHeader","settingsStore","useStore","cols","SortableHeader","historySort","setHistorySort","right","swap","style","SwapDot","stateLabel","failureLabel","Tip","failureReason","capitalize","maxWidth","typeName","Unit","sats","amount","suffix","createdOnLabel","updatedOnLabel","swapStore","disableHeight","width","height","isScrolling","onChildScroll","scrollTop","registerChild","ref","autoHeight","onScroll","rowCount","sortedSwaps","length","rowHeight","rowRenderer","index","key","subServerStore","SubServerRequired","subServers","loop","PageHeader","exportSwaps"],"sourceRoot":""}