{"version":3,"file":"static/js/723.d3455403.chunk.js","mappings":"qLAGMA,EAAS,CACbC,QAASC,EAAAA,EAAOC,EAAT,2GACI,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YAG1B,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAoB3C,QATsC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChDT,EAAYD,EAAZC,QACR,OACE,SAACA,EAAD,CAASO,KAAMA,EAAMG,OAAO,SAASF,UAAWA,EAAhD,SACGC,M,6HChBDV,EAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,mFAIPC,KAAMX,EAAAA,EAAOY,KAAT,wFAKJC,OAAQb,EAAAA,EAAOY,KAAT,iEAINE,MAAOd,EAAAA,EAAOY,KAAT,8GAQLG,SAAUf,EAAAA,EAAOC,EAAT,4OAEG,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YACxB,SAAAH,GAAK,OAAIA,EAAMC,MAAMa,MAAMC,MAK7B,SAAAf,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAwD3C,SAAea,EAAAA,EAAAA,KAxCqB,SAAC,GAO9B,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,cAEQC,GAAMC,EAAAA,EAAAA,GAAuB,0BAA7BD,EAEA1B,EAA2CD,EAA3CC,QAASY,EAAkCb,EAAlCa,KAAME,EAA4Bf,EAA5Be,OAAQC,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SACtC,OACE,UAAChB,EAAD,YACE,SAACY,EAAD,UACGS,IACC,UAACL,EAAD,CAAUY,QAASP,EAAnB,WACE,SAAC,KAAD,IACCC,QAIP,SAACR,EAAD,WACE,SAAC,KAAD,CAAa,YAAU,UAAvB,SAAkCM,OAEpC,UAACL,EAAD,WACGQ,IACC,SAAC,IAAD,CAAKM,UAAU,cAAcC,QAASJ,EAAE,WAAxC,UACE,SAAC,KAAD,CAAYK,KAAK,QAAQH,QAASL,MAGrCE,IACC,SAAC,IAAD,CAAKI,UAAU,cAAcC,QAASN,GAAaE,EAAE,aAArD,UACE,SAAC,KAAD,CAAU,YAAU,SAASK,KAAK,QAAQH,QAASH,gB,wFChFzD1B,EAAS,CACbiC,YAAY/B,EAAAA,EAAAA,GAAO+B,EAAAA,GAAP/B,CAAF,sGACN,SAAAE,GAAK,OACLA,EAAM8B,UAAN,yBAES9B,EAAMC,MAAMC,OAAO6B,MAF5B,cAOS,SAAA/B,GAAK,OAAIA,EAAMC,MAAMC,OAAO6B,SAGzCC,KAAMlC,EAAAA,EAAOY,KAAT,qHA2CN,QA3BuB,YAKmB,IAJxCuB,EAIuC,EAJvCA,MACAC,EAGuC,EAHvCA,KACAC,EAEuC,EAFvCA,OACA7B,EACuC,EADvCA,SAEMwB,EAAWG,IAAUC,EAAKD,MAC1BG,EAAWF,EAAKG,WAAaC,EAAAA,GAAYC,EAAAA,GAEzCC,GAAkBC,EAAAA,EAAAA,cAAY,WAClC,IAAMJ,IAAaP,IAAYI,EAAKG,WACpCF,EAAOF,EAAOI,KACb,CAACP,EAAUI,EAAKG,WAAYJ,EAAOE,IAE9BN,EAAqBjC,EAArBiC,WAAYG,EAASpC,EAAToC,KACpB,OACE,UAACH,EAAD,CAAYC,SAAUA,EAAUL,QAASe,EAAzC,UACGlC,EACAwB,IACC,SAACE,EAAD,WACE,SAACI,EAAD,CAAUR,KAAK,mB,qGChDnBhC,EAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,8HAMPkC,cAAe5C,EAAAA,EAAOU,IAAT,mSAIE,SAAAR,GAAK,OAAIA,EAAMC,MAAMa,MAAM6B,KAC/B,SAAA3C,GAAK,OAAIA,EAAMC,MAAMC,OAAO0C,iBAO1B,SAAA5C,GAAK,OAAIA,EAAMC,MAAMC,OAAO2C,QAGzCC,MAAOhD,EAAAA,EAAOU,IAAT,mDAUMuC,EAAgD,SAAC,GAGvD,IAFLC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEQ1B,GAAMC,EAAAA,EAAAA,GAAuB,+BAA7BD,EACA1B,EAAkCD,EAAlCC,QAAS6C,EAAyB9C,EAAzB8C,cAAeI,EAAUlD,EAAVkD,MAChC,OACE,SAACjD,EAAD,WACE,UAAC6C,EAAD,YACE,SAAC,KAAD,CAAMd,KAAK,YAEVoB,GACC,uBAAIzB,EAAE,iBAEN,iCACE,uBAAIA,EAAE,cACN,SAACuB,EAAD,UAAQG,aAsBpB,QAV2C,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQ5C,EAAe,EAAfA,SACpD,OAAI4C,EAAOC,UACF,SAACJ,EAAD,CAAwBC,YAAU,IAChCE,EAAOE,OACT,SAACL,EAAD,CAAwBC,YAAY,EAAOC,aAAcC,EAAOE,SAGlE,8BAAG9C,M,iKCrENV,EAAS,CACbyD,IAAKvD,EAAAA,EAAOY,KAAT,mQAKe,SAAAV,GAAK,OAAKA,EAAMmD,SAAW,IAAM,SAEjC,SAAAnD,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,QAClC,SAAAtD,GAAK,OAAKA,EAAMmD,SAAW,UAAY,aAG/B,SAAAnD,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,QAGhDC,WAAWzD,EAAAA,EAAAA,GAAO0D,EAAAA,GAAP1D,CAAF,iFAoCX,QAtBkC,SAAC,GAAgD,IAA9C2D,EAA6C,EAA7CA,QAASN,EAAoC,EAApCA,SAAUO,EAA0B,EAA1BA,SAAUrD,EAAgB,EAAhBA,UAC1DsD,GAAclB,EAAAA,EAAAA,cAAY,YACzBU,GAAYO,GACfA,GAAUD,KAEX,CAACN,EAAUM,EAASC,IAEfL,EAAmBzD,EAAnByD,IAAKE,EAAc3D,EAAd2D,UACb,OACE,SAACF,EAAD,CACEO,KAAK,WACL,iBAAgBH,EAChB,kBAAiBN,EACjB9C,UAAWA,EACX8C,SAAUA,EACV1B,QAASkC,EANX,SAQGF,IAAW,SAACF,EAAD,CAAW3B,KAAK,a,2DC3C5BhC,EAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,qTAUmB,SAAAR,GAAK,OACvB6D,EAAAA,EAAAA,GAAc7D,EAAMkD,OAAQlD,EAAM8D,OAAQ9D,EAAMC,UAIzC,SAAAD,GAAK,OAAIA,EAAM+D,OACJ,SAAA/D,GAAK,OACvB6D,EAAAA,EAAAA,GAAc7D,EAAMkD,OAAQlD,EAAM8D,OAAQ9D,EAAMC,UAIxD+D,QAASlE,EAAAA,EAAOU,IAAT,qEAIPyD,IAAKnE,EAAAA,EAAOU,IAAT,iFA2BL,SAAeQ,EAAAA,EAAAA,KAhByB,SAAC,GAA4B,IAA1BkD,EAAyB,EAAzBA,QAAS7D,EAAgB,EAAhBA,UAC1CR,EAA0BD,EAA1BC,QAASmE,EAAiBpE,EAAjBoE,QAASC,EAAQrE,EAARqE,IAC1B,OACE,UAACpE,EAAD,CACEkE,IAAKG,EAAQC,aACbjB,OAAQgB,EAAQE,cAChBN,OAAQI,EAAQJ,OAChBzD,UAAWA,EAJb,WAME,SAAC2D,EAAD,KACA,SAACC,EAAD,KACA,SAACD,EAAD,U,0BCnDAK,EAAWvE,EAAAA,EAAOY,KAAV,qLAID,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOoE,SAG5B,SAAAtE,GAAK,OAAIA,EAAMC,MAAMC,OAAO2C,QAG5B,SAAA7C,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,QAG5B,SAAAtD,GAAK,OAAIA,EAAMC,MAAMC,OAAOqE,QASnCC,EAAkD,CACtDC,KAAMJ,EAASK,cAAcC,EAAAA,IAC7BC,GAAIP,EAASK,cAAcG,EAAAA,IAC3BC,IAAKT,EAASK,cAAcK,EAAAA,KAQ9B,QALqC,SAAC,GAA2B,IAAzB7B,EAAwB,EAAxBA,OAAQ8B,EAAgB,EAAhBA,UACxChD,EAAOwC,EAAeQ,GAC5B,OAAO,SAAChD,EAAD,CAAMJ,KAAK,QAAQvB,UAAW6C,EAAQ,uBAAeA,EAAf,YAAyB8B,M,gBCvBlEC,GAAwC,eAC3CC,EAAAA,GAAcC,GAAK,YADwB,SAE3CD,EAAAA,GAAcE,KAAO,SAFsB,SAG3CF,EAAAA,GAAcG,OAAS,SAHoB,GAgC9C,SAAerE,EAAAA,EAAAA,KAtBsB,SAAC,GAAiB,IAAfkD,EAAc,EAAdA,QAC9B3C,GAAMC,EAAAA,EAAAA,GAAuB,oCAA7BD,EACJ2B,EAAS+B,EAAUf,EAAQE,eAG/B,OAFKF,EAAQJ,SAAQZ,EAAS,QAEW,SAArCgB,EAAQoB,0BAER,SAACC,EAAA,EAAD,CACE5D,QAASJ,EAAE2C,EAAQoB,0BACnBE,YAAY,EACZ9D,UAAU,QAHZ,UAKE,2BACE,SAAC,EAAD,CAAawB,OAAQA,EAAQ8B,UAAWd,EAAQoB,gCAMjD,SAACG,EAAA,EAAD,CAAWvC,OAAQA,O,wBCnBtBwC,GAAa5F,EAAAA,EAAAA,GAAO6F,EAAAA,GAAP7F,CAAH,mHAFU,IASpBF,EAAS,CACbgG,KAAK9F,EAAAA,EAAAA,GAAO8F,EAAAA,GAAP9F,CAAF,yJAC4B,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAO2F,YAC9C,SAAA7F,GAAK,OAAKA,EAAM8F,OAAS,MAAQ,OAM1C,SAAA9F,GAAK,OACLA,EAAM+F,YAAN,iFAIsB/F,EAAMC,MAAMC,OAAOyB,QAJzC,uBAQJgE,QAAQ7F,EAAAA,EAAAA,GAAO4F,EAAP5F,CAAF,qDACa,SAAAE,GAAK,OAAKA,EAAMgG,KAAO,KAAO,OAEjDC,cAAcnG,EAAAA,EAAAA,GAAO4F,EAAP5F,CAAF,yEAIZoG,YAAYpG,EAAAA,EAAAA,GAAO4F,EAAP5F,CAAF,yKAQVqG,eAAerG,EAAAA,EAAAA,GAAOsG,EAAAA,GAAPtG,CAAF,oEAIbuG,WAAYvG,EAAAA,EAAOY,KAAT,2CACC,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,QAEvCE,OAAO1D,EAAAA,EAAAA,GAAOwG,EAAPxG,CAAF,iDAGLyG,SAASzG,EAAAA,EAAAA,GAAO0G,EAAP1G,CAAF,iDACS2G,IAEhBC,SAAU5G,EAAAA,EAAOU,IAAT,mDAKJmG,EAAkD,SAAC,GAAiB,IAAfzC,EAAc,EAAdA,QACzD,OACE,SAAC,EAAOwC,SAAR,UACGxC,EAAQ0C,YAAYC,MAAM,MAAMC,KAAI,SAAAC,GAAI,OACvC,yBAAiBA,GAAPA,SAmFLC,GAAmBhG,EAAAA,EAAAA,KA7EJ,WAC1B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,8BAA7BD,EACA0F,GAAkBC,EAAAA,EAAAA,MAAlBD,cAEAtB,EAAoD/F,EAApD+F,OAAQM,EAA4CrG,EAA5CqG,aAAcC,EAA8BtG,EAA9BsG,WAAYC,EAAkBvG,EAAlBuG,cAC1C,OACE,UAAC,KAAD,YACE,SAACF,EAAD,UACGgB,EAAcE,YAAYlF,QACzB,SAACsD,EAAA,EAAD,CAAK5D,QAASJ,EAAE,aAAcG,UAAU,QAAxC,UACE,SAAC,KAAD,WACE,SAACyE,EAAD,CAAevE,KAAK,UAAUH,QAASwF,EAAcG,0BAK7D,SAACzB,EAAD,CAAQ0B,OAAK,EAAb,UACE,SAACC,EAAA,EAAD,CACErF,MAAM,gBACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,iBAAM,YAAU,uBAAhB,SAAwChG,EAAE,qBAG9C,SAAC2E,EAAD,CAAYsB,KAAM,EAAGC,OAAQ,KAC7B,SAAC9B,EAAD,WACE,SAAC2B,EAAA,EAAD,CACErF,MAAM,eACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,iBAAM,YAAU,oBAAhB,SAAqChG,EAAE,kBAG3C,SAACoE,EAAD,WACE,SAAC2B,EAAA,EAAD,CACErF,MAAM,gBACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,SAAChC,EAAA,EAAD,CAAK5D,QAASJ,EAAE,cAAeiE,YAAY,EAA3C,UACE,iBAAM,YAAU,mBAAhB,SAAoCjE,EAAE,oBAI5C,SAACoE,EAAD,WACE,SAAC2B,EAAA,EAAD,CACErF,MAAM,gBACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,iBAAM,YAAU,sBAAhB,SAAuChG,EAAE,iBAG7C,SAAC2E,EAAD,CAAYsB,KAAM,EAAlB,UACE,SAACF,EAAA,EAAD,CACErF,MAAM,aACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,iBAAM,YAAU,oBAAhB,SAAqChG,EAAE,eAG3C,SAACoE,EAAD,CAAQ0B,OAAK,EAACrB,MAAI,EAAlB,UACE,SAACsB,EAAA,EAAD,CACErF,MAAM,WACNC,KAAM+E,EAAcE,YACpBhF,OAAQ8E,EAAcM,eAHxB,UAKE,iBAAM,YAAU,wBAAhB,SAAyChG,EAAE,wBA4ErD,SAAeP,EAAAA,EAAAA,KA9DqB,SAAC,GAAwB,IAAtBkD,EAAqB,EAArBA,QAASwD,EAAY,EAAZA,MACtCC,GAAkBT,EAAAA,EAAAA,MAAlBS,cAEFC,EAAWD,EAAcE,aACzB1E,EAAWwE,EAAcG,WACzBrE,EAAUkE,EAAcI,gBAAgBC,SAAS9D,EAAQ+D,QACzDnC,EAAS8B,GAAYzE,IAAaM,EAMhCmC,EAAsEhG,EAAtEgG,IAAKD,EAAiE/F,EAAjE+F,OAAQM,EAAyDrG,EAAzDqG,aAAcC,EAA2CtG,EAA3CsG,WAAYG,EAA+BzG,EAA/ByG,WAAY7C,EAAmB5D,EAAnB4D,MAAO+C,EAAY3G,EAAZ2G,QAClE,OACE,UAACX,EAAD,CACEE,OAAQA,EACR4B,MAAOA,EACP3B,WAAY6B,IAAazE,EACzB1B,QAASmG,IAAazE,EAVD,WACvBwE,EAAcO,sBAAsBhE,EAAQ+D,cASUE,EAJtD,WAME,SAAClC,EAAD,UACG2B,GACC,SAACpE,EAAD,CAAOC,QAASA,EAASN,SAAUA,KAEnC,SAACkD,EAAD,WACE,SAAC,EAAD,CAAanC,QAASA,SAI5B,SAACyB,EAAD,CAAQ0B,OAAK,EAAb,UACE,SAACe,EAAA,EAAD,CAAMC,KAAMnE,EAAQoE,cAAeC,QAAQ,OAE7C,SAACrC,EAAD,CAAYsB,KAAM,EAAGC,OAAQ,EAA7B,UACE,SAAClB,EAAD,CAASrC,QAASA,OAEpB,SAACyB,EAAD,WACE,SAACyC,EAAA,EAAD,CAAMC,KAAMnE,EAAQsE,aAAcD,QAAQ,OAE5C,SAAC5C,EAAD,WACE,SAACJ,EAAA,EAAD,CAAK5D,QAAO,UAAKuC,EAAQuE,cAAb,QAAkC/G,UAAU,OAAO8D,YAAY,EAA3E,UACE,0BAAOtB,EAAQwE,oBAGnB,SAAC/C,EAAD,UAASzB,EAAQyE,iBACjB,SAACzC,EAAD,CAAYsB,KAAM,EAAlB,UACE,SAACjC,EAAA,EAAD,CACE5D,SAAS,SAACgF,EAAD,CAAiBzC,QAASA,IACnCxC,UAAU,OACV8D,YAAY,EAHd,UAKE,2BACE,SAACoD,EAAA,EAAD,CAAcxI,KAAM8D,EAAQ2E,cAA5B,SAA4C3E,EAAQ4E,oBAI1D,SAACnD,EAAD,CAAQ0B,OAAK,EAAb,UACE,SAACe,EAAA,EAAD,CAAMC,KAAMnE,EAAQ6E,SAAUR,QAAQ,Y,SC9NxC3I,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,+CAGPC,cAAenJ,EAAAA,EAAOU,IAAT,sYA8Df,UAAeQ,EAAAA,EAAAA,KA5Ce,WAC5B,IAAQ2G,GAAkBT,EAAAA,EAAAA,MAAlBS,cAEA9H,EAA2BD,GAA3BC,QAASoJ,EAAkBrJ,GAAlBqJ,cACjB,OACE,UAACpJ,EAAD,CAAS,YAAU,eAAnB,WACE,SAACmH,EAAD,KACA,SAACiC,EAAD,WACE,SAAC,KAAD,CAAWC,eAAa,EAAxB,SACG,gBAAGC,EAAH,EAAGA,MAAH,OACC,SAAC,KAAD,UACG,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,YAAaC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,UAAWC,EAAlD,EAAkDA,cAAlD,OACC,SAAC,KAAD,UACG,kBACC,gBAAKC,IAAK,SAAAA,GAAG,OAAIA,GAAOD,EAAcC,IAAtC,UACE,SAAC,KAAD,CACEC,YAAU,EACVN,OAAQA,EACRC,YAAaA,EACbM,SAAUL,EACVM,SAAUjC,EAAckC,SAASC,OACjCC,UD/BE,GCgCFC,YAAa,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAKxC,EAAf,EAAeA,MAAf,OACX,SAAC,EAAD,CAEEA,MAAOA,EACPxD,QAASyD,EAAckC,SAASI,IAF3BC,IAKTX,UAAWA,EACXJ,MAAOA,uB,6BCtDzBvJ,GAAS,CACbC,QAASC,EAAAA,EAAOY,KAAT,qFA8BT,SAnB0C,SAAC,GAA0B,IAAxByJ,EAAuB,EAAvBA,MAAO9J,EAAgB,EAAhBA,UAC1CkB,GAAMC,EAAAA,EAAAA,GAAuB,8BAA7BD,EAEF6I,EAEA7I,EADM,IAAV4I,EACM,gBACQ,IAAVA,EACE,kBACA,oBAEAtK,EAAYD,GAAZC,QACR,OACE,UAACA,EAAD,CAASQ,UAAWA,EAApB,UACG8J,EAAQ,IAAK,SAAC,KAAD,UAAOA,KACrB,0BAAOC,Q,yBCrBPxK,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,iDAGPqB,QAASvK,EAAAA,EAAOU,IAAT,kGAKP8J,UAAWxK,EAAAA,EAAOU,IAAT,6SAKa,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOqK,YAM1B,SAAAvK,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,WAGpD6I,WAAW1K,EAAAA,EAAAA,GAAO2K,EAAAA,GAAP3K,CAAF,qDAGT4K,UAAU5K,EAAAA,EAAAA,GAAO6K,GAAP7K,CAAF,0CAGR8K,KAAM9K,EAAAA,EAAOY,KAAT,sHAGW,SAAAV,GAAK,OAAIA,EAAMC,MAAMa,MAAM6B,KAC/B,SAAA3C,GAAK,OAAIA,EAAMC,MAAMC,OAAOqE,QAEvCsG,QAAS/K,EAAAA,EAAOY,KAAT,yFA+ET,UAAeM,EAAAA,EAAAA,KAxEe,WAC5B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,yBAA7BD,EACR,GAA+C2F,EAAAA,EAAAA,MAAvCS,EAAR,EAAQA,cAAemD,EAAvB,EAAuBA,oBAErBC,EAKEpD,EALFoD,aACAC,EAIErD,EAJFqD,kBACAC,EAGEtD,EAHFsD,oBACAC,EAEEvD,EAFFuD,mBACAC,EACExD,EADFwD,oBAEIC,GAAgB3I,EAAAA,EAAAA,cAAY,kBAAMsI,EAAaM,GAAAA,GAAcC,OAAM,CACvEP,IAEIQ,GAAe9I,EAAAA,EAAAA,cAAY,kBAAMsI,EAAaM,GAAAA,GAAcG,MAAK,CAACT,IAClEU,EAAgB9D,EAAcI,gBAAgB+B,OAEhD4B,EACDT,GAAwBC,EAErB,GADA3J,EAAE,kBAAmB,CAAEoK,KAAKC,EAAAA,GAAAA,IAAWjE,EAAckE,kBAAkBF,OAExER,IACHO,EAAOnK,EAAE,eAGX,IAAQ1B,EAAoED,GAApEC,QAASwK,EAA2DzK,GAA3DyK,QAASC,EAAkD1K,GAAlD0K,UAAWE,EAAuC5K,GAAvC4K,UAAWE,EAA4B9K,GAA5B8K,SAAUE,EAAkBhL,GAAlBgL,KAAMC,EAAYjL,GAAZiL,QAChE,OACE,SAAChL,EAAD,CAAS,YAAU,eAAnB,SACG8H,EAAcmE,aACb,UAACzB,EAAD,YACE,UAACC,EAAD,YACE,SAACE,EAAD,CAAW/I,QAASkG,EAAcoE,UAClC,SAACrB,EAAD,CAAUP,MAAOsB,KACjB,SAAC,KAAD,CACEO,QAASf,GAAuBD,IAAsBK,GAAAA,GAAcC,IACpEW,YAAU,EACVxK,QAAS2J,EACTjI,UAAW8H,EACX,YAAU,WALZ,SAOG1J,EAAE,qBAEL,SAAC,KAAD,CACEyK,QACEb,GACAD,GACAF,IAAsBK,GAAAA,GAAcG,GAEtCS,YAAU,EACVxK,QAAS8J,EACTpI,UAAWgI,IAAwBD,EARrC,SAUG3J,EAAE,sBAGNmK,IAAQ,SAACd,EAAD,UAAOc,QAGlB,UAACb,EAAD,YACE,UAAC,KAAD,CAAQ,YAAU,OAAOpJ,QAASkG,EAAcuE,UAAhD,WACE,SAAC,KAAD,IACC3K,EAAE,mBAEL,UAAC,KAAD,CAAQ0K,YAAU,EAACxK,QAASqJ,EAAoBqB,cAAhD,WACE,SAAC,KAAD,IACC5K,EAAE,8B,gBC9GT3B,GAAS,CACbwM,SAAUtM,EAAAA,EAAOU,IAAT,6HAGc,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,WAGlD0K,OAAQvM,EAAAA,EAAOU,IAAT,qFAIN8L,cAAcxM,EAAAA,EAAAA,GAAOyM,EAAAA,GAAPzM,CAAF,+JAUZ0M,KAAM1M,EAAAA,EAAOU,IAAT,6HACW,SAAAR,GAAK,OAAIA,EAAMC,MAAMa,MAAM2L,OAgD5C,SAnB8B,SAAC,GAAsD,IAApDxL,EAAmD,EAAnDA,MAAO8F,EAA4C,EAA5CA,KAAM2F,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,gBAAiBrM,EAAe,EAAfA,SAC3DiB,GAAMC,EAAAA,EAAAA,GAAuB,oBAA7BD,EAEA6K,EAAyCxM,GAAzCwM,SAAUC,EAA+BzM,GAA/ByM,OAAQC,EAAuB1M,GAAvB0M,aAAcE,EAAS5M,GAAT4M,KACxC,OACE,UAACJ,EAAD,CAAU,YAAWM,EAArB,WACE,UAACL,EAAD,YACE,SAAC,KAAD,CAAYO,YAAU,EAAtB,SAAwB3L,IACvB0L,IACC,SAACpH,EAAA,EAAD,CAAK5D,QAASJ,EAAE,eAAhB,UACE,SAAC+K,EAAD,CAAc7K,QAASkL,SAI5B5F,GAAO,SAACyF,EAAD,UAAOzF,IAAezG,M,qBC9D9BV,GAAS,CACbiN,aAAa/M,EAAAA,EAAAA,GAAO6F,EAAAA,GAAP7F,CAAF,oDAGXgN,WAAWhN,EAAAA,EAAAA,GAAOiN,EAAAA,GAAPjN,CAAF,6HAiCX,UAAekB,EAAAA,EAAAA,KAzBe,WAC5B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,yBAA7BD,EACAyL,GAAc9F,EAAAA,EAAAA,MAAd8F,UAEAH,EAA2BjN,GAA3BiN,YAAaC,EAAclN,GAAdkN,UACrB,OACE,gCACqC,IAAlCE,EAAUC,aAAanD,SAAgB,SAAC,KAAD,UAAQvI,EAAE,cACjDyL,EAAUC,aAAanG,KAAI,SAAAoG,GAAI,OAC9B,UAAC,KAAD,YACE,UAAC,KAAD,CAAQ1F,KAAM,EAAd,WACE,SAAC2F,GAAA,EAAD,CAASD,KAAMA,KACf,SAACJ,EAAD,UAAYI,EAAKE,UAAUC,2BAE7B,SAACR,EAAD,CAAarF,KAAM,EAAnB,UACE,SAACsF,EAAD,WACE,SAAC1E,EAAA,EAAD,CAAMC,KAAM6E,EAAKI,eAPbJ,EAAKK,a,OCpBjB3N,GAAS,CACb4N,YAAa1N,EAAAA,EAAOkJ,QAAT,oDAyCb,UAAehI,EAAAA,EAAAA,KApCa,WAC1B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,uBAA7BD,EACR,GAAkC2F,EAAAA,EAAAA,MAA1BuG,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,QAEdF,EAAgB5N,GAAhB4N,YACR,OACE,SAACA,EAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,GAAD,CACEd,KAAK,UACLzL,MAAOM,EAAE,WACToL,gBAAiBe,EAAQC,sBAH3B,UAKE,SAAC,GAAD,SAGJ,SAAC,KAAD,CAAQnG,KAAM,EAAd,UACE,SAAC,GAAD,CACEkF,KAAK,UACLzL,MAAOM,EAAE,WACTwF,MAAM,SAACqB,EAAA,EAAD,CAAMC,KAAMoF,EAAaG,oBAGnC,SAAC,KAAD,CAAQpG,KAAM,EAAd,UACE,SAAC,GAAD,CACEkF,KAAK,WACLzL,MAAOM,EAAE,YACTwF,MAAM,SAACqB,EAAA,EAAD,CAAMC,KAAMoF,EAAaI,4B,mCCnCrCjO,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,6FAKPgK,WAAW1K,EAAAA,EAAAA,GAAO2K,EAAAA,GAAP3K,CAAF,iFACa,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOqE,QAGlDuJ,aAAchO,EAAAA,EAAOY,KAAT,6CACD,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOoD,SA4BzC,UAAetC,EAAAA,EAAAA,KApBqB,SAAC,GAAc,IAAZkM,EAAW,EAAXA,KAC7B3L,GAAMC,EAAAA,EAAAA,GAAuB,mCAA7BD,EAEAyL,GAAc9F,EAAAA,EAAAA,MAAd8F,UACFe,GAAmBtL,EAAAA,EAAAA,cAAY,kBAAMuK,EAAUgB,YAAYd,EAAKK,MAAK,CACzEP,EACAE,IAGMrN,EAAqCD,GAArCC,QAAS2K,EAA4B5K,GAA5B4K,UAAWsD,EAAiBlO,GAAjBkO,aAC5B,OACE,UAACjO,EAAD,YACE,SAAC0F,EAAA,EAAD,CAAK5D,QAASJ,EAAE,cAAhB,UACE,SAACiJ,EAAD,CAAW/I,QAASsM,OAEtB,SAACD,EAAD,UAAeZ,EAAKe,mB,aClCpBrO,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gDAGP0N,IAAKpO,EAAAA,EAAOU,IAAT,iIAMH2N,QAASrO,EAAAA,EAAOU,IAAT,sIAiCT,UAAeQ,EAAAA,EAAAA,KArBmB,SAAC,GAAc,IAAZkM,EAAW,EAAXA,KAC3BrN,EAA0BD,GAA1BC,QAASqO,EAAiBtO,GAAjBsO,IAAKC,EAAYvO,GAAZuO,QACtB,OACE,UAACtO,EAAD,YACE,SAACqO,EAAD,WACE,SAACf,GAAA,EAAD,CAASD,KAAMA,OAEjB,UAACiB,EAAD,YACE,SAAC,KAAD,CAAYvB,YAAU,EAAtB,UACE,SAACrH,EAAA,EAAD,CAAK5D,QAASuL,EAAKK,GAAnB,UACE,0BAAOL,EAAKkB,kBAGhB,0BACE,SAAChG,EAAA,EAAD,CAAMC,KAAM6E,EAAKI,oB,8BCvCnBe,GAAsBC,GAAAA,SAAtBD,QAASE,GAAaD,GAAAA,SAAbC,SAEfC,GAKEC,GAAAA,UALFD,UACAE,GAIED,GAAAA,UAJFC,kBACAC,GAGEF,GAAAA,UAHFE,eACAC,GAEEH,GAAAA,UAFFG,QACAC,GACEJ,GAAAA,UADFI,gBAKIC,IAAuC,iBAC1CT,GAAU,CAACG,GAAWG,GAAgBE,GAAiBD,MADb,UAE1CL,GAAW,CAACC,GAAWE,GAAmBE,KAFA,IAKvChP,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gGAKPuO,MAAOjP,EAAAA,EAAOU,IAAT,uIAMLwO,OAAQlP,EAAAA,EAAOU,IAAT,qOAGK,SAAAR,GAAK,OAAIA,EAAM+D,OAEX,SAAA/D,GAAK,OAAIA,EAAMC,MAAMa,MAAMC,MAI7B,SAAAf,GAAK,OAAIA,EAAMC,MAAMC,OAAOqE,QAGzC0K,KAAMnP,EAAAA,EAAOU,IAAT,qHAEO,SAAAR,GAAK,OAAIA,EAAM+D,OACJ,SAAA/D,GAAK,OACvBA,EAAMkP,QAAUN,GAAU5O,EAAMC,MAAMC,OAAOoE,MAAQtE,EAAMC,MAAMC,OAAO2C,SA2B9E,UAAe7B,EAAAA,EAAAA,KAlBuB,SAAC,GAAc,IAAZkM,EAAW,EAAXA,KACjCiC,EAAQL,GAAc5B,EAAKkC,MAC3BrL,EAAMsL,KAAKC,OAAQH,EAAMI,QAAQrC,EAAKgC,OAAS,GAAKC,EAAMrF,OAAU,KAElEjK,EAAiCD,GAAjCC,QAASmP,EAAwBpP,GAAxBoP,OAAQD,EAAgBnP,GAAhBmP,MAAOE,EAASrP,GAATqP,KAChC,OACE,UAACpP,EAAD,CAAS,YAAU,gBAAnB,WACE,UAACmP,EAAD,CAAQjL,IAAKA,EAAb,WACE,0BAAOmJ,EAAKsC,YACZ,0BAAOtC,EAAKe,iBAEd,SAACc,EAAD,WACE,SAACE,EAAD,CAAMC,MAAOhC,EAAKgC,MAAOnL,IAAKA,EAAK9C,MAAOiM,EAAKe,qB,UC9DjDrO,GAAS,CACbgG,KAAK9F,EAAAA,EAAAA,GAAO8F,EAAAA,GAAP9F,CAAF,sDAGH2P,SAAS3P,EAAAA,EAAAA,GAAO6F,EAAAA,GAAP7F,CAAF,oDAuBT,UAAekB,EAAAA,EAAAA,KAd4B,SAAC,GAAc,IAAZkM,EAAW,EAAXA,KACpCtH,EAAiBhG,GAAjBgG,IAAK6J,EAAY7P,GAAZ6P,QACb,OACE,UAAC7J,EAAD,YACE,SAAC6J,EAAD,CAASjI,KAAM,EAAf,UACE,SAAC,GAAD,CAAU0F,KAAMA,OAElB,SAAC,KAAD,UACGA,EAAKwC,UAAW,SAAC,GAAD,CAAYxC,KAAMA,KAAW,SAAC,GAAD,CAAcA,KAAMA,Y,mBCnBpEtN,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,uPAKe,SAAAhJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOqK,YAGjC,SAAAvK,GAAK,OAAKA,EAAM2P,QAAU,IAAM,UAEjDtD,OAAQvM,EAAAA,EAAOU,IAAT,+GAKNoP,QAAS9P,EAAAA,EAAOU,IAAT,6EAIPqP,SAAU/P,EAAAA,EAAOU,IAAT,uGAKRsP,kBAAkBhQ,EAAAA,EAAAA,GAAOiQ,GAAAA,EAAPjQ,CAAF,oEAkClB,UAAekB,EAAAA,EAAAA,KA5BmB,WAChC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,wCAA7BD,EACR,GAA8C2F,EAAAA,EAAAA,MAAtC8F,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,QAASzG,EAA5B,EAA4BA,cAEpBpH,EAAyDD,GAAzDC,QAASwM,EAAgDzM,GAAhDyM,OAAQuD,EAAwChQ,GAAxCgQ,QAASC,EAA+BjQ,GAA/BiQ,SAAUC,EAAqBlQ,GAArBkQ,iBAC5C,OACE,UAACjQ,EAAD,CAAS8P,QAAS1I,EAAc+I,eAAhC,WACE,UAAC3D,EAAD,YACE,SAAC,KAAD,UAAa9K,EAAE,YACf,SAACgE,EAAA,EAAD,CAAK5D,QAASJ,EAAE,YAAhB,UACE,SAAC,KAAD,CAAO,YAAU,aAAaE,QAASiM,EAAQC,8BAGnD,UAACiC,EAAD,CAAS,YAAU,mBAAnB,UACG5C,EAAUiD,gBAAgBnJ,KAAI,SAAAoG,GAAI,OACjC,SAAC,GAAD,CAAiCA,KAAMA,GAAfA,EAAKK,OAEO,IAArCP,EAAUiD,gBAAgBnG,SACzB,UAAC+F,EAAD,YACE,SAACC,EAAD,CAAkBI,cAAeC,MACjC,SAAC,KAAD,UAAa5O,EAAE,0B,aCvDrB3B,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,0NAIe,SAAAhJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOqK,YAGjC,SAAAvK,GAAK,OAAKA,EAAM2P,QAAU,IAAM,UAEjDS,IAAKtQ,EAAAA,EAAOU,IAAT,8CAGHoP,QAAS9P,EAAAA,EAAOU,IAAT,yHA6BT,UAAeQ,EAAAA,EAAAA,KAhBiB,SAAC,GAAwC,IAAtC2O,EAAqC,EAArCA,QAASzO,EAA4B,EAA5BA,YAAaZ,EAAe,EAAfA,SAC/CiB,GAAMC,EAAAA,EAAAA,GAAuB,sBAA7BD,EAEA1B,EAA0BD,GAA1BC,QAASuQ,EAAiBxQ,GAAjBwQ,IAAKR,EAAYhQ,GAAZgQ,QACtB,OACE,UAAC/P,EAAD,CAAS8P,QAASA,EAAlB,WACE,SAACS,EAAD,WACE,SAAC7K,EAAA,EAAD,CAAK5D,QAASJ,EAAE,WAAhB,UACE,SAAC,KAAD,CAAWE,QAASP,SAGxB,SAAC0O,EAAD,UAAUtP,U,UCvCVV,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gFAIP6P,aAAcvQ,EAAAA,EAAOU,IAAT,2CA6Bd,SAjBuC,SAAC,GAA4C,IAA1C8P,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC7DlP,GAAMC,EAAAA,EAAAA,GAAuB,6BAA7BD,EAEA1B,EAA0BD,GAA1BC,QAASwQ,EAAiBzQ,GAAjByQ,aACjB,OACE,UAACxQ,EAAD,YACE,SAACwQ,EAAD,UAAeI,KACf,SAAC,KAAD,CAAQC,OAAK,EAACzE,YAAU,EAACxK,QAAS6O,EAAlC,SACG/O,EAAE,oBAEL,SAAC,KAAD,CAAQyK,SAAO,EAAC0E,OAAK,EAACjP,QAAS8O,EAA/B,SACGC,GAAajP,EAAE,qB,aC7BlB3B,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,4JAOPmQ,aAAa7Q,EAAAA,EAAAA,GAAOiN,EAAAA,GAAPjN,CAAF,+CAGX8Q,SAAU9Q,EAAAA,EAAOU,IAAT,qDA0BV,SAduC,SAAC,GAA4C,IAA1CS,EAAyC,EAAzCA,MAAO4P,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,YAAaL,EAAY,EAAZA,MAC7D5Q,EAAyBD,GAAzBC,QAAS8Q,EAAgB/Q,GAAhB+Q,YACjB,OACE,UAAC9Q,EAAD,YACE,4BACE,SAAC,KAAD,UAAaoB,KACb,SAAC,KAAD,UAAa4P,IACZC,IAAe,SAACH,EAAD,UAAcG,QAEhC,yBAAML,Q,gBC5BN7Q,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,+HAMPuQ,QAASjR,EAAAA,EAAOU,IAAT,qIAMPwQ,OAAQlR,EAAAA,EAAOU,IAAT,uIAMNyQ,MAAOnR,EAAAA,EAAOU,IAAT,sRASmB,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAOyB,YAmCtD,UAAeX,EAAAA,EAAAA,KA5BqB,WAClC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,uCAA7BD,EACAuJ,GAAwB5D,EAAAA,EAAAA,MAAxB4D,oBAEAjL,EAAoCD,GAApCC,QAASkR,EAA2BnR,GAA3BmR,QAASC,EAAkBpR,GAAlBoR,OAAQC,EAAUrR,GAAVqR,MAClC,OACE,UAACpR,EAAD,YACE,SAACkR,EAAD,WACE,SAAC,GAAD,CACE9P,MAAOM,EAAE,SACTsP,QAAStP,EAAE,WACXuP,YAAavP,EAAE,oBAGnB,UAACyP,EAAD,YACE,SAACC,EAAD,WACE,0BAAOnG,EAAoBoG,YAE7B,SAAC,GAAD,CACEZ,SAAUxF,EAAoBiB,OAC9BwE,OAAQzF,EAAoBqG,aAC5BX,UAAWjP,EAAE,6B,gBCvDjB3B,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,+HAMPuQ,QAASjR,EAAAA,EAAOU,IAAT,qIAMPwQ,OAAQlR,EAAAA,EAAOU,IAAT,qIAMNyQ,MAAOnR,EAAAA,EAAOU,IAAT,0KA+CP,UAAeQ,EAAAA,EAAAA,KAnCmB,WAChC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,qCAA7BD,EACAuJ,GAAwB5D,EAAAA,EAAAA,MAAxB4D,oBACFsG,GAAqB3O,EAAAA,EAAAA,cAAY,SAAC4O,GACtCvG,EAAoBwG,UAAUD,EAAE9Q,OAAOgR,SACtC,IAEK1R,EAAoCD,GAApCC,QAASkR,EAA2BnR,GAA3BmR,QAASC,EAAkBpR,GAAlBoR,OAAQC,EAAUrR,GAAVqR,MAClC,OACE,UAACpR,EAAD,YACE,SAACkR,EAAD,WACE,SAAC,GAAD,CACE9P,MAAOM,EAAE,SACTsP,QAAStP,EAAE,WACXuP,YAAavP,EAAE,oBAGnB,UAACyP,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CACEO,YAAY,sBACZD,MAAOzG,EAAoBoG,OAC3BxN,SAAU0N,EACV,aAAW,oBAGf,SAAC,GAAD,CACEd,SAAUxF,EAAoBiB,OAC9BwE,OAAQzF,EAAoBqG,wB,UC5DhCvR,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,0HAMP8G,kBAAkBhQ,EAAAA,EAAAA,GAAOiQ,GAAAA,EAAPjQ,CAAF,oEAmBlB,UAAekB,EAAAA,EAAAA,KAbmB,WAChC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,qCAA7BD,EAEA1B,EAA8BD,GAA9BC,QAASiQ,EAAqBlQ,GAArBkQ,iBACjB,OACE,UAACjQ,EAAD,YACE,SAACiQ,EAAD,CAAkBI,cAAeC,MACjC,SAAC,KAAD,UAAa5O,EAAE,cACf,yBAAMA,EAAE,kB,kBCvBR3B,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gIAmBT,UAAeQ,EAAAA,EAAAA,KAXwB,WACrC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,0CAA7BD,EAEA1B,EAAYD,GAAZC,QACR,OACE,SAACA,EAAD,WACE,SAAC4R,GAAA,EAAD,CAASC,QAASnQ,EAAE,qBCoB1B,UAAeP,EAAAA,EAAAA,KA/BiB,WAC9B,IAEI2Q,EAFJ,GAA+CzK,EAAAA,EAAAA,MAAvC4D,EAAR,EAAQA,oBAAqB7D,EAA7B,EAA6BA,cAG7B,OAAQ6D,EAAoB8G,aAC1B,KAAKC,GAAAA,GAAqBC,YACxBH,GAAM,SAAC,GAAD,IACN,MACF,KAAKE,GAAAA,GAAqBE,cACxBJ,GAAM,SAAC,GAAD,IACN,MACF,KAAKE,GAAAA,GAAqBG,WACxBL,GAAM,SAAC,GAAD,IACN,MACF,KAAKE,GAAAA,GAAqBhC,SACxB8B,GAAM,SAAC,GAAD,IACN,MACF,QACE,OAAO,KAGX,OACE,SAAC,GAAD,CACEhC,QAAS1I,EAAc+I,eACvB9O,YAAa4J,EAAoBmH,aAFnC,SAIGN,O,2CChCD/R,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,sHAIU,SAAAR,GAAK,OAAKA,EAAMqH,MAAQ,WAAa,gBAEtD6K,WAAYpS,EAAAA,EAAOY,KAAT,kTAIY,SAAAV,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YACvC,SAAAH,GAAK,OACZA,EAAM8D,OAAS9D,EAAMC,MAAMC,OAAOqK,SAAWvK,EAAMC,MAAMC,OAAOC,YAC9C,SAAAH,GAAK,OACvBA,EAAM8D,OAAS9D,EAAMC,MAAMC,OAAO6B,MAAQ/B,EAAMC,MAAMC,OAAOqK,YAIpD,SAAAvK,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,YACjB,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOqK,YAC5B,SAAAvK,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,aAyBtD,SAZ+B,SAAC,GAAmD,IAAjD4G,EAAgD,EAAhDA,KAAM+J,EAA0C,EAA1CA,YAAahN,EAA6B,EAA7BA,OAAQuD,EAAqB,EAArBA,MAAO5F,EAAc,EAAdA,QAC1D5B,EAAwBD,GAAxBC,QAASqS,EAAetS,GAAfsS,WACjB,OACE,UAACrS,EAAD,CAASwH,MAAOA,EAAhB,WACE,SAAC6K,EAAD,CAAYpO,OAAQA,EAAQrC,QAASA,EAASmC,KAAK,SAAS,iBAAgBE,EAA5E,SACGiD,KAEH,SAAC,KAAD,UAAQ+J,Q,UCtCRlR,GAAS,CACbuS,WAAYrS,EAAAA,EAAOU,IAAT,+GAKV4R,aAActS,EAAAA,EAAOsK,MAAT,+FAGG,SAAApK,GAAK,OAAIA,EAAMC,MAAMa,MAAM2L,OAmE5C,SAtD+B,SAAC,GAOzB,IAAD,IANJ8E,MAAAA,OAMI,MANIc,IAAAA,CAAI,IAMR,MALJ1G,IAAAA,OAKI,MALE0G,IAAAA,CAAI,GAKN,MAJJC,IAAAA,OAII,MAJED,IAAAA,CAAI,KAIN,MAHJE,KAAAA,OAGI,MAHG,EAGH,EAFJC,EAEI,EAFJA,WACA9O,EACI,EADJA,SAEM+O,GAAmBhQ,EAAAA,EAAAA,cAAY,kBAAMiB,GAAYA,EAASiI,KAAM,CAACA,EAAKjI,IACtEgP,GAAmBjQ,EAAAA,EAAAA,cAAY,kBAAMiB,GAAYA,EAAS4O,KAAM,CAACA,EAAK5O,IACtEiP,GAAqBlQ,EAAAA,EAAAA,cACzB,SAAC4O,GAAD,OAAsC3N,GAAYA,EAAS2O,IAAAA,CAAIhB,EAAE9Q,OAAOgR,UACxE,CAAC7N,IAGKyO,EAA6BvS,GAA7BuS,WAAYC,EAAiBxS,GAAjBwS,aACpB,OACE,2BACGI,IACC,UAACL,EAAD,YACE,SAAC,GAAD,CACEpL,KAAK,MACL+J,aAAa,SAAC1I,EAAA,EAAD,CAAMC,KAAMsD,IACzBlK,QAASgR,EACT3O,OAAQ6H,EAAIiH,GAAGrB,MAEjB,SAAC,GAAD,CACExK,KAAK,MACL+J,aAAa,SAAC1I,EAAA,EAAD,CAAMC,KAAMiK,IACzB7Q,QAASiR,EACT5O,OAAQwO,EAAIM,GAAGrB,GACflK,OAAK,QAIX,0BACE,SAAC,KAAD,CACE,aAAW,eACXhH,UAAU,eACV+O,KAAK,QACLmC,OAAQA,EACR5F,KAAMA,EACN2G,KAAMA,EACNC,KAAMA,EACN7O,SAAUiP,OAGd,SAACP,EAAD,WACE,SAAChK,EAAA,EAAD,CAAMC,KAAMkJ,U,UCxEd3R,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gFAIP6P,aAAcvQ,EAAAA,EAAOU,IAAT,2CA6Bd,SAjBqC,SAAC,GAA0C,IAAxCqS,EAAuC,EAAvCA,QAASvC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQE,EAAY,EAAZA,MACzDlP,GAAMC,EAAAA,EAAAA,GAAuB,8BAA7BD,EAEA1B,EAA0BD,GAA1BC,QAASwQ,EAAiBzQ,GAAjByQ,aACjB,OACE,UAACxQ,EAAD,YACE,SAACwQ,EAAD,UAAeI,KACf,SAAC,KAAD,CAAQC,OAAK,EAACzE,YAAU,EAACxK,QAAS6O,EAAlC,SACG/O,EAAE,aAEL,SAAC,KAAD,CAAQyK,SAAO,EAAC0E,OAAK,EAACjP,QAAS8O,EAA/B,SACahP,EAAVsR,EAAY,UAAe,c,aC3B9BjT,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,4JAOPmQ,aAAa7Q,EAAAA,EAAAA,GAAOiN,EAAAA,GAAPjN,CAAF,+CAGX8Q,SAAU9Q,EAAAA,EAAOU,IAAT,qDA6BV,SAlBqC,SAAC,GAAqC,IAAnCS,EAAkC,EAAlCA,MAAO4P,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC9CnJ,GAAkBT,EAAAA,EAAAA,MAAlBS,cAEA9H,EAAyBD,GAAzBC,QAAS8Q,EAAgB/Q,GAAhB+Q,YACjB,OACE,UAAC9Q,EAAD,YACE,4BACE,SAAC,KAAD,UAAaoB,KACb,SAAC,KAAD,UAAa4P,IACZC,IAAe,SAACH,EAAD,UAAcG,QAEhC,0BACE,SAAC,GAAD,CAAkB3G,MAAOxC,EAAcI,gBAAgB+B,e,mBC5BzDlK,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,+HAMPuQ,QAASjR,EAAAA,EAAOU,IAAT,qIAMPsS,OAAQhT,EAAAA,EAAOU,IAAT,qIAMNuS,QAASjT,EAAAA,EAAOU,IAAT,mXACM,SAAAR,GAAK,OAAKA,EAAMgT,QAAU,SAAW,OAQtC,SAAAhT,GAAK,OAAKA,EAAMgT,QAAU,QAAU,OAQhDC,YAAYnT,EAAAA,EAAAA,GAAOmR,EAAAA,GAAPnR,CAAF,yHAEK,SAAAE,GAAK,OAAIA,EAAMC,MAAMa,MAAM6B,MA+F5C,UAAe3B,EAAAA,EAAAA,KAzFkB,WAC/B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,iCAA7BD,EACR,GAAmC2F,EAAAA,EAAAA,MAA3BS,EAAR,EAAQA,cAAe+F,EAAvB,EAAuBA,QACvB,GAAoCwF,EAAAA,EAAAA,WACjCvL,EAAcwL,YAAc,IAAIC,YADnC,gBAAOD,EAAP,KAAmBE,EAAnB,KAGA,GAAsCH,EAAAA,EAAAA,UAASvL,EAAc2L,gBAAkB,IAA/E,gBAAOC,EAAP,KAAoBC,EAApB,KAEMC,GAAahR,EAAAA,EAAAA,cAAY,WAC7B,IACE,GAAIkF,EAAc+L,mBAAoB,CACpC,IAAMnT,EAAwB,KAAf4S,EAAoBQ,SAASR,QAAchL,EAC1DR,EAAc0L,cAAc9S,GAC5BoH,EAAciM,kBAAkBL,GAElC5L,EAAcwJ,eACd,MAAO/N,GACPsK,EAAQmG,YAAYzQ,MAErB,CAACuE,EAAewL,EAAYI,EAAa7F,IAEpC7N,EAAkDD,GAAlDC,QAASkR,EAAyCnR,GAAzCmR,QAAS+B,EAAgClT,GAAhCkT,OAAQC,EAAwBnT,GAAxBmT,QAASE,EAAerT,GAAfqT,WAC3C,OACE,UAACpT,EAAD,CAAS,YAAU,cAAnB,WACE,SAACkR,EAAD,WACE,SAAC,GAAD,CACE9P,MAAOM,EAAE,SACTsP,QAAStP,EAAE,UAAW,CAAE6N,KAAMzH,EAAc3C,YAC5C8L,YACEnJ,EAAc3C,YAAcqG,GAAAA,GAAcG,GACtCjK,EAAE,cACFA,EAAE,oBAIZ,UAACuR,EAAD,YACE,SAAC,GAAD,CACEN,YAAU,EACVjB,MAAO5J,EAAcmM,kBACrBnI,IAAKhE,EAAckE,kBAAkBF,IACrC2G,IAAK3K,EAAckE,kBAAkByG,IACrCC,KAAM5K,EAAcoM,iBACpBrQ,SAAUiE,EAAcqM,aAE1B,UAACjB,EAAD,CAASC,QAASrL,EAAc+L,mBAAhC,WACE,4BACE,UAAC,KAAD,WACGnS,EAAE,oBACH,SAACgE,EAAA,EAAD,CAAK5D,QAASJ,EAAE,iBAAkBiE,YAAY,EAAOyO,SAAU,IAA/D,UACE,SAAC,KAAD,UAGJ,SAAChB,EAAD,CACEzB,YAAajQ,EAAE,kBACfgQ,MAAO4B,EACPzP,SAAU,SAAA2N,GAAC,OAAIgC,EAAchC,EAAE9Q,OAAOgR,aAGzC5J,EAAc3C,YAAcqG,GAAAA,GAAcC,MACzC,4BACE,UAAC,KAAD,WACG/J,EAAE,kBACH,SAACgE,EAAA,EAAD,CAAK5D,QAASJ,EAAE,eAAgBiE,YAAY,EAAOyO,SAAU,IAA7D,UACE,SAAC,KAAD,UAGJ,SAAChB,EAAD,CACEzB,YAAajQ,EAAE,gBACfgQ,MAAOgC,EACP7P,SAAU,SAAA2N,GAAC,OAAImC,EAAenC,EAAE9Q,OAAOgR,iBAK/C,SAAC,GAAD,CACEjB,SAAU3I,EAAcoE,OACxBwE,OAAQkD,EACRhD,OACE,UAAC,KAAD,CAAQC,OAAK,EAACzE,YAAU,EAACxK,QAASkG,EAAcuM,kBAAhD,WACE,SAAC,KAAD,IACCvM,EAAc+L,mBAAqBnS,EAAE,eAAiBA,EAAE,6B,OClIjE3B,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,gIAmBT,UAAeQ,EAAAA,EAAAA,KAXsB,WACnC,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,qCAA7BD,EAEA1B,EAAYD,GAAZC,QACR,OACE,SAACA,EAAD,CAAS,YAAU,gBAAnB,UACE,SAAC4R,GAAA,EAAD,CAASC,QAASnQ,EAAE,qB,mBCXpB3B,GAAS,CACbC,QAASC,EAAAA,EAAOU,IAAT,+HAMPuQ,QAASjR,EAAAA,EAAOU,IAAT,qIAMP2T,QAASrU,EAAAA,EAAOU,IAAT,qIAMP4T,WAAYtU,EAAAA,EAAOU,IAAT,yIAMV6T,QAASvU,EAAAA,EAAOU,IAAT,sFACmB,SAAAR,GAAK,OAAIA,EAAMC,MAAMC,OAAO2F,aA+CxD,UAAe7E,EAAAA,EAAAA,KA1CkB,WAC/B,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,iCAA7BD,EACAoG,GAAkBT,EAAAA,EAAAA,MAAlBS,cAEA9H,EAAmDD,GAAnDC,QAASkR,EAA0CnR,GAA1CmR,QAASoD,EAAiCvU,GAAjCuU,QAASC,EAAwBxU,GAAxBwU,WAAYC,EAAYzU,GAAZyU,QAC/C,OACE,UAACxU,EAAD,CAAS,YAAU,cAAnB,WACE,SAACkR,EAAD,WACE,SAAC,GAAD,CAAa9P,MAAOM,EAAE,SAAUsP,QAAStP,EAAE,gBAE7C,UAAC4S,EAAD,YACE,4BACE,UAACC,EAAD,YACE,SAAC,KAAD,CAAYxH,YAAU,EAAtB,SACGrL,EAAE,SAAU,CAAE6N,KAAMzH,EAAc3C,eAErC,2BACE,SAACoD,EAAA,EAAD,CAAMC,KAAMV,EAAc2F,eAG9B,UAAC8G,EAAD,YACE,SAAC,KAAD,CAAYxH,YAAU,EAAtB,SAAwBrL,EAAE,WAC1B,0BAAOoG,EAAc2M,gBAEvB,SAACD,EAAD,KACA,UAACD,EAAD,YACE,SAAC,KAAD,CAAYxH,YAAU,EAAtB,SAAwBrL,EAAE,YAC1B,SAAC,KAAD,WACE,SAAC6G,EAAA,EAAD,CAAMC,KAAMV,EAAc4M,wBAIhC,SAAC,GAAD,CACE1B,SAAO,EACPvC,SAAU3I,EAAcoE,OACxBwE,OAAQ5I,EAAcwJ,wB,aChE1BvR,GAAS,CACbC,QAASC,EAAAA,EAAOkJ,QAAT,0NAIe,SAAAhJ,GAAK,OAAIA,EAAMC,MAAMC,OAAOqK,YAGjC,SAAAvK,GAAK,OAAKA,EAAM2P,QAAU,IAAM,UAEjDS,IAAKtQ,EAAAA,EAAOU,IAAT,8CAGHoP,QAAS9P,EAAAA,EAAOU,IAAT,yHAyCT,UAAeQ,EAAAA,EAAAA,KAjCc,WAC3B,IAII2Q,EAJIpQ,GAAMC,EAAAA,EAAAA,GAAuB,6BAA7BD,EAER,GAAyC2F,EAAAA,EAAAA,MAAjCS,EAAR,EAAQA,cAAeV,EAAvB,EAAuBA,cAGvB,OAAQU,EAAciK,aACpB,KAAK4C,GAAAA,GAAeC,aAClB9C,GAAM,SAAC,GAAD,IACN,MACF,KAAK6C,GAAAA,GAAeE,YAClB/C,GAAM,SAAC,GAAD,IACN,MACF,KAAK6C,GAAAA,GAAexC,WAClBL,GAAM,SAACgD,GAAD,IACN,MACF,QACE,OAAO,KAGX,IAAQ9U,EAA0BD,GAA1BC,QAASuQ,EAAiBxQ,GAAjBwQ,IAAKR,EAAYhQ,GAAZgQ,QACtB,OACE,UAAC/P,EAAD,CAAS8P,QAAS1I,EAAc+I,eAAhC,WACE,SAACI,EAAD,WACE,SAAC7K,EAAA,EAAD,CAAK5D,QAASJ,EAAE,WAAhB,UACE,SAAC,KAAD,CAAWE,QAASkG,EAAcsK,oBAGtC,SAACrC,EAAD,UAAU+B,U,OC9CV/R,GAAS,CACbgV,SAAU9U,EAAAA,EAAOU,IAAT,mDAsDV,UAAeQ,EAAAA,EAAAA,KAjDY,WACzB,IAAQO,GAAMC,EAAAA,EAAAA,GAAuB,sBAA7BD,EACR,GAOI2F,EAAAA,EAAAA,MANFwG,EADF,EACEA,QACA/F,EAFF,EAEEA,cACAmD,EAHF,EAGEA,oBACA2C,EAJF,EAIEA,aACAoH,EALF,EAKEA,UACAC,EANF,EAMEA,eAGI7T,GACJ,gCACGM,EAAE,aACoB,YAAtBsT,EAAUE,UACT,0BACE,SAAC,KAAD,UAAQF,EAAUE,eAMlBH,EAAahV,GAAbgV,SACR,OACE,SAACI,EAAA,EAAD,CAAmB9R,OAAQ4R,EAAeG,WAAWC,KAArD,UACE,UAACN,EAAD,WACGlH,EAAQyH,wBACP,SAAC,GAAD,IACExN,EAAcG,YAChB,SAAC,GAAD,IACEgD,EAAoBhD,YACtB,SAAC,GAAD,KAEA,iCACE,SAACsN,EAAA,EAAD,CACEnU,MAAOA,EACPG,YAAasM,EAAQ2H,SACrB/T,cAAemM,EAAa6H,kBAE9B,SAAC,GAAD,KACA,SAAC,GAAD,QAGJ,SAAC,GAAD,a,yEC5CR,SAAetU,EAAAA,EAAAA,KAXkB,SAAC,GAChC,OAD6C,EAAXkM,KACrBe,YACX,IAAK,UACH,OAAO,SAAC,IAAD,CAAW/K,OAAO,YAC3B,IAAK,SACH,OAAO,SAAC,IAAD,CAAWA,OAAO,UAC3B,QACE,OAAO,SAAC,IAAD,CAAWA,OAAO","sources":["components/common/ExternalLink.tsx","components/common/PageHeader.tsx","components/common/SortableHeader.tsx","components/common/SubServerRequired.tsx","components/common/Checkbox.tsx","components/loop/ChannelBalance.tsx","components/common/StatusArrow.tsx","components/loop/ChannelIcon.tsx","components/loop/ChannelRow.tsx","components/loop/ChannelList.tsx","components/loop/SelectedChannels.tsx","components/loop/LoopActions.tsx","components/common/Tile.tsx","components/loop/LoopHistory.tsx","components/loop/LoopTiles.tsx","components/loop/processing/FailedSwap.tsx","components/loop/processing/SwapInfo.tsx","components/loop/processing/SwapProgress.tsx","components/loop/processing/ProcessingSwapRow.tsx","components/loop/processing/ProcessingSwaps.tsx","components/common/Wizard.tsx","components/common/WizardButtons.tsx","components/common/WizardSummary.tsx","components/loop/sidecar/ConfirmTicketStep.tsx","components/loop/sidecar/EnterTicketStep.tsx","components/loop/sidecar/SidecarComplete.tsx","components/loop/sidecar/TicketProcessingStep.tsx","components/loop/sidecar/SidecarWizard.tsx","components/common/Radio.tsx","components/common/Range.tsx","components/loop/swap/StepButtons.tsx","components/loop/swap/StepSummary.tsx","components/loop/swap/SwapConfigStep.tsx","components/loop/swap/SwapProcessing.tsx","components/loop/swap/SwapReviewStep.tsx","components/loop/swap/SwapWizard.tsx","components/loop/LoopPage.tsx","components/loop/SwapDot.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.a`\r\n    color: ${props => props.theme.colors.offWhite};\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.colors.offWhite};\r\n      opacity: 0.8;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  href: string;\r\n  className?: string;\r\n}\r\n\r\nconst ExternalLink: React.FC<Props> = ({ href, className, children }) => {\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper href={href} target=\"_blank\" className={className}>\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ExternalLink;\r\n","import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { ArrowLeft, Download, HeaderThree, HelpCircle } from '../base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n  Left: styled.span`\r\n    flex: 1;\r\n    padding-left: 16px;\r\n    text-align: left;\r\n  `,\r\n  Center: styled.span`\r\n    flex: 1;\r\n    text-align: center;\r\n  `,\r\n  Right: styled.span`\r\n    flex: 1;\r\n    text-align: right;\r\n\r\n    svg {\r\n      margin-left: 20px;\r\n    }\r\n  `,\r\n  BackLink: styled.a`\r\n    text-transform: uppercase;\r\n    color: ${props => props.theme.colors.offWhite};\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    cursor: pointer;\r\n    line-height: 36px;\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.colors.offWhite};\r\n      opacity: 80%;\r\n      text-decoration: none;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  onBackClick?: () => void;\r\n  backText?: string;\r\n  onHelpClick?: () => void;\r\n  exportTip?: string;\r\n  onExportClick?: () => void;\r\n}\r\n\r\nconst PageHeader: React.FC<Props> = ({\r\n  title,\r\n  onBackClick,\r\n  backText,\r\n  onHelpClick,\r\n  exportTip,\r\n  onExportClick,\r\n}) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.PageHeader');\r\n\r\n  const { Wrapper, Left, Center, Right, BackLink } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Left>\r\n        {onBackClick && (\r\n          <BackLink onClick={onBackClick}>\r\n            <ArrowLeft />\r\n            {backText}\r\n          </BackLink>\r\n        )}\r\n      </Left>\r\n      <Center>\r\n        <HeaderThree data-tour=\"welcome\">{title}</HeaderThree>\r\n      </Center>\r\n      <Right>\r\n        {onHelpClick && (\r\n          <Tip placement=\"bottomRight\" overlay={l('helpTip')}>\r\n            <HelpCircle size=\"large\" onClick={onHelpClick} />\r\n          </Tip>\r\n        )}\r\n        {onExportClick && (\r\n          <Tip placement=\"bottomRight\" overlay={exportTip || l('exportTip')}>\r\n            <Download data-tour=\"export\" size=\"large\" onClick={onExportClick} />\r\n          </Tip>\r\n        )}\r\n      </Right>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(PageHeader);\r\n","import React, { useCallback } from 'react';\r\nimport { SortParams } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { ArrowDown, ArrowUp, HeaderFour } from 'components/base';\r\n\r\nconst Styled = {\r\n  HeaderFour: styled(HeaderFour)<{ selected: boolean }>`\r\n    ${props =>\r\n      props.selected &&\r\n      `\r\n      color: ${props.theme.colors.white};\r\n    `}\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: ${props => props.theme.colors.white};\r\n    }\r\n  `,\r\n  Icon: styled.span`\r\n    display: inline-block;\r\n    margin-left: 6px;\r\n\r\n    svg {\r\n      padding: 0;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props<T> {\r\n  field: keyof T;\r\n  sort: SortParams<T>;\r\n  onSort: (field: SortParams<T>['field'], descending: boolean) => void;\r\n}\r\n\r\nconst SortableHeader = <T,>({\r\n  field,\r\n  sort,\r\n  onSort,\r\n  children,\r\n}: React.PropsWithChildren<Props<T>>) => {\r\n  const selected = field === sort.field;\r\n  const SortIcon = sort.descending ? ArrowDown : ArrowUp;\r\n\r\n  const handleSortClick = useCallback(() => {\r\n    const descending = selected ? !sort.descending : false;\r\n    onSort(field, descending);\r\n  }, [selected, sort.descending, field, onSort]);\r\n\r\n  const { HeaderFour, Icon } = Styled;\r\n  return (\r\n    <HeaderFour selected={selected} onClick={handleSortClick}>\r\n      {children}\r\n      {selected && (\r\n        <Icon>\r\n          <SortIcon size=\"x-small\" />\r\n        </Icon>\r\n      )}\r\n    </HeaderFour>\r\n  );\r\n};\r\n\r\nexport default SortableHeader;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Plug } from '../base';\r\nimport { SubServerStatus } from 'types/state';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    min-height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `,\r\n  StatusMessage: styled.div`\r\n    display: inline-block;\r\n    border-radius: 24px;\r\n    padding: 3px 16px 3px 6px;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.lightningGray};\r\n    font-weight: 600;\r\n    white-space: nowrap;\r\n    text-align: center;\r\n\r\n    svg {\r\n      margin-bottom: 16px;\r\n      color: ${props => props.theme.colors.gold};\r\n    }\r\n  `,\r\n  Error: styled.div`\r\n    font-weight: bold;\r\n  `,\r\n};\r\n\r\ninterface StatusProps {\r\n  isDisabled: boolean;\r\n  errorMessage?: string;\r\n}\r\n\r\nexport const SubServerStatusMessage: React.FC<StatusProps> = ({\r\n  isDisabled,\r\n  errorMessage,\r\n}) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.SubServerStatus');\r\n  const { Wrapper, StatusMessage, Error } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <StatusMessage>\r\n        <Plug size=\"x-large\" />\r\n\r\n        {isDisabled ? (\r\n          <p>{l('isDisabled')}</p>\r\n        ) : (\r\n          <>\r\n            <p>{l('isError')}</p>\r\n            <Error>{errorMessage}</Error>\r\n          </>\r\n        )}\r\n      </StatusMessage>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  status: SubServerStatus;\r\n}\r\n\r\nconst SubServerRequired: React.FC<Props> = ({ status, children }) => {\r\n  if (status.disabled) {\r\n    return <SubServerStatusMessage isDisabled />;\r\n  } else if (status.error) {\r\n    return <SubServerStatusMessage isDisabled={false} errorMessage={status.error} />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default SubServerRequired;\r\n","import React, { useCallback } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Check } from '../base';\r\n\r\nconst Styled = {\r\n  Box: styled.span<{ disabled?: boolean }>`\r\n    display: inline-block;\r\n    width: 26px;\r\n    height: 26px;\r\n    line-height: 18px;\r\n    border-width: ${props => (props.disabled ? '0' : '3px')};\r\n    border-style: solid;\r\n    border-color: ${props => props.theme.colors.pink};\r\n    cursor: ${props => (props.disabled ? 'default' : 'pointer')};\r\n\r\n    &:hover {\r\n      border-color: ${props => props.theme.colors.pink}bb;\r\n    }\r\n  `,\r\n  CheckIcon: styled(Check)`\r\n    padding: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  checked?: boolean;\r\n  disabled?: boolean;\r\n  onChange?: (checked: boolean) => void;\r\n  className?: string;\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({ checked, disabled, onChange, className }) => {\r\n  const handleClick = useCallback(() => {\r\n    if (!disabled && onChange) {\r\n      onChange(!checked);\r\n    }\r\n  }, [disabled, checked, onChange]);\r\n\r\n  const { Box, CheckIcon } = Styled;\r\n  return (\r\n    <Box\r\n      role=\"checkbox\"\r\n      aria-checked={!!checked}\r\n      aria-disabled={!!disabled}\r\n      className={className}\r\n      disabled={disabled}\r\n      onClick={handleClick}\r\n    >\r\n      {checked && <CheckIcon size=\"small\" />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { statusToColor } from 'util/balances';\r\nimport { BalanceStatus } from 'util/constants';\r\nimport { Channel } from 'store/models';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div<{ pct: number; status: BalanceStatus; active: boolean }>`\r\n    display: flex;\r\n    width: 100%;\r\n    padding: 0 5%;\r\n\r\n    > div {\r\n      min-width: 6px;\r\n\r\n      &:first-of-type {\r\n        flex-grow: 1;\r\n        background-color: ${props =>\r\n          statusToColor(props.status, props.active, props.theme)};\r\n      }\r\n\r\n      &:last-of-type {\r\n        width: ${props => props.pct}%;\r\n        background-color: ${props =>\r\n          statusToColor(props.status, props.active, props.theme)};\r\n      }\r\n    }\r\n  `,\r\n  Section: styled.div`\r\n    height: 4px;\r\n    border-radius: 2px;\r\n  `,\r\n  Gap: styled.div`\r\n    width: 10px;\r\n    background-color: transparent;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  channel: Channel;\r\n  className?: string;\r\n}\r\n\r\nconst ChannelBalance: React.FC<Props> = ({ channel, className }) => {\r\n  const { Wrapper, Section, Gap } = Styled;\r\n  return (\r\n    <Wrapper\r\n      pct={channel.localPercent}\r\n      status={channel.balanceStatus}\r\n      active={channel.active}\r\n      className={className}\r\n    >\r\n      <Section />\r\n      <Gap />\r\n      <Section />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ChannelBalance);\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Chevrons, ChevronsLeft, ChevronsRight } from '../base';\r\n\r\nconst BaseIcon = styled.span`\r\n  padding: 0;\r\n\r\n  &.success {\r\n    color: ${props => props.theme.colors.green};\r\n  }\r\n  &.warn {\r\n    color: ${props => props.theme.colors.gold};\r\n  }\r\n  &.error {\r\n    color: ${props => props.theme.colors.pink};\r\n  }\r\n  &.idle {\r\n    color: ${props => props.theme.colors.gray};\r\n  }\r\n`;\r\n\r\ninterface Props {\r\n  status: 'success' | 'warn' | 'error' | 'idle';\r\n  direction: 'in' | 'out' | 'both';\r\n}\r\n\r\nconst DirectionIcons: Record<Props['direction'], any> = {\r\n  both: BaseIcon.withComponent(Chevrons),\r\n  in: BaseIcon.withComponent(ChevronsRight),\r\n  out: BaseIcon.withComponent(ChevronsLeft),\r\n};\r\n\r\nconst StatusArrow: React.FC<Props> = ({ status, direction }) => {\r\n  const Icon = DirectionIcons[direction];\r\n  return <Icon size=\"small\" className={status} aria-label={`${status} ${direction}`} />;\r\n};\r\n\r\nexport default StatusArrow;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { BalanceStatus } from 'util/constants';\r\nimport { Channel } from 'store/models';\r\nimport StatusArrow from 'components/common/StatusArrow';\r\nimport StatusDot from 'components/common/StatusDot';\r\nimport Tip from 'components/common/Tip';\r\n\r\ntype Status = 'success' | 'warn' | 'error' | 'idle';\r\n\r\nconst StatusMap: Record<BalanceStatus, Status> = {\r\n  [BalanceStatus.ok]: 'success',\r\n  [BalanceStatus.warn]: 'warn',\r\n  [BalanceStatus.danger]: 'error',\r\n};\r\n\r\ninterface Props {\r\n  channel: Channel;\r\n}\r\n\r\nconst ChannelIcon: React.FC<Props> = ({ channel }) => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.ChannelIcon.processing');\r\n  let status = StatusMap[channel.balanceStatus];\r\n  if (!channel.active) status = 'idle';\r\n\r\n  if (channel.processingSwapsDirection !== 'none') {\r\n    return (\r\n      <Tip\r\n        overlay={l(channel.processingSwapsDirection)}\r\n        capitalize={false}\r\n        placement=\"right\"\r\n      >\r\n        <span>\r\n          <StatusArrow status={status} direction={channel.processingSwapsDirection} />\r\n        </span>\r\n      </Tip>\r\n    );\r\n  }\r\n\r\n  return <StatusDot status={status} />;\r\n};\r\n\r\nexport default observer(ChannelIcon);\r\n","import React, { CSSProperties } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Channel } from 'store/models';\r\nimport { Cancel, Column, HeaderFour, Row } from 'components/base';\r\nimport Checkbox from 'components/common/Checkbox';\r\nimport ExternalLink from 'components/common/ExternalLink';\r\nimport SortableHeader from 'components/common/SortableHeader';\r\nimport Tip from 'components/common/Tip';\r\nimport Unit from 'components/common/Unit';\r\nimport ChannelBalance from './ChannelBalance';\r\nimport ChannelIcon from './ChannelIcon';\r\n\r\n/**\r\n * the virtualized list requires each row to have a specified\r\n * height. Defining a const here because it is used in multiple places\r\n */\r\nexport const ROW_HEIGHT = 60;\r\n\r\nconst BaseColumn = styled(Column)`\r\n  white-space: nowrap;\r\n  line-height: ${ROW_HEIGHT}px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n`;\r\n\r\nconst Styled = {\r\n  Row: styled(Row)<{ dimmed?: boolean; selectable?: boolean }>`\r\n    border-bottom: 0.5px solid ${props => props.theme.colors.darkGray};\r\n    opacity: ${props => (props.dimmed ? '0.4' : '1')};\r\n\r\n    &:last-child {\r\n      border-bottom-width: 0;\r\n    }\r\n\r\n    ${props =>\r\n      props.selectable &&\r\n      `\r\n      &:hover {\r\n        cursor: pointer;\r\n        background-color: ${props.theme.colors.overlay};\r\n      }\r\n    `}\r\n  `,\r\n  Column: styled(BaseColumn)<{ last?: boolean }>`\r\n    padding-right: ${props => (props.last ? '15' : '5')}px;\r\n  `,\r\n  ActionColumn: styled(BaseColumn)`\r\n    max-width: 50px;\r\n    padding-left: 24px;\r\n  `,\r\n  WideColumn: styled(BaseColumn)`\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    @media (min-width: 1200px) and (max-width: 1300px) {\r\n      max-width: 20%;\r\n    }\r\n  `,\r\n  ClearSortIcon: styled(Cancel)`\r\n    padding: 2px;\r\n    margin-left: 4px;\r\n  `,\r\n  StatusIcon: styled.span`\r\n    color: ${props => props.theme.colors.pink};\r\n  `,\r\n  Check: styled(Checkbox)`\r\n    margin-top: 17px;\r\n  `,\r\n  Balance: styled(ChannelBalance)`\r\n    margin-top: ${ROW_HEIGHT / 2 - 2}px;\r\n  `,\r\n  AliasTip: styled.div`\r\n    text-align: right;\r\n  `,\r\n};\r\n\r\nconst ChannelAliasTip: React.FC<{ channel: Channel }> = ({ channel }) => {\r\n  return (\r\n    <Styled.AliasTip>\r\n      {channel.aliasDetail.split('\\n').map(text => (\r\n        <div key={text}>{text}</div>\r\n      ))}\r\n    </Styled.AliasTip>\r\n  );\r\n};\r\n\r\nconst RowHeader: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.ChannelRowHeader');\r\n  const { settingsStore } = useStore();\r\n\r\n  const { Column, ActionColumn, WideColumn, ClearSortIcon } = Styled;\r\n  return (\r\n    <Row>\r\n      <ActionColumn>\r\n        {settingsStore.channelSort.field && (\r\n          <Tip overlay={l('resetSort')} placement=\"right\">\r\n            <HeaderFour>\r\n              <ClearSortIcon size=\"x-small\" onClick={settingsStore.resetChannelSort} />\r\n            </HeaderFour>\r\n          </Tip>\r\n        )}\r\n      </ActionColumn>\r\n      <Column right>\r\n        <SortableHeader<Channel>\r\n          field=\"remoteBalance\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <span data-tour=\"channel-list-receive\">{l('canReceive')}</span>\r\n        </SortableHeader>\r\n      </Column>\r\n      <WideColumn cols={2} colsXl={3} />\r\n      <Column>\r\n        <SortableHeader<Channel>\r\n          field=\"localBalance\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <span data-tour=\"channel-list-send\">{l('canSend')}</span>\r\n        </SortableHeader>\r\n      </Column>\r\n      <Column>\r\n        <SortableHeader<Channel>\r\n          field=\"remoteFeeRate\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <Tip overlay={l('feeRateTip')} capitalize={false}>\r\n            <span data-tour=\"channel-list-fee\">{l('feeRate')}</span>\r\n          </Tip>\r\n        </SortableHeader>\r\n      </Column>\r\n      <Column>\r\n        <SortableHeader<Channel>\r\n          field=\"uptimePercent\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <span data-tour=\"channel-list-uptime\">{l('upTime')}</span>\r\n        </SortableHeader>\r\n      </Column>\r\n      <WideColumn cols={2}>\r\n        <SortableHeader<Channel>\r\n          field=\"aliasLabel\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <span data-tour=\"channel-list-peer\">{l('peer')}</span>\r\n        </SortableHeader>\r\n      </WideColumn>\r\n      <Column right last>\r\n        <SortableHeader<Channel>\r\n          field=\"capacity\"\r\n          sort={settingsStore.channelSort}\r\n          onSort={settingsStore.setChannelSort}\r\n        >\r\n          <span data-tour=\"channel-list-capacity\">{l('capacity')}</span>\r\n        </SortableHeader>\r\n      </Column>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport const ChannelRowHeader = observer(RowHeader);\r\n\r\ninterface Props {\r\n  channel: Channel;\r\n  style?: CSSProperties;\r\n}\r\n\r\nconst ChannelRow: React.FC<Props> = ({ channel, style }) => {\r\n  const { buildSwapView } = useStore();\r\n\r\n  const editable = buildSwapView.listEditable;\r\n  const disabled = buildSwapView.showWizard;\r\n  const checked = buildSwapView.selectedChanIds.includes(channel.chanId);\r\n  const dimmed = editable && disabled && !checked;\r\n\r\n  const handleRowChecked = () => {\r\n    buildSwapView.toggleSelectedChannel(channel.chanId);\r\n  };\r\n\r\n  const { Row, Column, ActionColumn, WideColumn, StatusIcon, Check, Balance } = Styled;\r\n  return (\r\n    <Row\r\n      dimmed={dimmed}\r\n      style={style}\r\n      selectable={editable && !disabled}\r\n      onClick={editable && !disabled ? handleRowChecked : undefined}\r\n    >\r\n      <ActionColumn>\r\n        {editable ? (\r\n          <Check checked={checked} disabled={disabled} />\r\n        ) : (\r\n          <StatusIcon>\r\n            <ChannelIcon channel={channel} />\r\n          </StatusIcon>\r\n        )}\r\n      </ActionColumn>\r\n      <Column right>\r\n        <Unit sats={channel.remoteBalance} suffix={false} />\r\n      </Column>\r\n      <WideColumn cols={2} colsXl={3}>\r\n        <Balance channel={channel} />\r\n      </WideColumn>\r\n      <Column>\r\n        <Unit sats={channel.localBalance} suffix={false} />\r\n      </Column>\r\n      <Column>\r\n        <Tip overlay={`${channel.remoteFeeRate} ppm`} placement=\"left\" capitalize={false}>\r\n          <span>{channel.remoteFeePct}</span>\r\n        </Tip>\r\n      </Column>\r\n      <Column>{channel.uptimePercent}</Column>\r\n      <WideColumn cols={2}>\r\n        <Tip\r\n          overlay={<ChannelAliasTip channel={channel} />}\r\n          placement=\"left\"\r\n          capitalize={false}\r\n        >\r\n          <span>\r\n            <ExternalLink href={channel.remoteNodeUrl}>{channel.aliasLabel}</ExternalLink>\r\n          </span>\r\n        </Tip>\r\n      </WideColumn>\r\n      <Column right>\r\n        <Unit sats={channel.capacity} suffix={false} />\r\n      </Column>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default observer(ChannelRow);\r\n","import React from 'react';\r\nimport { AutoSizer, List, WindowScroller } from 'react-virtualized';\r\nimport { observer, Observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { useStore } from 'store';\r\nimport ChannelRow, { ChannelRowHeader, ROW_HEIGHT } from './ChannelRow';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section`\r\n    margin: 50px 0;\r\n  `,\r\n  ListContainer: styled.div`\r\n    /**\r\n     * the virtualized list doesn't play nice with the bootstrap row -15px\r\n     * margin. We need to manually offset the container and remove the\r\n     * padding from the last column to get the alignment correct\r\n     */\r\n    margin-right: -15px;\r\n\r\n    .col:last-child {\r\n      padding-right: 0;\r\n    }\r\n\r\n    *:focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n};\r\n\r\nconst ChannelList: React.FC = () => {\r\n  const { buildSwapView } = useStore();\r\n\r\n  const { Wrapper, ListContainer } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"channel-list\">\r\n      <ChannelRowHeader />\r\n      <ListContainer>\r\n        <AutoSizer disableHeight>\r\n          {({ width }) => (\r\n            <WindowScroller>\r\n              {({ height, isScrolling, onChildScroll, scrollTop, registerChild }) => (\r\n                <Observer>\r\n                  {() => (\r\n                    <div ref={ref => ref && registerChild(ref)}>\r\n                      <List\r\n                        autoHeight\r\n                        height={height}\r\n                        isScrolling={isScrolling}\r\n                        onScroll={onChildScroll}\r\n                        rowCount={buildSwapView.channels.length}\r\n                        rowHeight={ROW_HEIGHT}\r\n                        rowRenderer={({ index, key, style }) => (\r\n                          <ChannelRow\r\n                            key={key}\r\n                            style={style}\r\n                            channel={buildSwapView.channels[index]}\r\n                          />\r\n                        )}\r\n                        scrollTop={scrollTop}\r\n                        width={width}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Observer>\r\n              )}\r\n            </WindowScroller>\r\n          )}\r\n        </AutoSizer>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ChannelList);\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Pill } from 'components/base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.span`\r\n    /* display: flex;\r\n    justify-content: center; */\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  count: number;\r\n  className?: string;\r\n}\r\n\r\nconst SelectedChannels: React.FC<Props> = ({ count, className }) => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.SelectedChannels');\r\n\r\n  const label =\r\n    count === 0\r\n      ? l('useAnyChannel')\r\n      : count === 1\r\n      ? l('channelSelected')\r\n      : l('channelsSelected');\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper className={className}>\r\n      {count > 0 && <Pill>{count}</Pill>}\r\n      <span>{label}</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SelectedChannels;\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SwapDirection } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { formatSats } from 'util/formatters';\r\nimport { useStore } from 'store';\r\nimport { Button, Close, CloudLightning, Refresh } from 'components/base';\r\nimport SelectedChannels from './SelectedChannels';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section`\r\n    margin: 50px 0;\r\n  `,\r\n  Actions: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: -15px;\r\n  `,\r\n  ActionBar: styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-width: 595px;\r\n    padding: 15px;\r\n    background-color: ${props => props.theme.colors.darkBlue};\r\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.5);\r\n    border-radius: 35px;\r\n\r\n    > button {\r\n      margin-left: 10px;\r\n      background-color: ${props => props.theme.colors.overlay};\r\n    }\r\n  `,\r\n  CloseIcon: styled(Close)`\r\n    margin-right: 25px;\r\n  `,\r\n  Selected: styled(SelectedChannels)`\r\n    flex: 1;\r\n  `,\r\n  Note: styled.span`\r\n    display: inline-block;\r\n    margin-left: 20px;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    color: ${props => props.theme.colors.gray};\r\n  `,\r\n  Buttons: styled.span`\r\n    button:last-of-type {\r\n      margin-left: 10px;\r\n    }\r\n  `,\r\n};\r\n\r\nconst LoopActions: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.LoopActions');\r\n  const { buildSwapView, registerSidecarView } = useStore();\r\n  const {\r\n    setDirection,\r\n    inferredDirection,\r\n    isLoopOutMinimumMet,\r\n    isLoopInMinimumMet,\r\n    hasValidLoopInPeers,\r\n  } = buildSwapView;\r\n  const handleLoopOut = useCallback(() => setDirection(SwapDirection.OUT), [\r\n    setDirection,\r\n  ]);\r\n  const handleLoopIn = useCallback(() => setDirection(SwapDirection.IN), [setDirection]);\r\n  const selectedCount = buildSwapView.selectedChanIds.length;\r\n\r\n  let note =\r\n    !isLoopOutMinimumMet || !isLoopInMinimumMet\r\n      ? l('loopMinimumNote', { min: formatSats(buildSwapView.termsForDirection.min) })\r\n      : '';\r\n  if (!hasValidLoopInPeers) {\r\n    note = l('loopInNote');\r\n  }\r\n\r\n  const { Wrapper, Actions, ActionBar, CloseIcon, Selected, Note, Buttons } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"loop-actions\">\r\n      {buildSwapView.showActions ? (\r\n        <Actions>\r\n          <ActionBar>\r\n            <CloseIcon onClick={buildSwapView.cancel} />\r\n            <Selected count={selectedCount} />\r\n            <Button\r\n              primary={isLoopOutMinimumMet && inferredDirection === SwapDirection.OUT}\r\n              borderless\r\n              onClick={handleLoopOut}\r\n              disabled={!isLoopOutMinimumMet}\r\n              data-tour=\"loop-out\"\r\n            >\r\n              {l('common.loopOut')}\r\n            </Button>\r\n            <Button\r\n              primary={\r\n                hasValidLoopInPeers &&\r\n                isLoopInMinimumMet &&\r\n                inferredDirection === SwapDirection.IN\r\n              }\r\n              borderless\r\n              onClick={handleLoopIn}\r\n              disabled={!hasValidLoopInPeers || !isLoopInMinimumMet}\r\n            >\r\n              {l('common.loopIn')}\r\n            </Button>\r\n          </ActionBar>\r\n          {note && <Note>{note}</Note>}\r\n        </Actions>\r\n      ) : (\r\n        <Buttons>\r\n          <Button data-tour=\"loop\" onClick={buildSwapView.startSwap}>\r\n            <Refresh />\r\n            {l('common.loop')}\r\n          </Button>\r\n          <Button borderless onClick={registerSidecarView.startRegister}>\r\n            <CloudLightning />\r\n            {l('registerSidecar')}\r\n          </Button>\r\n        </Buttons>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(LoopActions);\r\n","import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { HeaderFour, Maximize } from '../base';\r\nimport Tip from './Tip';\r\n\r\nconst Styled = {\r\n  TileWrap: styled.div`\r\n    min-height: 105px;\r\n    padding: 15px;\r\n    background-color: ${props => props.theme.colors.overlay};\r\n    border-radius: 4px;\r\n  `,\r\n  Header: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n  `,\r\n  MaximizeIcon: styled(Maximize)`\r\n    width: 20px;\r\n    height: 20px;\r\n    padding: 4px;\r\n    margin-top: -5px;\r\n\r\n    &:hover {\r\n      border-radius: 24px;\r\n    }\r\n  `,\r\n  Text: styled.div`\r\n    font-size: ${props => props.theme.sizes.xl};\r\n    line-height: 37px;\r\n    letter-spacing: 0.43px;\r\n    margin-top: 10px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  /**\r\n   * the title to display in the tile\r\n   */\r\n  title: string;\r\n  /**\r\n   * optional text to display in the tile. if this is not\r\n   * provided, then the `children` will be displayed instead\r\n   */\r\n  text?: ReactNode;\r\n  /**\r\n   * optional value to set as the `data-tour` attribute on\r\n   * the tile's dom element\r\n   */\r\n  tour?: string;\r\n  /**\r\n   * optional click handler for the icon which will not be\r\n   * visible if this prop is not defined\r\n   */\r\n  onMaximizeClick?: () => void;\r\n}\r\n\r\nconst Tile: React.FC<Props> = ({ title, text, tour, onMaximizeClick, children }) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.Tile');\r\n\r\n  const { TileWrap, Header, MaximizeIcon, Text } = Styled;\r\n  return (\r\n    <TileWrap data-tour={tour}>\r\n      <Header>\r\n        <HeaderFour marginless>{title}</HeaderFour>\r\n        {onMaximizeClick && (\r\n          <Tip overlay={l('maximizeTip')}>\r\n            <MaximizeIcon onClick={onMaximizeClick} />\r\n          </Tip>\r\n        )}\r\n      </Header>\r\n      {text ? <Text>{text}</Text> : children}\r\n    </TileWrap>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Column, Row, Small } from 'components/base';\r\nimport Unit from 'components/common/Unit';\r\nimport SwapDot from './SwapDot';\r\n\r\nconst Styled = {\r\n  RightColumn: styled(Column)`\r\n    text-align: right;\r\n  `,\r\n  SmallText: styled(Small)`\r\n    display: inline-block;\r\n    line-height: 1;\r\n    margin-left: 10px;\r\n    margin-bottom: 0;\r\n  `,\r\n};\r\n\r\nconst LoopHistory: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.LoopHistory');\r\n  const { swapStore } = useStore();\r\n\r\n  const { RightColumn, SmallText } = Styled;\r\n  return (\r\n    <>\r\n      {swapStore.lastTwoSwaps.length === 0 && <Small>{l('emptyMsg')}</Small>}\r\n      {swapStore.lastTwoSwaps.map(swap => (\r\n        <Row key={swap.id}>\r\n          <Column cols={6}>\r\n            <SwapDot swap={swap} />\r\n            <SmallText>{swap.createdOn.toLocaleDateString()}</SmallText>\r\n          </Column>\r\n          <RightColumn cols={6}>\r\n            <SmallText>\r\n              <Unit sats={swap.amount} />\r\n            </SmallText>\r\n          </RightColumn>\r\n        </Row>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(LoopHistory);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Column, Row } from 'components/base';\r\nimport Tile from 'components/common/Tile';\r\nimport Unit from 'components/common/Unit';\r\nimport LoopHistory from './LoopHistory';\r\n\r\nconst Styled = {\r\n  TileSection: styled.section`\r\n    margin-top: 90px;\r\n  `,\r\n};\r\n\r\nconst LoopTiles: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.LoopTiles');\r\n  const { channelStore, appView } = useStore();\r\n\r\n  const { TileSection } = Styled;\r\n  return (\r\n    <TileSection>\r\n      <Row>\r\n        <Column>\r\n          <Tile\r\n            tour=\"history\"\r\n            title={l('history')}\r\n            onMaximizeClick={appView.toggleProcessingSwaps}\r\n          >\r\n            <LoopHistory />\r\n          </Tile>\r\n        </Column>\r\n        <Column cols={4}>\r\n          <Tile\r\n            tour=\"inbound\"\r\n            title={l('inbound')}\r\n            text={<Unit sats={channelStore.totalInbound} />}\r\n          />\r\n        </Column>\r\n        <Column cols={4}>\r\n          <Tile\r\n            tour=\"outbound\"\r\n            title={l('outbound')}\r\n            text={<Unit sats={channelStore.totalOutbound} />}\r\n          />\r\n        </Column>\r\n      </Row>\r\n    </TileSection>\r\n  );\r\n};\r\n\r\nexport default observer(LoopTiles);\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Swap } from 'store/models';\r\nimport { Close } from 'components/base';\r\nimport Tip from 'components/common/Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n  `,\r\n  CloseIcon: styled(Close)`\r\n    background-color: ${props => props.theme.colors.gray};\r\n    margin-right: 10px;\r\n  `,\r\n  ErrorMessage: styled.span`\r\n    color: ${props => props.theme.colors.pink};\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst FailedSwap: React.FC<Props> = ({ swap }) => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.processing.FailedSwap');\r\n\r\n  const { swapStore } = useStore();\r\n  const handleCloseClick = useCallback(() => swapStore.dismissSwap(swap.id), [\r\n    swapStore,\r\n    swap,\r\n  ]);\r\n\r\n  const { Wrapper, CloseIcon, ErrorMessage } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Tip overlay={l('dismissTip')}>\r\n        <CloseIcon onClick={handleCloseClick} />\r\n      </Tip>\r\n      <ErrorMessage>{swap.stateLabel}</ErrorMessage>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(FailedSwap);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { Swap } from 'store/models';\r\nimport { HeaderFour } from 'components/base';\r\nimport Tip from 'components/common/Tip';\r\nimport Unit from 'components/common/Unit';\r\nimport SwapDot from '../SwapDot';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n  `,\r\n  Dot: styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 20px;\r\n  `,\r\n  Details: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst SwapInfo: React.FC<Props> = ({ swap }) => {\r\n  const { Wrapper, Dot, Details } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Dot>\r\n        <SwapDot swap={swap} />\r\n      </Dot>\r\n      <Details>\r\n        <HeaderFour marginless>\r\n          <Tip overlay={swap.id}>\r\n            <span>{swap.ellipsedId}</span>\r\n          </Tip>\r\n        </HeaderFour>\r\n        <div>\r\n          <Unit sats={swap.amount} />\r\n        </div>\r\n      </Details>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapInfo);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SwapState, SwapType } from 'types/generated/loop_pb';\r\nimport styled from '@emotion/styled';\r\nimport { Swap } from 'store/models';\r\n\r\nconst { LOOP_IN, LOOP_OUT } = SwapType;\r\nconst {\r\n  INITIATED,\r\n  PREIMAGE_REVEALED,\r\n  HTLC_PUBLISHED,\r\n  SUCCESS,\r\n  INVOICE_SETTLED,\r\n} = SwapState;\r\n\r\n// the order of steps for each of the swap types. used to calculate\r\n// the percentage of progress made based on the current swap state\r\nconst progressSteps: Record<number, number[]> = {\r\n  [LOOP_IN]: [INITIATED, HTLC_PUBLISHED, INVOICE_SETTLED, SUCCESS],\r\n  [LOOP_OUT]: [INITIATED, PREIMAGE_REVEALED, SUCCESS],\r\n};\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  Track: styled.div`\r\n    height: 3px;\r\n    background-color: #464d62;\r\n    border: 1px solid #5a6276;\r\n    border-radius: 2px;\r\n  `,\r\n  Status: styled.div<{ pct: number }>`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: ${props => props.pct}%;\r\n    text-align: right;\r\n    font-size: ${props => props.theme.sizes.xs};\r\n    transition: all 1s;\r\n\r\n    > span:first-of-type {\r\n      color: ${props => props.theme.colors.gray};\r\n    }\r\n  `,\r\n  Fill: styled.div<{ state: number; pct: number }>`\r\n    height: 1px;\r\n    width: ${props => props.pct}%;\r\n    background-color: ${props =>\r\n      props.state === SUCCESS ? props.theme.colors.green : props.theme.colors.gold};\r\n    transition: all 1s;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst SwapProgress: React.FC<Props> = ({ swap }) => {\r\n  const steps = progressSteps[swap.type];\r\n  const pct = Math.floor(((steps.indexOf(swap.state) + 1) / steps.length) * 100);\r\n\r\n  const { Wrapper, Status, Track, Fill } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"swap-progress\">\r\n      <Status pct={pct}>\r\n        <span>{swap.typeName}</span>\r\n        <span>{swap.stateLabel}</span>\r\n      </Status>\r\n      <Track>\r\n        <Fill state={swap.state} pct={pct} title={swap.stateLabel} />\r\n      </Track>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapProgress);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { Swap } from 'store/models';\r\nimport { Column, Row } from 'components/base';\r\nimport FailedSwap from './FailedSwap';\r\nimport SwapInfo from './SwapInfo';\r\nimport SwapProgress from './SwapProgress';\r\n\r\nconst Styled = {\r\n  Row: styled(Row)`\r\n    margin-bottom: 10px;\r\n  `,\r\n  InfoCol: styled(Column)`\r\n    min-width: 200px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst ProcessingSwapRow: React.FC<Props> = ({ swap }) => {\r\n  const { Row, InfoCol } = Styled;\r\n  return (\r\n    <Row>\r\n      <InfoCol cols={2}>\r\n        <SwapInfo swap={swap} />\r\n      </InfoCol>\r\n      <Column>\r\n        {swap.isFailed ? <FailedSwap swap={swap} /> : <SwapProgress swap={swap} />}\r\n      </Column>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default observer(ProcessingSwapRow);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport confirmJson from 'assets/animations/confirm.json';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Close, HeaderFour } from 'components/base';\r\nimport Animation from 'components/common/Animation';\r\nimport Tip from 'components/common/Tip';\r\nimport ProcessingSwapRow from './ProcessingSwapRow';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section<{ sidebar?: boolean }>`\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 360px;\r\n    padding: 40px;\r\n    background-color: ${props => props.theme.colors.darkBlue};\r\n    border-radius: 35px;\r\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.5);\r\n    margin-left: ${props => (props.sidebar ? '0' : '40px')};\r\n  `,\r\n  Header: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 20px;\r\n  `,\r\n  Content: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n  Complete: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n  ConfirmAnimation: styled(Animation)`\r\n    width: 200px;\r\n    height: 200px;\r\n  `,\r\n};\r\n\r\nconst ProcessingSwaps: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.processing.ProcessingSwaps');\r\n  const { swapStore, appView, settingsStore } = useStore();\r\n\r\n  const { Wrapper, Header, Content, Complete, ConfirmAnimation } = Styled;\r\n  return (\r\n    <Wrapper sidebar={settingsStore.sidebarVisible}>\r\n      <Header>\r\n        <HeaderFour>{l('title')}</HeaderFour>\r\n        <Tip overlay={l('closeTip')}>\r\n          <Close data-tour=\"swap-close\" onClick={appView.toggleProcessingSwaps} />\r\n        </Tip>\r\n      </Header>\r\n      <Content data-tour=\"processing-swaps\">\r\n        {swapStore.processingSwaps.map(swap => (\r\n          <ProcessingSwapRow key={swap.id} swap={swap} />\r\n        ))}\r\n        {swapStore.processingSwaps.length === 0 && (\r\n          <Complete>\r\n            <ConfirmAnimation animationData={confirmJson} />\r\n            <HeaderFour>{l('complete')}</HeaderFour>\r\n          </Complete>\r\n        )}\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ProcessingSwaps);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { ArrowLeft } from 'components/base';\r\nimport Tip from 'components/common/Tip';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section<{ sidebar?: boolean }>`\r\n    display: flex;\r\n    min-height: 360px;\r\n    padding: 30px;\r\n    background-color: ${props => props.theme.colors.darkBlue};\r\n    border-radius: 35px;\r\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.5);\r\n    margin-left: ${props => (props.sidebar ? '0' : '40px')};\r\n  `,\r\n  Nav: styled.div`\r\n    width: 36px;\r\n  `,\r\n  Content: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    align-items: stretch;\r\n    flex-direction: row;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  sidebar?: boolean;\r\n  onBackClick?: () => void;\r\n}\r\n\r\nconst Wizard: React.FC<Props> = ({ sidebar, onBackClick, children }) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.Wizard');\r\n\r\n  const { Wrapper, Nav, Content } = Styled;\r\n  return (\r\n    <Wrapper sidebar={sidebar}>\r\n      <Nav>\r\n        <Tip overlay={l('backTip')}>\r\n          <ArrowLeft onClick={onBackClick} />\r\n        </Tip>\r\n      </Nav>\r\n      <Content>{children}</Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(Wizard);\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Button } from 'components/base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  `,\r\n  ExtraContent: styled.div`\r\n    flex: 1;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  onCancel: () => void;\r\n  onNext: () => void;\r\n  nextLabel?: string;\r\n  extra?: React.ReactNode;\r\n}\r\n\r\nconst WizardButtons: React.FC<Props> = ({ onCancel, onNext, nextLabel, extra }) => {\r\n  const { l } = usePrefixedTranslation('cmps.common.WizardButtons');\r\n\r\n  const { Wrapper, ExtraContent } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <ExtraContent>{extra}</ExtraContent>\r\n      <Button ghost borderless onClick={onCancel}>\r\n        {l('common.cancel')}\r\n      </Button>\r\n      <Button primary ghost onClick={onNext}>\r\n        {nextLabel || l('common.next')}\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WizardButtons;\r\n","import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { HeaderFive, HeaderFour, Small } from 'components/base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    max-width: 300px;\r\n  `,\r\n  Description: styled(Small)`\r\n    opacity: 0.5;\r\n  `,\r\n  Channels: styled.div`\r\n    line-height: 40px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  title: string;\r\n  heading: string;\r\n  description?: string;\r\n  extra?: ReactNode;\r\n}\r\n\r\nconst WizardSummary: React.FC<Props> = ({ title, heading, description, extra }) => {\r\n  const { Wrapper, Description } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <HeaderFour>{title}</HeaderFour>\r\n        <HeaderFive>{heading}</HeaderFive>\r\n        {description && <Description>{description}</Description>}\r\n      </div>\r\n      <div>{extra}</div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default WizardSummary;\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport WizardButtons from 'components/common/WizardButtons';\r\nimport WizardSummary from 'components/common/WizardSummary';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n  Summary: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Fields: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    max-width: 50%;\r\n  `,\r\n  Input: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-bottom: 15px;\r\n\r\n    code {\r\n      margin-top: 15px;\r\n      word-break: break-all;\r\n      background-color: ${props => props.theme.colors.overlay};\r\n      padding: 15px;\r\n      border-radius: 4px;\r\n    }\r\n  `,\r\n};\r\n\r\nconst ConfirmTicketStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.sidecar.ConfirmTicketStep');\r\n  const { registerSidecarView } = useStore();\r\n\r\n  const { Wrapper, Summary, Fields, Input } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Summary>\r\n        <WizardSummary\r\n          title={l('title')}\r\n          heading={l('heading')}\r\n          description={l('description')}\r\n        />\r\n      </Summary>\r\n      <Fields>\r\n        <Input>\r\n          <code>{registerSidecarView.ticket}</code>\r\n        </Input>\r\n        <WizardButtons\r\n          onCancel={registerSidecarView.cancel}\r\n          onNext={registerSidecarView.goToNextStep}\r\n          nextLabel={l('common.confirm')}\r\n        />\r\n      </Fields>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(ConfirmTicketStep);\r\n","import React, { useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { TextArea } from 'components/base';\r\nimport WizardButtons from 'components/common/WizardButtons';\r\nimport WizardSummary from 'components/common/WizardSummary';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n  Summary: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Fields: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Input: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-bottom: 15px;\r\n\r\n    textarea {\r\n      flex-grow: 1;\r\n    }\r\n  `,\r\n};\r\n\r\nconst EnterTicketStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.sidecar.EnterTicketStep');\r\n  const { registerSidecarView } = useStore();\r\n  const handleTicketChange = useCallback((e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    registerSidecarView.setTicket(e.target.value);\r\n  }, []);\r\n\r\n  const { Wrapper, Summary, Fields, Input } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Summary>\r\n        <WizardSummary\r\n          title={l('title')}\r\n          heading={l('heading')}\r\n          description={l('description')}\r\n        />\r\n      </Summary>\r\n      <Fields>\r\n        <Input>\r\n          <TextArea\r\n            placeholder=\"sidecar1a7be93f8...\"\r\n            value={registerSidecarView.ticket}\r\n            onChange={handleTicketChange}\r\n            aria-label=\"ticket-input\"\r\n          />\r\n        </Input>\r\n        <WizardButtons\r\n          onCancel={registerSidecarView.cancel}\r\n          onNext={registerSidecarView.goToNextStep}\r\n        />\r\n      </Fields>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(EnterTicketStep);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport confirmJson from 'assets/animations/confirm.json';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { HeaderFour } from 'components/base';\r\nimport Animation from 'components/common/Animation';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n  ConfirmAnimation: styled(Animation)`\r\n    width: 200px;\r\n    height: 200px;\r\n  `,\r\n};\r\n\r\nconst SidecarComplete: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.sidecar.SidecarComplete');\r\n\r\n  const { Wrapper, ConfirmAnimation } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmAnimation animationData={confirmJson} />\r\n      <HeaderFour>{l('success')}</HeaderFour>\r\n      <div>{l('notice')}</div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SidecarComplete);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport Loading from 'components/common/Loading';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n};\r\n\r\nconst TicketProcessingStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.sidecar.TicketProcessingStep');\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <Loading message={l('loadingMsg')} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(TicketProcessingStep);\r\n","import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SidecarRegisterSteps } from 'types/state';\r\nimport { useStore } from 'store';\r\nimport Wizard from 'components/common/Wizard';\r\nimport ConfirmTicketStep from './ConfirmTicketStep';\r\nimport EnterTicketStep from './EnterTicketStep';\r\nimport SidecarComplete from './SidecarComplete';\r\nimport TicketProcessingStep from './TicketProcessingStep';\r\n\r\nconst SidecarWizard: React.FC = () => {\r\n  const { registerSidecarView, settingsStore } = useStore();\r\n\r\n  let cmp: ReactNode;\r\n  switch (registerSidecarView.currentStep) {\r\n    case SidecarRegisterSteps.EnterTicket:\r\n      cmp = <EnterTicketStep />;\r\n      break;\r\n    case SidecarRegisterSteps.ConfirmTicket:\r\n      cmp = <ConfirmTicketStep />;\r\n      break;\r\n    case SidecarRegisterSteps.Processing:\r\n      cmp = <TicketProcessingStep />;\r\n      break;\r\n    case SidecarRegisterSteps.Complete:\r\n      cmp = <SidecarComplete />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return (\r\n    <Wizard\r\n      sidebar={settingsStore.sidebarVisible}\r\n      onBackClick={registerSidecarView.goToPrevStep}\r\n    >\r\n      {cmp}\r\n    </Wizard>\r\n  );\r\n};\r\n\r\nexport default observer(SidecarWizard);\r\n","import React, { ReactNode } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { Small } from '../base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div<{ right?: boolean }>`\r\n    width: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: ${props => (props.right ? 'flex-end' : 'flex-start')};\r\n  `,\r\n  RadioBlock: styled.span<{ active?: boolean }>`\r\n    display: inline-block;\r\n    padding: 5px 15px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid ${props => props.theme.colors.offWhite};\r\n    color: ${props =>\r\n      props.active ? props.theme.colors.darkBlue : props.theme.colors.offWhite};\r\n    background-color: ${props =>\r\n      props.active ? props.theme.colors.white : props.theme.colors.darkBlue};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      color: ${props => props.theme.colors.offWhite};\r\n      background-color: ${props => props.theme.colors.darkBlue};\r\n      border: 1px solid ${props => props.theme.colors.offWhite}33;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  text: string;\r\n  description?: ReactNode;\r\n  active?: boolean;\r\n  right?: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Radio: React.FC<Props> = ({ text, description, active, right, onClick }) => {\r\n  const { Wrapper, RadioBlock } = Styled;\r\n  return (\r\n    <Wrapper right={right}>\r\n      <RadioBlock active={active} onClick={onClick} role=\"switch\" aria-checked={!!active}>\r\n        {text}\r\n      </RadioBlock>\r\n      <Small>{description}</Small>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import React, { ChangeEvent, useCallback } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Big from 'big.js';\r\nimport { RangeInput } from '../base';\r\nimport Radio from './Radio';\r\nimport Unit from './Unit';\r\n\r\nconst Styled = {\r\n  RadioGroup: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 40px;\r\n  `,\r\n  DisplayValue: styled.label`\r\n    display: block;\r\n    text-align: center;\r\n    font-size: ${props => props.theme.sizes.xl};\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  value?: Big;\r\n  min?: Big;\r\n  max?: Big;\r\n  step?: number;\r\n  showRadios?: boolean;\r\n  onChange?: (value: Big) => void;\r\n}\r\n\r\nconst Range: React.FC<Props> = ({\r\n  value = Big(50),\r\n  min = Big(0),\r\n  max = Big(100),\r\n  step = 1,\r\n  showRadios,\r\n  onChange,\r\n}) => {\r\n  const handleMinClicked = useCallback(() => onChange && onChange(min), [min, onChange]);\r\n  const handleMaxClicked = useCallback(() => onChange && onChange(max), [max, onChange]);\r\n  const handleInputClicked = useCallback(\r\n    (e: ChangeEvent<HTMLInputElement>) => onChange && onChange(Big(e.target.value)),\r\n    [onChange],\r\n  );\r\n\r\n  const { RadioGroup, DisplayValue } = Styled;\r\n  return (\r\n    <div>\r\n      {showRadios && (\r\n        <RadioGroup>\r\n          <Radio\r\n            text=\"Min\"\r\n            description={<Unit sats={min} />}\r\n            onClick={handleMinClicked}\r\n            active={min.eq(value)}\r\n          />\r\n          <Radio\r\n            text=\"Max\"\r\n            description={<Unit sats={max} />}\r\n            onClick={handleMaxClicked}\r\n            active={max.eq(value)}\r\n            right\r\n          />\r\n        </RadioGroup>\r\n      )}\r\n      <div>\r\n        <RangeInput\r\n          aria-label=\"range-slider\"\r\n          className=\"custom-range\"\r\n          type=\"range\"\r\n          value={+value}\r\n          min={+min}\r\n          max={+max}\r\n          step={step}\r\n          onChange={handleInputClicked}\r\n        />\r\n      </div>\r\n      <DisplayValue>\r\n        <Unit sats={value} />\r\n      </DisplayValue>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Range;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { Button } from 'components/base';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  `,\r\n  ExtraContent: styled.div`\r\n    flex: 1;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  confirm?: boolean;\r\n  onCancel: () => void;\r\n  onNext: () => void;\r\n  extra?: React.ReactNode;\r\n}\r\n\r\nconst StepButtons: React.FC<Props> = ({ confirm, onCancel, onNext, extra }) => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.swap.StepButtons');\r\n\r\n  const { Wrapper, ExtraContent } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <ExtraContent>{extra}</ExtraContent>\r\n      <Button ghost borderless onClick={onCancel}>\r\n        {l('cancel')}\r\n      </Button>\r\n      <Button primary ghost onClick={onNext}>\r\n        {confirm ? l('confirm') : l('next')}\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default StepButtons;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useStore } from 'store';\r\nimport { HeaderFive, HeaderFour, Small } from 'components/base';\r\nimport SelectedChannels from '../SelectedChannels';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    max-width: 300px;\r\n  `,\r\n  Description: styled(Small)`\r\n    opacity: 0.5;\r\n  `,\r\n  Channels: styled.div`\r\n    line-height: 40px;\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  title: string;\r\n  heading: string;\r\n  description?: string;\r\n}\r\n\r\nconst StepSummary: React.FC<Props> = ({ title, heading, description }) => {\r\n  const { buildSwapView } = useStore();\r\n\r\n  const { Wrapper, Description } = Styled;\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <HeaderFour>{title}</HeaderFour>\r\n        <HeaderFive>{heading}</HeaderFive>\r\n        {description && <Description>{description}</Description>}\r\n      </div>\r\n      <div>\r\n        <SelectedChannels count={buildSwapView.selectedChanIds.length} />\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default StepSummary;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { SwapDirection } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Button, HeaderFour, HelpCircle, Input, Settings } from 'components/base';\r\nimport Range from 'components/common/Range';\r\nimport Tip from 'components/common/Tip';\r\nimport StepButtons from './StepButtons';\r\nimport StepSummary from './StepSummary';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n  Summary: styled.div`\r\n    flex-grow: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Config: styled.div`\r\n    flex-grow: 3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Options: styled.div<{ visible: boolean }>`\r\n    padding: ${props => (props.visible ? '30px 0' : '0')};\r\n    margin: 30px 0;\r\n    background-color: #27273c;\r\n    box-shadow: inset rgba(0, 0, 0, 0.5) 0px 0px 5px 0px;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    overflow: hidden;\r\n    height: ${props => (props.visible ? '125px' : '0')};\r\n    transition: all 0.3s;\r\n\r\n    > div {\r\n      flex: 1;\r\n      margin: 0 30px;\r\n    }\r\n  `,\r\n  SmallInput: styled(Input)`\r\n    width: 100%;\r\n    font-size: ${props => props.theme.sizes.s};\r\n    text-align: left;\r\n    border-bottom-width: 1px;\r\n  `,\r\n};\r\n\r\nconst SwapConfigStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.swap.SwapConfigStep');\r\n  const { buildSwapView, appView } = useStore();\r\n  const [confTarget, setConfTarget] = useState(\r\n    (buildSwapView.confTarget || '').toString(),\r\n  );\r\n  const [destAddress, setDestAddress] = useState(buildSwapView.loopOutAddress || '');\r\n\r\n  const handleNext = useCallback(() => {\r\n    try {\r\n      if (buildSwapView.addlOptionsVisible) {\r\n        const target = confTarget !== '' ? parseInt(confTarget) : undefined;\r\n        buildSwapView.setConfTarget(target);\r\n        buildSwapView.setLoopOutAddress(destAddress);\r\n      }\r\n      buildSwapView.goToNextStep();\r\n    } catch (error) {\r\n      appView.handleError(error);\r\n    }\r\n  }, [buildSwapView, confTarget, destAddress, appView]);\r\n\r\n  const { Wrapper, Summary, Config, Options, SmallInput } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"loop-amount\">\r\n      <Summary>\r\n        <StepSummary\r\n          title={l('title')}\r\n          heading={l('heading', { type: buildSwapView.direction })}\r\n          description={\r\n            buildSwapView.direction === SwapDirection.IN\r\n              ? l('loopInDesc')\r\n              : l('loopOutDesc')\r\n          }\r\n        />\r\n      </Summary>\r\n      <Config>\r\n        <Range\r\n          showRadios\r\n          value={buildSwapView.amountForSelected}\r\n          min={buildSwapView.termsForDirection.min}\r\n          max={buildSwapView.termsForDirection.max}\r\n          step={buildSwapView.AMOUNT_INCREMENT}\r\n          onChange={buildSwapView.setAmount}\r\n        />\r\n        <Options visible={buildSwapView.addlOptionsVisible}>\r\n          <div>\r\n            <HeaderFour>\r\n              {l('confTargetLabel')}\r\n              <Tip overlay={l('confTargetTip')} capitalize={false} maxWidth={400}>\r\n                <HelpCircle />\r\n              </Tip>\r\n            </HeaderFour>\r\n            <SmallInput\r\n              placeholder={l('confTargetHint')}\r\n              value={confTarget}\r\n              onChange={e => setConfTarget(e.target.value)}\r\n            />\r\n          </div>\r\n          {buildSwapView.direction === SwapDirection.OUT && (\r\n            <div>\r\n              <HeaderFour>\r\n                {l('destAddrLabel')}\r\n                <Tip overlay={l('destAddrTip')} capitalize={false} maxWidth={400}>\r\n                  <HelpCircle />\r\n                </Tip>\r\n              </HeaderFour>\r\n              <SmallInput\r\n                placeholder={l('destAddrHint')}\r\n                value={destAddress}\r\n                onChange={e => setDestAddress(e.target.value)}\r\n              />\r\n            </div>\r\n          )}\r\n        </Options>\r\n        <StepButtons\r\n          onCancel={buildSwapView.cancel}\r\n          onNext={handleNext}\r\n          extra={\r\n            <Button ghost borderless onClick={buildSwapView.toggleAddlOptions}>\r\n              <Settings />\r\n              {buildSwapView.addlOptionsVisible ? l('hideOptions') : l('addlOptions')}\r\n            </Button>\r\n          }\r\n        />\r\n      </Config>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapConfigStep);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport Loading from 'components/common/Loading';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n};\r\n\r\nconst SwapProcessingStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.swap.SwapProcessingStep');\r\n\r\n  const { Wrapper } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"loop-progress\">\r\n      <Loading message={l('loadingMsg')} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapProcessingStep);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { HeaderFour, Jumbo } from 'components/base';\r\nimport Unit from 'components/common/Unit';\r\nimport StepButtons from './StepButtons';\r\nimport StepSummary from './StepSummary';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding-top: 5px;\r\n  `,\r\n  Summary: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  Invoice: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n  `,\r\n  InvoiceRow: styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n  `,\r\n  Divider: styled.div`\r\n    border-top: 1px solid ${props => props.theme.colors.darkGray};\r\n    margin-bottom: 30px;\r\n  `,\r\n};\r\n\r\nconst SwapReviewStep: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.swap.SwapReviewStep');\r\n  const { buildSwapView } = useStore();\r\n\r\n  const { Wrapper, Summary, Invoice, InvoiceRow, Divider } = Styled;\r\n  return (\r\n    <Wrapper data-tour=\"loop-review\">\r\n      <Summary>\r\n        <StepSummary title={l('title')} heading={l('heading')} />\r\n      </Summary>\r\n      <Invoice>\r\n        <div>\r\n          <InvoiceRow>\r\n            <HeaderFour marginless>\r\n              {l('amount', { type: buildSwapView.direction })}\r\n            </HeaderFour>\r\n            <span>\r\n              <Unit sats={buildSwapView.amount} />\r\n            </span>\r\n          </InvoiceRow>\r\n          <InvoiceRow>\r\n            <HeaderFour marginless>{l('fees')}</HeaderFour>\r\n            <span>{buildSwapView.feesLabel}</span>\r\n          </InvoiceRow>\r\n          <Divider />\r\n          <InvoiceRow>\r\n            <HeaderFour marginless>{l('total')}</HeaderFour>\r\n            <Jumbo>\r\n              <Unit sats={buildSwapView.invoiceTotal} />\r\n            </Jumbo>\r\n          </InvoiceRow>\r\n        </div>\r\n        <StepButtons\r\n          confirm\r\n          onCancel={buildSwapView.cancel}\r\n          onNext={buildSwapView.goToNextStep}\r\n        />\r\n      </Invoice>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapReviewStep);\r\n","import React, { ReactNode } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { BuildSwapSteps } from 'types/state';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { ArrowLeft } from 'components/base';\r\nimport Tip from 'components/common/Tip';\r\nimport SwapConfigStep from './SwapConfigStep';\r\nimport SwapProcessingStep from './SwapProcessing';\r\nimport SwapReviewStep from './SwapReviewStep';\r\n\r\nconst Styled = {\r\n  Wrapper: styled.section<{ sidebar?: boolean }>`\r\n    display: flex;\r\n    min-height: 360px;\r\n    padding: 30px;\r\n    background-color: ${props => props.theme.colors.darkBlue};\r\n    border-radius: 35px;\r\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.5);\r\n    margin-left: ${props => (props.sidebar ? '0' : '40px')};\r\n  `,\r\n  Nav: styled.div`\r\n    width: 36px;\r\n  `,\r\n  Content: styled.div`\r\n    flex-grow: 1;\r\n    display: flex;\r\n    align-items: stretch;\r\n    flex-direction: row;\r\n  `,\r\n};\r\n\r\nconst SwapWizard: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.swap.SwapWizard');\r\n\r\n  const { buildSwapView, settingsStore } = useStore();\r\n\r\n  let cmp: ReactNode;\r\n  switch (buildSwapView.currentStep) {\r\n    case BuildSwapSteps.ChooseAmount:\r\n      cmp = <SwapConfigStep />;\r\n      break;\r\n    case BuildSwapSteps.ReviewQuote:\r\n      cmp = <SwapReviewStep />;\r\n      break;\r\n    case BuildSwapSteps.Processing:\r\n      cmp = <SwapProcessingStep />;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  const { Wrapper, Nav, Content } = Styled;\r\n  return (\r\n    <Wrapper sidebar={settingsStore.sidebarVisible}>\r\n      <Nav>\r\n        <Tip overlay={l('backTip')}>\r\n          <ArrowLeft onClick={buildSwapView.goToPrevStep} />\r\n        </Tip>\r\n      </Nav>\r\n      <Content>{cmp}</Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default observer(SwapWizard);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport styled from '@emotion/styled';\r\nimport { usePrefixedTranslation } from 'hooks';\r\nimport { useStore } from 'store';\r\nimport { Badge } from 'components/base';\r\nimport PageHeader from 'components/common/PageHeader';\r\nimport SubServerRequired from 'components/common/SubServerRequired';\r\nimport ChannelList from './ChannelList';\r\nimport LoopActions from './LoopActions';\r\nimport LoopTiles from './LoopTiles';\r\nimport ProcessingSwaps from './processing/ProcessingSwaps';\r\nimport SidecarWizard from './sidecar/SidecarWizard';\r\nimport SwapWizard from './swap/SwapWizard';\r\n\r\nconst Styled = {\r\n  PageWrap: styled.div`\r\n    padding: 40px 0;\r\n  `,\r\n};\r\n\r\nconst LoopPage: React.FC = () => {\r\n  const { l } = usePrefixedTranslation('cmps.loop.LoopPage');\r\n  const {\r\n    appView,\r\n    buildSwapView,\r\n    registerSidecarView,\r\n    channelStore,\r\n    nodeStore,\r\n    subServerStore,\r\n  } = useStore();\r\n\r\n  const title = (\r\n    <>\r\n      {l('pageTitle')}\r\n      {nodeStore.network !== 'mainnet' && (\r\n        <div>\r\n          <Badge>{nodeStore.network}</Badge>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  const { PageWrap } = Styled;\r\n  return (\r\n    <SubServerRequired status={subServerStore.subServers.loop}>\r\n      <PageWrap>\r\n        {appView.processingSwapsVisible ? (\r\n          <ProcessingSwaps />\r\n        ) : buildSwapView.showWizard ? (\r\n          <SwapWizard />\r\n        ) : registerSidecarView.showWizard ? (\r\n          <SidecarWizard />\r\n        ) : (\r\n          <>\r\n            <PageHeader\r\n              title={title}\r\n              onHelpClick={appView.showTour}\r\n              onExportClick={channelStore.exportChannels}\r\n            />\r\n            <LoopTiles />\r\n            <LoopActions />\r\n          </>\r\n        )}\r\n        <ChannelList />\r\n      </PageWrap>\r\n    </SubServerRequired>\r\n  );\r\n};\r\n\r\nexport default observer(LoopPage);\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Swap } from 'store/models';\r\nimport StatusDot from 'components/common/StatusDot';\r\n\r\ninterface Props {\r\n  swap: Swap;\r\n}\r\n\r\nconst SwapDot: React.FC<Props> = ({ swap }) => {\r\n  switch (swap.stateLabel) {\r\n    case 'Success':\r\n      return <StatusDot status=\"success\" />;\r\n    case 'Failed':\r\n      return <StatusDot status=\"error\" />;\r\n    default:\r\n      return <StatusDot status=\"warn\" />;\r\n  }\r\n};\r\n\r\nexport default observer(SwapDot);\r\n"],"names":["Styled","Wrapper","styled","a","props","theme","colors","offWhite","href","className","children","target","div","Left","span","Center","Right","BackLink","sizes","xs","observer","title","onBackClick","backText","onHelpClick","exportTip","onExportClick","l","usePrefixedTranslation","onClick","placement","overlay","size","HeaderFour","selected","white","Icon","field","sort","onSort","SortIcon","descending","ArrowDown","ArrowUp","handleSortClick","useCallback","StatusMessage","s","lightningGray","gold","Error","SubServerStatusMessage","isDisabled","errorMessage","status","disabled","error","Box","pink","CheckIcon","Check","checked","onChange","handleClick","role","statusToColor","active","pct","Section","Gap","channel","localPercent","balanceStatus","BaseIcon","green","gray","DirectionIcons","both","withComponent","Chevrons","in","ChevronsRight","out","ChevronsLeft","direction","StatusMap","BalanceStatus","ok","warn","danger","processingSwapsDirection","Tip","capitalize","StatusDot","BaseColumn","Column","Row","darkGray","dimmed","selectable","last","ActionColumn","WideColumn","ClearSortIcon","Cancel","StatusIcon","Checkbox","Balance","ChannelBalance","ROW_HEIGHT","AliasTip","ChannelAliasTip","aliasDetail","split","map","text","ChannelRowHeader","settingsStore","useStore","channelSort","resetChannelSort","right","SortableHeader","setChannelSort","cols","colsXl","style","buildSwapView","editable","listEditable","showWizard","selectedChanIds","includes","chanId","toggleSelectedChannel","undefined","Unit","sats","remoteBalance","suffix","localBalance","remoteFeeRate","remoteFeePct","uptimePercent","ExternalLink","remoteNodeUrl","aliasLabel","capacity","section","ListContainer","disableHeight","width","height","isScrolling","onChildScroll","scrollTop","registerChild","ref","autoHeight","onScroll","rowCount","channels","length","rowHeight","rowRenderer","index","key","count","label","Actions","ActionBar","darkBlue","CloseIcon","Close","Selected","SelectedChannels","Note","Buttons","registerSidecarView","setDirection","inferredDirection","isLoopOutMinimumMet","isLoopInMinimumMet","hasValidLoopInPeers","handleLoopOut","SwapDirection","OUT","handleLoopIn","IN","selectedCount","note","min","formatSats","termsForDirection","showActions","cancel","primary","borderless","startSwap","startRegister","TileWrap","Header","MaximizeIcon","Maximize","Text","xl","tour","onMaximizeClick","marginless","RightColumn","SmallText","Small","swapStore","lastTwoSwaps","swap","SwapDot","createdOn","toLocaleDateString","amount","id","TileSection","channelStore","appView","toggleProcessingSwaps","totalInbound","totalOutbound","ErrorMessage","handleCloseClick","dismissSwap","stateLabel","Dot","Details","ellipsedId","LOOP_IN","SwapType","LOOP_OUT","INITIATED","SwapState","PREIMAGE_REVEALED","HTLC_PUBLISHED","SUCCESS","INVOICE_SETTLED","progressSteps","Track","Status","Fill","state","steps","type","Math","floor","indexOf","typeName","InfoCol","isFailed","sidebar","Content","Complete","ConfirmAnimation","Animation","sidebarVisible","processingSwaps","animationData","confirmJson","Nav","ExtraContent","onCancel","onNext","nextLabel","extra","ghost","Description","Channels","heading","description","Summary","Fields","Input","ticket","goToNextStep","handleTicketChange","e","setTicket","value","placeholder","Loading","message","cmp","currentStep","SidecarRegisterSteps","EnterTicket","ConfirmTicket","Processing","goToPrevStep","RadioBlock","RadioGroup","DisplayValue","Big","max","step","showRadios","handleMinClicked","handleMaxClicked","handleInputClicked","eq","confirm","Config","Options","visible","SmallInput","useState","confTarget","toString","setConfTarget","loopOutAddress","destAddress","setDestAddress","handleNext","addlOptionsVisible","parseInt","setLoopOutAddress","handleError","amountForSelected","AMOUNT_INCREMENT","setAmount","maxWidth","toggleAddlOptions","Invoice","InvoiceRow","Divider","feesLabel","invoiceTotal","BuildSwapSteps","ChooseAmount","ReviewQuote","SwapProcessing","PageWrap","nodeStore","subServerStore","network","SubServerRequired","subServers","loop","processingSwapsVisible","PageHeader","showTour","exportChannels"],"sourceRoot":""}